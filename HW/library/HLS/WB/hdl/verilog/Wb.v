// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Wb,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-2,HLS_INPUT_CLOCK=6.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=5.797600,HLS_SYN_LAT=151,HLS_SYN_TPT=24,HLS_SYN_MEM=0,HLS_SYN_DSP=21,HLS_SYN_FF=14788,HLS_SYN_LUT=6567,HLS_VERSION=2019_1}" *)

module Wb (
        ap_clk,
        ap_rst,
        mu,
        mu_ap_vld,
        x1_real,
        x1_real_ap_vld,
        x1_imag,
        x1_imag_ap_vld,
        x2_real,
        x2_real_ap_vld,
        x2_imag,
        x2_imag_ap_vld,
        x3_real,
        x3_real_ap_vld,
        x3_imag,
        x3_imag_ap_vld,
        x4_real,
        x4_real_ap_vld,
        x4_imag,
        x4_imag_ap_vld,
        x5_real,
        x5_real_ap_vld,
        x5_imag,
        x5_imag_ap_vld,
        x6_real,
        x6_real_ap_vld,
        x6_imag,
        x6_imag_ap_vld,
        x7_real,
        x7_real_ap_vld,
        x7_imag,
        x7_imag_ap_vld,
        x8_real,
        x8_real_ap_vld,
        x8_imag,
        x8_imag_ap_vld,
        x9_real,
        x9_real_ap_vld,
        x9_imag,
        x9_imag_ap_vld,
        W1_old_real,
        W1_old_real_ap_vld,
        W1_old_imag,
        W1_old_imag_ap_vld,
        W2_old_real,
        W2_old_real_ap_vld,
        W2_old_imag,
        W2_old_imag_ap_vld,
        W3_old_real,
        W3_old_real_ap_vld,
        W3_old_imag,
        W3_old_imag_ap_vld,
        W4_old_real,
        W4_old_real_ap_vld,
        W4_old_imag,
        W4_old_imag_ap_vld,
        W5_old_real,
        W5_old_real_ap_vld,
        W5_old_imag,
        W5_old_imag_ap_vld,
        W6_old_real,
        W6_old_real_ap_vld,
        W6_old_imag,
        W6_old_imag_ap_vld,
        W7_old_real,
        W7_old_real_ap_vld,
        W7_old_imag,
        W7_old_imag_ap_vld,
        W8_old_real,
        W8_old_real_ap_vld,
        W8_old_imag,
        W8_old_imag_ap_vld,
        W9_old_real,
        W9_old_real_ap_vld,
        W9_old_imag,
        W9_old_imag_ap_vld,
        err_real,
        err_real_ap_vld,
        err_imag,
        err_imag_ap_vld,
        W1_real,
        W1_real_ap_vld,
        W1_imag,
        W1_imag_ap_vld,
        W2_real,
        W2_real_ap_vld,
        W2_imag,
        W2_imag_ap_vld,
        W3_real,
        W3_real_ap_vld,
        W3_imag,
        W3_imag_ap_vld,
        W4_real,
        W4_real_ap_vld,
        W4_imag,
        W4_imag_ap_vld,
        W5_real,
        W5_real_ap_vld,
        W5_imag,
        W5_imag_ap_vld,
        W6_real,
        W6_real_ap_vld,
        W6_imag,
        W6_imag_ap_vld,
        W7_real,
        W7_real_ap_vld,
        W7_imag,
        W7_imag_ap_vld,
        W8_real,
        W8_real_ap_vld,
        W8_imag,
        W8_imag_ap_vld,
        W9_real,
        W9_real_ap_vld,
        W9_imag,
        W9_imag_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 24'd1;
parameter    ap_ST_fsm_pp0_stage1 = 24'd2;
parameter    ap_ST_fsm_pp0_stage2 = 24'd4;
parameter    ap_ST_fsm_pp0_stage3 = 24'd8;
parameter    ap_ST_fsm_pp0_stage4 = 24'd16;
parameter    ap_ST_fsm_pp0_stage5 = 24'd32;
parameter    ap_ST_fsm_pp0_stage6 = 24'd64;
parameter    ap_ST_fsm_pp0_stage7 = 24'd128;
parameter    ap_ST_fsm_pp0_stage8 = 24'd256;
parameter    ap_ST_fsm_pp0_stage9 = 24'd512;
parameter    ap_ST_fsm_pp0_stage10 = 24'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 24'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 24'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 24'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 24'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 24'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 24'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 24'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 24'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 24'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 24'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 24'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 24'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 24'd8388608;

input   ap_clk;
input   ap_rst;
input  [31:0] mu;
input   mu_ap_vld;
input  [31:0] x1_real;
input   x1_real_ap_vld;
input  [31:0] x1_imag;
input   x1_imag_ap_vld;
input  [31:0] x2_real;
input   x2_real_ap_vld;
input  [31:0] x2_imag;
input   x2_imag_ap_vld;
input  [31:0] x3_real;
input   x3_real_ap_vld;
input  [31:0] x3_imag;
input   x3_imag_ap_vld;
input  [31:0] x4_real;
input   x4_real_ap_vld;
input  [31:0] x4_imag;
input   x4_imag_ap_vld;
input  [31:0] x5_real;
input   x5_real_ap_vld;
input  [31:0] x5_imag;
input   x5_imag_ap_vld;
input  [31:0] x6_real;
input   x6_real_ap_vld;
input  [31:0] x6_imag;
input   x6_imag_ap_vld;
input  [31:0] x7_real;
input   x7_real_ap_vld;
input  [31:0] x7_imag;
input   x7_imag_ap_vld;
input  [31:0] x8_real;
input   x8_real_ap_vld;
input  [31:0] x8_imag;
input   x8_imag_ap_vld;
input  [31:0] x9_real;
input   x9_real_ap_vld;
input  [31:0] x9_imag;
input   x9_imag_ap_vld;
input  [31:0] W1_old_real;
input   W1_old_real_ap_vld;
input  [31:0] W1_old_imag;
input   W1_old_imag_ap_vld;
input  [31:0] W2_old_real;
input   W2_old_real_ap_vld;
input  [31:0] W2_old_imag;
input   W2_old_imag_ap_vld;
input  [31:0] W3_old_real;
input   W3_old_real_ap_vld;
input  [31:0] W3_old_imag;
input   W3_old_imag_ap_vld;
input  [31:0] W4_old_real;
input   W4_old_real_ap_vld;
input  [31:0] W4_old_imag;
input   W4_old_imag_ap_vld;
input  [31:0] W5_old_real;
input   W5_old_real_ap_vld;
input  [31:0] W5_old_imag;
input   W5_old_imag_ap_vld;
input  [31:0] W6_old_real;
input   W6_old_real_ap_vld;
input  [31:0] W6_old_imag;
input   W6_old_imag_ap_vld;
input  [31:0] W7_old_real;
input   W7_old_real_ap_vld;
input  [31:0] W7_old_imag;
input   W7_old_imag_ap_vld;
input  [31:0] W8_old_real;
input   W8_old_real_ap_vld;
input  [31:0] W8_old_imag;
input   W8_old_imag_ap_vld;
input  [31:0] W9_old_real;
input   W9_old_real_ap_vld;
input  [31:0] W9_old_imag;
input   W9_old_imag_ap_vld;
input  [31:0] err_real;
input   err_real_ap_vld;
input  [31:0] err_imag;
input   err_imag_ap_vld;
output  [31:0] W1_real;
output   W1_real_ap_vld;
output  [31:0] W1_imag;
output   W1_imag_ap_vld;
output  [31:0] W2_real;
output   W2_real_ap_vld;
output  [31:0] W2_imag;
output   W2_imag_ap_vld;
output  [31:0] W3_real;
output   W3_real_ap_vld;
output  [31:0] W3_imag;
output   W3_imag_ap_vld;
output  [31:0] W4_real;
output   W4_real_ap_vld;
output  [31:0] W4_imag;
output   W4_imag_ap_vld;
output  [31:0] W5_real;
output   W5_real_ap_vld;
output  [31:0] W5_imag;
output   W5_imag_ap_vld;
output  [31:0] W6_real;
output   W6_real_ap_vld;
output  [31:0] W6_imag;
output   W6_imag_ap_vld;
output  [31:0] W7_real;
output   W7_real_ap_vld;
output  [31:0] W7_imag;
output   W7_imag_ap_vld;
output  [31:0] W8_real;
output   W8_real_ap_vld;
output  [31:0] W8_imag;
output   W8_imag_ap_vld;
output  [31:0] W9_real;
output   W9_real_ap_vld;
output  [31:0] W9_imag;
output   W9_imag_ap_vld;

reg W1_real_ap_vld;
reg W1_imag_ap_vld;
reg W2_real_ap_vld;
reg W2_imag_ap_vld;
reg W3_real_ap_vld;
reg W3_imag_ap_vld;
reg W4_real_ap_vld;
reg W4_imag_ap_vld;
reg W5_real_ap_vld;
reg W5_imag_ap_vld;
reg W6_real_ap_vld;
reg W6_imag_ap_vld;
reg W7_real_ap_vld;
reg W7_imag_ap_vld;
reg W8_real_ap_vld;
reg W8_imag_ap_vld;
reg W9_real_ap_vld;
reg W9_imag_ap_vld;

reg   [31:0] mu_preg;
reg   [31:0] mu_in_sig;
reg    mu_ap_vld_preg;
reg    mu_ap_vld_in_sig;
reg   [31:0] x1_real_preg;
reg   [31:0] x1_real_in_sig;
reg    x1_real_ap_vld_preg;
reg    x1_real_ap_vld_in_sig;
reg   [31:0] x1_imag_preg;
reg   [31:0] x1_imag_in_sig;
reg    x1_imag_ap_vld_preg;
reg    x1_imag_ap_vld_in_sig;
reg   [31:0] x2_real_preg;
reg   [31:0] x2_real_in_sig;
reg    x2_real_ap_vld_preg;
reg    x2_real_ap_vld_in_sig;
reg   [31:0] x2_imag_preg;
reg   [31:0] x2_imag_in_sig;
reg    x2_imag_ap_vld_preg;
reg    x2_imag_ap_vld_in_sig;
reg   [31:0] x3_real_preg;
reg   [31:0] x3_real_in_sig;
reg    x3_real_ap_vld_preg;
reg    x3_real_ap_vld_in_sig;
reg   [31:0] x3_imag_preg;
reg   [31:0] x3_imag_in_sig;
reg    x3_imag_ap_vld_preg;
reg    x3_imag_ap_vld_in_sig;
reg   [31:0] x4_real_preg;
reg   [31:0] x4_real_in_sig;
reg    x4_real_ap_vld_preg;
reg    x4_real_ap_vld_in_sig;
reg   [31:0] x4_imag_preg;
reg   [31:0] x4_imag_in_sig;
reg    x4_imag_ap_vld_preg;
reg    x4_imag_ap_vld_in_sig;
reg   [31:0] x5_real_preg;
reg   [31:0] x5_real_in_sig;
reg    x5_real_ap_vld_preg;
reg    x5_real_ap_vld_in_sig;
reg   [31:0] x5_imag_preg;
reg   [31:0] x5_imag_in_sig;
reg    x5_imag_ap_vld_preg;
reg    x5_imag_ap_vld_in_sig;
reg   [31:0] x6_real_preg;
reg   [31:0] x6_real_in_sig;
reg    x6_real_ap_vld_preg;
reg    x6_real_ap_vld_in_sig;
reg   [31:0] x6_imag_preg;
reg   [31:0] x6_imag_in_sig;
reg    x6_imag_ap_vld_preg;
reg    x6_imag_ap_vld_in_sig;
reg   [31:0] x7_real_preg;
reg   [31:0] x7_real_in_sig;
reg    x7_real_ap_vld_preg;
reg    x7_real_ap_vld_in_sig;
reg   [31:0] x7_imag_preg;
reg   [31:0] x7_imag_in_sig;
reg    x7_imag_ap_vld_preg;
reg    x7_imag_ap_vld_in_sig;
reg   [31:0] x8_real_preg;
reg   [31:0] x8_real_in_sig;
reg    x8_real_ap_vld_preg;
reg    x8_real_ap_vld_in_sig;
reg   [31:0] x8_imag_preg;
reg   [31:0] x8_imag_in_sig;
reg    x8_imag_ap_vld_preg;
reg    x8_imag_ap_vld_in_sig;
reg   [31:0] x9_real_preg;
reg   [31:0] x9_real_in_sig;
reg    x9_real_ap_vld_preg;
reg    x9_real_ap_vld_in_sig;
reg   [31:0] x9_imag_preg;
reg   [31:0] x9_imag_in_sig;
reg    x9_imag_ap_vld_preg;
reg    x9_imag_ap_vld_in_sig;
reg   [31:0] W1_old_real_preg;
reg   [31:0] W1_old_real_in_sig;
reg    W1_old_real_ap_vld_preg;
reg    W1_old_real_ap_vld_in_sig;
reg   [31:0] W1_old_imag_preg;
reg   [31:0] W1_old_imag_in_sig;
reg    W1_old_imag_ap_vld_preg;
reg    W1_old_imag_ap_vld_in_sig;
reg   [31:0] W2_old_real_preg;
reg   [31:0] W2_old_real_in_sig;
reg    W2_old_real_ap_vld_preg;
reg    W2_old_real_ap_vld_in_sig;
reg   [31:0] W2_old_imag_preg;
reg   [31:0] W2_old_imag_in_sig;
reg    W2_old_imag_ap_vld_preg;
reg    W2_old_imag_ap_vld_in_sig;
reg   [31:0] W3_old_real_preg;
reg   [31:0] W3_old_real_in_sig;
reg    W3_old_real_ap_vld_preg;
reg    W3_old_real_ap_vld_in_sig;
reg   [31:0] W3_old_imag_preg;
reg   [31:0] W3_old_imag_in_sig;
reg    W3_old_imag_ap_vld_preg;
reg    W3_old_imag_ap_vld_in_sig;
reg   [31:0] W4_old_real_preg;
reg   [31:0] W4_old_real_in_sig;
reg    W4_old_real_ap_vld_preg;
reg    W4_old_real_ap_vld_in_sig;
reg   [31:0] W4_old_imag_preg;
reg   [31:0] W4_old_imag_in_sig;
reg    W4_old_imag_ap_vld_preg;
reg    W4_old_imag_ap_vld_in_sig;
reg   [31:0] W5_old_real_preg;
reg   [31:0] W5_old_real_in_sig;
reg    W5_old_real_ap_vld_preg;
reg    W5_old_real_ap_vld_in_sig;
reg   [31:0] W5_old_imag_preg;
reg   [31:0] W5_old_imag_in_sig;
reg    W5_old_imag_ap_vld_preg;
reg    W5_old_imag_ap_vld_in_sig;
reg   [31:0] W6_old_real_preg;
reg   [31:0] W6_old_real_in_sig;
reg    W6_old_real_ap_vld_preg;
reg    W6_old_real_ap_vld_in_sig;
reg   [31:0] W6_old_imag_preg;
reg   [31:0] W6_old_imag_in_sig;
reg    W6_old_imag_ap_vld_preg;
reg    W6_old_imag_ap_vld_in_sig;
reg   [31:0] W7_old_real_preg;
reg   [31:0] W7_old_real_in_sig;
reg    W7_old_real_ap_vld_preg;
reg    W7_old_real_ap_vld_in_sig;
reg   [31:0] W7_old_imag_preg;
reg   [31:0] W7_old_imag_in_sig;
reg    W7_old_imag_ap_vld_preg;
reg    W7_old_imag_ap_vld_in_sig;
reg   [31:0] W8_old_real_preg;
reg   [31:0] W8_old_real_in_sig;
reg    W8_old_real_ap_vld_preg;
reg    W8_old_real_ap_vld_in_sig;
reg   [31:0] W8_old_imag_preg;
reg   [31:0] W8_old_imag_in_sig;
reg    W8_old_imag_ap_vld_preg;
reg    W8_old_imag_ap_vld_in_sig;
reg   [31:0] W9_old_real_preg;
reg   [31:0] W9_old_real_in_sig;
reg    W9_old_real_ap_vld_preg;
reg    W9_old_real_ap_vld_in_sig;
reg   [31:0] W9_old_imag_preg;
reg   [31:0] W9_old_imag_in_sig;
reg    W9_old_imag_ap_vld_preg;
reg    W9_old_imag_ap_vld_in_sig;
reg   [31:0] err_real_preg;
reg   [31:0] err_real_in_sig;
reg    err_real_ap_vld_preg;
reg    err_real_ap_vld_in_sig;
reg   [31:0] err_imag_preg;
reg   [31:0] err_imag_in_sig;
reg    err_imag_ap_vld_preg;
reg    err_imag_ap_vld_in_sig;
reg    mu_blk_n;
(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0;
reg    x1_real_blk_n;
reg    x1_imag_blk_n;
reg    x2_real_blk_n;
reg    x2_imag_blk_n;
reg    x3_real_blk_n;
reg    x3_imag_blk_n;
reg    x4_real_blk_n;
reg    x4_imag_blk_n;
reg    x5_real_blk_n;
reg    x5_imag_blk_n;
reg    x6_real_blk_n;
reg    x6_imag_blk_n;
reg    x7_real_blk_n;
reg    x7_imag_blk_n;
reg    x8_real_blk_n;
reg    x8_imag_blk_n;
reg    x9_real_blk_n;
reg    x9_imag_blk_n;
reg    W1_old_real_blk_n;
reg    W1_old_imag_blk_n;
reg    W2_old_real_blk_n;
reg    W2_old_imag_blk_n;
reg    W3_old_real_blk_n;
reg    W3_old_imag_blk_n;
reg    W4_old_real_blk_n;
reg    W4_old_imag_blk_n;
reg    W5_old_real_blk_n;
reg    W5_old_imag_blk_n;
reg    W6_old_real_blk_n;
reg    W6_old_imag_blk_n;
reg    W7_old_real_blk_n;
reg    W7_old_imag_blk_n;
reg    W8_old_real_blk_n;
reg    W8_old_imag_blk_n;
reg    W9_old_real_blk_n;
reg    W9_old_imag_blk_n;
reg    err_real_blk_n;
reg    err_imag_blk_n;
reg   [31:0] w_imag_load_1_reg_534;
reg   [31:0] w_real_load_1_reg_544;
reg   [31:0] w_imag_load_2_reg_554;
reg   [31:0] w_real_load_2_reg_564;
reg   [31:0] w_imag_load_3_reg_574;
reg   [31:0] w_real_load_3_reg_584;
reg   [31:0] w_imag_load_4_reg_594;
reg   [31:0] w_real_load_4_reg_604;
reg   [31:0] w_imag_load_8_reg_674;
reg   [31:0] w_real_load_8_reg_684;
wire   [31:0] grp_fu_743_p2;
reg   [31:0] reg_782;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state28_pp0_stage3_iter1;
wire    ap_block_state52_pp0_stage3_iter2;
wire    ap_block_state76_pp0_stage3_iter3;
wire    ap_block_state100_pp0_stage3_iter4;
wire    ap_block_state124_pp0_stage3_iter5;
wire    ap_block_state148_pp0_stage3_iter6;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage19;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_state20_pp0_stage19_iter0;
wire    ap_block_state44_pp0_stage19_iter1;
wire    ap_block_state68_pp0_stage19_iter2;
wire    ap_block_state92_pp0_stage19_iter3;
wire    ap_block_state116_pp0_stage19_iter4;
wire    ap_block_state140_pp0_stage19_iter5;
wire    ap_block_pp0_stage19_11001;
reg   [0:0] and_ln82_reg_1557;
wire   [31:0] grp_fu_749_p2;
reg   [31:0] reg_788;
reg   [31:0] reg_794;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state29_pp0_stage4_iter1;
wire    ap_block_state53_pp0_stage4_iter2;
wire    ap_block_state77_pp0_stage4_iter3;
wire    ap_block_state101_pp0_stage4_iter4;
wire    ap_block_state125_pp0_stage4_iter5;
wire    ap_block_state149_pp0_stage4_iter6;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_state21_pp0_stage20_iter0;
wire    ap_block_state45_pp0_stage20_iter1;
wire    ap_block_state69_pp0_stage20_iter2;
wire    ap_block_state93_pp0_stage20_iter3;
wire    ap_block_state117_pp0_stage20_iter4;
wire    ap_block_state141_pp0_stage20_iter5;
wire    ap_block_pp0_stage20_11001;
reg   [31:0] reg_800;
wire   [31:0] grp_fu_755_p2;
reg   [31:0] reg_806;
wire   [31:0] grp_fu_761_p2;
reg   [31:0] reg_812;
wire   [31:0] grp_fu_767_p2;
reg   [31:0] reg_818;
reg   [31:0] reg_824;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state30_pp0_stage5_iter1;
wire    ap_block_state54_pp0_stage5_iter2;
wire    ap_block_state78_pp0_stage5_iter3;
wire    ap_block_state102_pp0_stage5_iter4;
wire    ap_block_state126_pp0_stage5_iter5;
wire    ap_block_state150_pp0_stage5_iter6;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_state22_pp0_stage21_iter0;
wire    ap_block_state46_pp0_stage21_iter1;
wire    ap_block_state70_pp0_stage21_iter2;
wire    ap_block_state94_pp0_stage21_iter3;
wire    ap_block_state118_pp0_stage21_iter4;
wire    ap_block_state142_pp0_stage21_iter5;
wire    ap_block_pp0_stage21_11001;
reg   [31:0] reg_830;
reg   [31:0] reg_836;
reg   [31:0] reg_842;
reg   [31:0] reg_848;
reg   [31:0] reg_854;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state31_pp0_stage6_iter1;
wire    ap_block_state55_pp0_stage6_iter2;
wire    ap_block_state79_pp0_stage6_iter3;
wire    ap_block_state103_pp0_stage6_iter4;
wire    ap_block_state127_pp0_stage6_iter5;
wire    ap_block_state151_pp0_stage6_iter6;
wire    ap_block_pp0_stage6_11001;
reg   [31:0] reg_860;
reg   [31:0] reg_866;
reg   [31:0] reg_871;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state32_pp0_stage7_iter1;
wire    ap_block_state56_pp0_stage7_iter2;
wire    ap_block_state80_pp0_stage7_iter3;
wire    ap_block_state104_pp0_stage7_iter4;
wire    ap_block_state128_pp0_stage7_iter5;
wire    ap_block_state152_pp0_stage7_iter6;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_state23_pp0_stage22_iter0;
wire    ap_block_state47_pp0_stage22_iter1;
wire    ap_block_state71_pp0_stage22_iter2;
wire    ap_block_state95_pp0_stage22_iter3;
wire    ap_block_state119_pp0_stage22_iter4;
wire    ap_block_state143_pp0_stage22_iter5;
wire    ap_block_pp0_stage22_11001;
reg   [31:0] reg_877;
reg   [31:0] reg_882;
wire   [31:0] grp_fu_694_p2;
reg   [31:0] reg_888;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_state36_pp0_stage11_iter1;
wire    ap_block_state60_pp0_stage11_iter2;
wire    ap_block_state84_pp0_stage11_iter3;
wire    ap_block_state108_pp0_stage11_iter4;
wire    ap_block_state132_pp0_stage11_iter5;
wire    ap_block_pp0_stage11_11001;
reg    ap_enable_reg_pp0_iter1;
wire   [31:0] grp_fu_698_p2;
reg   [31:0] reg_894;
reg    ap_enable_reg_pp0_iter4;
reg   [31:0] reg_900;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_state17_pp0_stage16_iter0;
wire    ap_block_state41_pp0_stage16_iter1;
wire    ap_block_state65_pp0_stage16_iter2;
wire    ap_block_state89_pp0_stage16_iter3;
wire    ap_block_state113_pp0_stage16_iter4;
wire    ap_block_state137_pp0_stage16_iter5;
wire    ap_block_pp0_stage16_11001;
reg   [31:0] reg_906;
reg    ap_enable_reg_pp0_iter2;
wire   [31:0] grp_fu_702_p2;
reg   [31:0] reg_912;
reg   [31:0] reg_918;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_state18_pp0_stage17_iter0;
wire    ap_block_state42_pp0_stage17_iter1;
wire    ap_block_state66_pp0_stage17_iter2;
wire    ap_block_state90_pp0_stage17_iter3;
wire    ap_block_state114_pp0_stage17_iter4;
wire    ap_block_state138_pp0_stage17_iter5;
wire    ap_block_pp0_stage17_11001;
reg   [31:0] reg_924;
reg   [31:0] reg_930;
reg   [31:0] reg_936;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_state19_pp0_stage18_iter0;
wire    ap_block_state43_pp0_stage18_iter1;
wire    ap_block_state67_pp0_stage18_iter2;
wire    ap_block_state91_pp0_stage18_iter3;
wire    ap_block_state115_pp0_stage18_iter4;
wire    ap_block_state139_pp0_stage18_iter5;
wire    ap_block_pp0_stage18_11001;
reg   [31:0] reg_942;
reg   [31:0] reg_948;
reg   [31:0] reg_953;
wire   [31:0] grp_fu_773_p2;
reg   [31:0] reg_959;
reg    ap_enable_reg_pp0_iter5;
reg   [0:0] and_ln82_reg_1557_pp0_iter4_reg;
reg   [31:0] reg_966;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state33_pp0_stage8_iter1;
wire    ap_block_state57_pp0_stage8_iter2;
wire    ap_block_state81_pp0_stage8_iter3;
wire    ap_block_state105_pp0_stage8_iter4;
wire    ap_block_state129_pp0_stage8_iter5;
wire    ap_block_pp0_stage8_11001;
reg   [31:0] reg_972;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_state35_pp0_stage10_iter1;
wire    ap_block_state59_pp0_stage10_iter2;
wire    ap_block_state83_pp0_stage10_iter3;
wire    ap_block_state107_pp0_stage10_iter4;
wire    ap_block_state131_pp0_stage10_iter5;
wire    ap_block_pp0_stage10_11001;
reg   [31:0] reg_978;
reg   [31:0] reg_984;
reg   [31:0] reg_990;
reg   [31:0] reg_996;
reg   [31:0] reg_1002;
reg   [31:0] reg_1002_pp0_iter5_reg;
reg   [31:0] reg_1008;
reg   [31:0] reg_1008_pp0_iter5_reg;
reg   [31:0] reg_1014;
reg   [31:0] reg_1014_pp0_iter5_reg;
reg   [31:0] reg_1020;
reg   [31:0] reg_1020_pp0_iter5_reg;
reg   [31:0] reg_1026;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state27_pp0_stage2_iter1;
wire    ap_block_state51_pp0_stage2_iter2;
wire    ap_block_state75_pp0_stage2_iter3;
wire    ap_block_state99_pp0_stage2_iter4;
wire    ap_block_state123_pp0_stage2_iter5;
wire    ap_block_state147_pp0_stage2_iter6;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] and_ln82_reg_1557_pp0_iter5_reg;
reg   [31:0] err_imag_read_reg_1091;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state25_pp0_stage0_iter1;
wire    ap_block_state49_pp0_stage0_iter2;
wire    ap_block_state73_pp0_stage0_iter3;
wire    ap_block_state97_pp0_stage0_iter4;
wire    ap_block_state121_pp0_stage0_iter5;
wire    ap_block_state145_pp0_stage0_iter6;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] err_real_read_reg_1096;
reg   [31:0] err_real_read_reg_1096_pp0_iter1_reg;
reg   [31:0] err_real_read_reg_1096_pp0_iter2_reg;
reg   [31:0] err_real_read_reg_1096_pp0_iter3_reg;
reg   [31:0] W9_old_imag_read_reg_1105;
reg   [31:0] W9_old_imag_read_reg_1105_pp0_iter1_reg;
reg   [31:0] W9_old_imag_read_reg_1105_pp0_iter2_reg;
reg   [31:0] W9_old_imag_read_reg_1105_pp0_iter3_reg;
reg   [31:0] W9_old_imag_read_reg_1105_pp0_iter4_reg;
reg   [31:0] W9_old_imag_read_reg_1105_pp0_iter5_reg;
reg   [31:0] W9_old_real_read_reg_1110;
reg   [31:0] W9_old_real_read_reg_1110_pp0_iter1_reg;
reg   [31:0] W9_old_real_read_reg_1110_pp0_iter2_reg;
reg   [31:0] W9_old_real_read_reg_1110_pp0_iter3_reg;
reg   [31:0] W9_old_real_read_reg_1110_pp0_iter4_reg;
reg   [31:0] W9_old_real_read_reg_1110_pp0_iter5_reg;
reg   [31:0] W8_old_imag_read_reg_1115;
reg   [31:0] W8_old_imag_read_reg_1115_pp0_iter1_reg;
reg   [31:0] W8_old_imag_read_reg_1115_pp0_iter2_reg;
reg   [31:0] W8_old_imag_read_reg_1115_pp0_iter3_reg;
reg   [31:0] W8_old_imag_read_reg_1115_pp0_iter4_reg;
reg   [31:0] W8_old_imag_read_reg_1115_pp0_iter5_reg;
reg   [31:0] W8_old_real_read_reg_1120;
reg   [31:0] W8_old_real_read_reg_1120_pp0_iter1_reg;
reg   [31:0] W8_old_real_read_reg_1120_pp0_iter2_reg;
reg   [31:0] W8_old_real_read_reg_1120_pp0_iter3_reg;
reg   [31:0] W8_old_real_read_reg_1120_pp0_iter4_reg;
reg   [31:0] W8_old_real_read_reg_1120_pp0_iter5_reg;
reg   [31:0] W7_old_imag_read_reg_1125;
reg   [31:0] W7_old_imag_read_reg_1125_pp0_iter1_reg;
reg   [31:0] W7_old_imag_read_reg_1125_pp0_iter2_reg;
reg   [31:0] W7_old_imag_read_reg_1125_pp0_iter3_reg;
reg   [31:0] W7_old_imag_read_reg_1125_pp0_iter4_reg;
reg   [31:0] W7_old_imag_read_reg_1125_pp0_iter5_reg;
reg   [31:0] W7_old_real_read_reg_1130;
reg   [31:0] W7_old_real_read_reg_1130_pp0_iter1_reg;
reg   [31:0] W7_old_real_read_reg_1130_pp0_iter2_reg;
reg   [31:0] W7_old_real_read_reg_1130_pp0_iter3_reg;
reg   [31:0] W7_old_real_read_reg_1130_pp0_iter4_reg;
reg   [31:0] W7_old_real_read_reg_1130_pp0_iter5_reg;
reg   [31:0] W6_old_imag_read_reg_1135;
reg   [31:0] W6_old_imag_read_reg_1135_pp0_iter1_reg;
reg   [31:0] W6_old_imag_read_reg_1135_pp0_iter2_reg;
reg   [31:0] W6_old_imag_read_reg_1135_pp0_iter3_reg;
reg   [31:0] W6_old_imag_read_reg_1135_pp0_iter4_reg;
reg   [31:0] W6_old_imag_read_reg_1135_pp0_iter5_reg;
reg   [31:0] W6_old_real_read_reg_1140;
reg   [31:0] W6_old_real_read_reg_1140_pp0_iter1_reg;
reg   [31:0] W6_old_real_read_reg_1140_pp0_iter2_reg;
reg   [31:0] W6_old_real_read_reg_1140_pp0_iter3_reg;
reg   [31:0] W6_old_real_read_reg_1140_pp0_iter4_reg;
reg   [31:0] W6_old_real_read_reg_1140_pp0_iter5_reg;
reg   [31:0] W5_old_imag_read_reg_1145;
reg   [31:0] W5_old_imag_read_reg_1145_pp0_iter1_reg;
reg   [31:0] W5_old_imag_read_reg_1145_pp0_iter2_reg;
reg   [31:0] W5_old_imag_read_reg_1145_pp0_iter3_reg;
reg   [31:0] W5_old_imag_read_reg_1145_pp0_iter4_reg;
reg   [31:0] W5_old_imag_read_reg_1145_pp0_iter5_reg;
reg   [31:0] W5_old_real_read_reg_1150;
reg   [31:0] W5_old_real_read_reg_1150_pp0_iter1_reg;
reg   [31:0] W5_old_real_read_reg_1150_pp0_iter2_reg;
reg   [31:0] W5_old_real_read_reg_1150_pp0_iter3_reg;
reg   [31:0] W5_old_real_read_reg_1150_pp0_iter4_reg;
reg   [31:0] W5_old_real_read_reg_1150_pp0_iter5_reg;
reg   [31:0] W4_old_imag_read_reg_1155;
reg   [31:0] W4_old_imag_read_reg_1155_pp0_iter1_reg;
reg   [31:0] W4_old_imag_read_reg_1155_pp0_iter2_reg;
reg   [31:0] W4_old_imag_read_reg_1155_pp0_iter3_reg;
reg   [31:0] W4_old_imag_read_reg_1155_pp0_iter4_reg;
reg   [31:0] W4_old_imag_read_reg_1155_pp0_iter5_reg;
reg   [31:0] W4_old_real_read_reg_1160;
reg   [31:0] W4_old_real_read_reg_1160_pp0_iter1_reg;
reg   [31:0] W4_old_real_read_reg_1160_pp0_iter2_reg;
reg   [31:0] W4_old_real_read_reg_1160_pp0_iter3_reg;
reg   [31:0] W4_old_real_read_reg_1160_pp0_iter4_reg;
reg   [31:0] W4_old_real_read_reg_1160_pp0_iter5_reg;
reg   [31:0] W3_old_imag_read_reg_1165;
reg   [31:0] W3_old_imag_read_reg_1165_pp0_iter1_reg;
reg   [31:0] W3_old_imag_read_reg_1165_pp0_iter2_reg;
reg   [31:0] W3_old_imag_read_reg_1165_pp0_iter3_reg;
reg   [31:0] W3_old_imag_read_reg_1165_pp0_iter4_reg;
reg   [31:0] W3_old_imag_read_reg_1165_pp0_iter5_reg;
reg   [31:0] W3_old_real_read_reg_1170;
reg   [31:0] W3_old_real_read_reg_1170_pp0_iter1_reg;
reg   [31:0] W3_old_real_read_reg_1170_pp0_iter2_reg;
reg   [31:0] W3_old_real_read_reg_1170_pp0_iter3_reg;
reg   [31:0] W3_old_real_read_reg_1170_pp0_iter4_reg;
reg   [31:0] W3_old_real_read_reg_1170_pp0_iter5_reg;
reg   [31:0] W2_old_imag_read_reg_1175;
reg   [31:0] W2_old_imag_read_reg_1175_pp0_iter1_reg;
reg   [31:0] W2_old_imag_read_reg_1175_pp0_iter2_reg;
reg   [31:0] W2_old_imag_read_reg_1175_pp0_iter3_reg;
reg   [31:0] W2_old_imag_read_reg_1175_pp0_iter4_reg;
reg   [31:0] W2_old_imag_read_reg_1175_pp0_iter5_reg;
reg   [31:0] W2_old_real_read_reg_1180;
reg   [31:0] W2_old_real_read_reg_1180_pp0_iter1_reg;
reg   [31:0] W2_old_real_read_reg_1180_pp0_iter2_reg;
reg   [31:0] W2_old_real_read_reg_1180_pp0_iter3_reg;
reg   [31:0] W2_old_real_read_reg_1180_pp0_iter4_reg;
reg   [31:0] W2_old_real_read_reg_1180_pp0_iter5_reg;
reg   [31:0] W1_old_imag_read_reg_1185;
reg   [31:0] W1_old_imag_read_reg_1185_pp0_iter1_reg;
reg   [31:0] W1_old_imag_read_reg_1185_pp0_iter2_reg;
reg   [31:0] W1_old_imag_read_reg_1185_pp0_iter3_reg;
reg   [31:0] W1_old_imag_read_reg_1185_pp0_iter4_reg;
reg   [31:0] W1_old_imag_read_reg_1185_pp0_iter5_reg;
reg   [31:0] W1_old_real_read_reg_1190;
reg   [31:0] W1_old_real_read_reg_1190_pp0_iter1_reg;
reg   [31:0] W1_old_real_read_reg_1190_pp0_iter2_reg;
reg   [31:0] W1_old_real_read_reg_1190_pp0_iter3_reg;
reg   [31:0] W1_old_real_read_reg_1190_pp0_iter4_reg;
reg   [31:0] W1_old_real_read_reg_1190_pp0_iter5_reg;
reg   [31:0] x9_imag_read_reg_1195;
reg   [31:0] x9_imag_read_reg_1195_pp0_iter1_reg;
reg   [31:0] x9_imag_read_reg_1195_pp0_iter2_reg;
reg   [31:0] x9_imag_read_reg_1195_pp0_iter3_reg;
reg   [31:0] x9_real_read_reg_1203;
reg   [31:0] x9_real_read_reg_1203_pp0_iter1_reg;
reg   [31:0] x9_real_read_reg_1203_pp0_iter2_reg;
reg   [31:0] x9_real_read_reg_1203_pp0_iter3_reg;
reg   [31:0] x8_imag_read_reg_1210;
reg   [31:0] x8_imag_read_reg_1210_pp0_iter1_reg;
reg   [31:0] x8_imag_read_reg_1210_pp0_iter2_reg;
reg   [31:0] x8_imag_read_reg_1210_pp0_iter3_reg;
reg   [31:0] x8_real_read_reg_1217;
reg   [31:0] x8_real_read_reg_1217_pp0_iter1_reg;
reg   [31:0] x8_real_read_reg_1217_pp0_iter2_reg;
reg   [31:0] x8_real_read_reg_1217_pp0_iter3_reg;
reg   [31:0] x7_imag_read_reg_1225;
reg   [31:0] x7_imag_read_reg_1225_pp0_iter1_reg;
reg   [31:0] x7_imag_read_reg_1225_pp0_iter2_reg;
reg   [31:0] x7_imag_read_reg_1225_pp0_iter3_reg;
reg   [31:0] x7_real_read_reg_1232;
reg   [31:0] x7_real_read_reg_1232_pp0_iter1_reg;
reg   [31:0] x7_real_read_reg_1232_pp0_iter2_reg;
reg   [31:0] x7_real_read_reg_1232_pp0_iter3_reg;
reg   [31:0] x6_imag_read_reg_1240;
reg   [31:0] x6_imag_read_reg_1240_pp0_iter1_reg;
reg   [31:0] x6_imag_read_reg_1240_pp0_iter2_reg;
reg   [31:0] x6_imag_read_reg_1240_pp0_iter3_reg;
reg   [31:0] x6_real_read_reg_1248;
reg   [31:0] x6_real_read_reg_1248_pp0_iter1_reg;
reg   [31:0] x6_real_read_reg_1248_pp0_iter2_reg;
reg   [31:0] x6_real_read_reg_1248_pp0_iter3_reg;
reg   [31:0] x5_imag_read_reg_1256;
reg   [31:0] x5_imag_read_reg_1256_pp0_iter1_reg;
reg   [31:0] x5_imag_read_reg_1256_pp0_iter2_reg;
reg   [31:0] x5_imag_read_reg_1256_pp0_iter3_reg;
reg   [31:0] x5_real_read_reg_1264;
reg   [31:0] x5_real_read_reg_1264_pp0_iter1_reg;
reg   [31:0] x5_real_read_reg_1264_pp0_iter2_reg;
reg   [31:0] x5_real_read_reg_1264_pp0_iter3_reg;
reg   [31:0] x4_imag_read_reg_1272;
reg   [31:0] x4_imag_read_reg_1272_pp0_iter1_reg;
reg   [31:0] x4_imag_read_reg_1272_pp0_iter2_reg;
reg   [31:0] x4_imag_read_reg_1272_pp0_iter3_reg;
reg   [31:0] x4_real_read_reg_1280;
reg   [31:0] x4_real_read_reg_1280_pp0_iter1_reg;
reg   [31:0] x4_real_read_reg_1280_pp0_iter2_reg;
reg   [31:0] x4_real_read_reg_1280_pp0_iter3_reg;
reg   [31:0] x3_imag_read_reg_1287;
reg   [31:0] x3_imag_read_reg_1287_pp0_iter1_reg;
reg   [31:0] x3_imag_read_reg_1287_pp0_iter2_reg;
reg   [31:0] x3_imag_read_reg_1287_pp0_iter3_reg;
reg   [31:0] x3_real_read_reg_1295;
reg   [31:0] x3_real_read_reg_1295_pp0_iter1_reg;
reg   [31:0] x3_real_read_reg_1295_pp0_iter2_reg;
reg   [31:0] x3_real_read_reg_1295_pp0_iter3_reg;
reg   [31:0] x2_imag_read_reg_1302;
reg   [31:0] x2_imag_read_reg_1302_pp0_iter1_reg;
reg   [31:0] x2_imag_read_reg_1302_pp0_iter2_reg;
reg   [31:0] x2_imag_read_reg_1302_pp0_iter3_reg;
reg   [31:0] x2_real_read_reg_1310;
reg   [31:0] x2_real_read_reg_1310_pp0_iter1_reg;
reg   [31:0] x2_real_read_reg_1310_pp0_iter2_reg;
reg   [31:0] x2_real_read_reg_1310_pp0_iter3_reg;
reg   [31:0] x1_imag_read_reg_1318;
reg   [31:0] x1_imag_read_reg_1318_pp0_iter1_reg;
reg   [31:0] x1_imag_read_reg_1318_pp0_iter2_reg;
reg   [31:0] x1_imag_read_reg_1318_pp0_iter3_reg;
reg   [31:0] x1_real_read_reg_1325;
reg   [31:0] x1_real_read_reg_1325_pp0_iter1_reg;
reg   [31:0] x1_real_read_reg_1325_pp0_iter2_reg;
reg   [31:0] x1_real_read_reg_1325_pp0_iter3_reg;
reg   [31:0] mu_read_reg_1333;
reg   [31:0] mu_read_reg_1333_pp0_iter1_reg;
reg   [31:0] mu_read_reg_1333_pp0_iter2_reg;
reg   [31:0] mu_read_reg_1333_pp0_iter3_reg;
reg   [31:0] mu_read_reg_1333_pp0_iter4_reg;
reg   [31:0] tmp_2_1_reg_1342;
reg   [31:0] tmp_3_1_reg_1347;
reg   [31:0] tmp_2_2_reg_1352;
wire   [31:0] xor_ln14_fu_1038_p2;
reg   [31:0] xor_ln14_reg_1357;
wire   [31:0] b_imag_fu_1044_p1;
reg   [31:0] b_imag_reg_1362;
reg   [31:0] b_imag_reg_1362_pp0_iter1_reg;
reg   [31:0] b_imag_reg_1362_pp0_iter2_reg;
reg   [31:0] b_imag_reg_1362_pp0_iter3_reg;
reg   [31:0] tmp_3_7_reg_1371;
reg   [31:0] tmp_2_8_reg_1376;
reg   [31:0] tmp_22_2_reg_1381;
reg   [31:0] tmp_22_3_reg_1386;
reg   [31:0] tmp_23_reg_1391;
reg   [31:0] tmp_23_1_reg_1396;
reg   [31:0] tmp_23_2_reg_1401;
reg   [31:0] tmp_22_7_reg_1406;
reg   [31:0] tmp_22_8_reg_1411;
reg   [31:0] tmp_23_3_reg_1416;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state34_pp0_stage9_iter1;
wire    ap_block_state58_pp0_stage9_iter2;
wire    ap_block_state82_pp0_stage9_iter3;
wire    ap_block_state106_pp0_stage9_iter4;
wire    ap_block_state130_pp0_stage9_iter5;
wire    ap_block_pp0_stage9_11001;
reg   [31:0] tmp_23_4_reg_1421;
reg   [31:0] tmp_23_5_reg_1426;
reg   [31:0] tmp_23_6_reg_1431;
reg   [31:0] tmp_23_7_reg_1436;
reg   [31:0] tmp_23_8_reg_1441;
reg   [31:0] tmp_4_2_reg_1446;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_state37_pp0_stage12_iter1;
wire    ap_block_state61_pp0_stage12_iter2;
wire    ap_block_state85_pp0_stage12_iter3;
wire    ap_block_state109_pp0_stage12_iter4;
wire    ap_block_state133_pp0_stage12_iter5;
wire    ap_block_pp0_stage12_11001;
reg   [31:0] tmp_4_3_reg_1451;
reg   [31:0] tmp_4_4_reg_1456;
reg   [31:0] tmp_4_4_reg_1456_pp0_iter1_reg;
reg   [31:0] tmp_4_5_reg_1461;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_state38_pp0_stage13_iter1;
wire    ap_block_state62_pp0_stage13_iter2;
wire    ap_block_state86_pp0_stage13_iter3;
wire    ap_block_state110_pp0_stage13_iter4;
wire    ap_block_state134_pp0_stage13_iter5;
wire    ap_block_pp0_stage13_11001;
reg   [31:0] tmp_4_5_reg_1461_pp0_iter1_reg;
reg   [31:0] tmp_4_6_reg_1466;
reg   [31:0] tmp_4_6_reg_1466_pp0_iter1_reg;
reg   [31:0] tmp_4_6_reg_1466_pp0_iter2_reg;
reg   [31:0] tmp_4_7_reg_1471;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_state39_pp0_stage14_iter1;
wire    ap_block_state63_pp0_stage14_iter2;
wire    ap_block_state87_pp0_stage14_iter3;
wire    ap_block_state111_pp0_stage14_iter4;
wire    ap_block_state135_pp0_stage14_iter5;
wire    ap_block_pp0_stage14_11001;
reg   [31:0] tmp_4_7_reg_1471_pp0_iter1_reg;
reg   [31:0] tmp_4_7_reg_1471_pp0_iter2_reg;
reg   [31:0] tmp_4_8_reg_1476;
reg   [31:0] tmp_4_8_reg_1476_pp0_iter1_reg;
reg   [31:0] tmp_4_8_reg_1476_pp0_iter2_reg;
reg   [31:0] tmp_25_reg_1481;
reg   [31:0] tmp_25_reg_1481_pp0_iter1_reg;
reg   [31:0] tmp_25_reg_1481_pp0_iter2_reg;
reg   [31:0] tmp_25_reg_1481_pp0_iter3_reg;
reg   [31:0] tmp_25_reg_1481_pp0_iter4_reg;
reg   [31:0] tmp_25_1_reg_1487;
reg   [31:0] tmp_25_1_reg_1487_pp0_iter1_reg;
reg   [31:0] tmp_25_1_reg_1487_pp0_iter2_reg;
reg   [31:0] tmp_25_1_reg_1487_pp0_iter3_reg;
reg   [31:0] tmp_25_1_reg_1487_pp0_iter4_reg;
reg   [31:0] tmp_25_2_reg_1493;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_state24_pp0_stage23_iter0;
wire    ap_block_state48_pp0_stage23_iter1;
wire    ap_block_state72_pp0_stage23_iter2;
wire    ap_block_state96_pp0_stage23_iter3;
wire    ap_block_state120_pp0_stage23_iter4;
wire    ap_block_state144_pp0_stage23_iter5;
wire    ap_block_pp0_stage23_11001;
reg   [31:0] tmp_25_2_reg_1493_pp0_iter1_reg;
reg   [31:0] tmp_25_2_reg_1493_pp0_iter2_reg;
reg   [31:0] tmp_25_2_reg_1493_pp0_iter3_reg;
reg   [31:0] tmp_25_2_reg_1493_pp0_iter4_reg;
reg   [31:0] tmp_25_3_reg_1499;
reg   [31:0] tmp_25_3_reg_1499_pp0_iter1_reg;
reg   [31:0] tmp_25_3_reg_1499_pp0_iter2_reg;
reg   [31:0] tmp_25_3_reg_1499_pp0_iter3_reg;
reg   [31:0] tmp_25_3_reg_1499_pp0_iter4_reg;
reg   [31:0] tmp_25_4_reg_1505;
reg   [31:0] tmp_25_4_reg_1505_pp0_iter1_reg;
reg   [31:0] tmp_25_4_reg_1505_pp0_iter2_reg;
reg   [31:0] tmp_25_4_reg_1505_pp0_iter3_reg;
reg   [31:0] tmp_25_4_reg_1505_pp0_iter4_reg;
reg   [31:0] tmp_25_5_reg_1511;
reg   [31:0] tmp_25_5_reg_1511_pp0_iter1_reg;
reg   [31:0] tmp_25_5_reg_1511_pp0_iter2_reg;
reg   [31:0] tmp_25_5_reg_1511_pp0_iter3_reg;
reg   [31:0] tmp_25_5_reg_1511_pp0_iter4_reg;
reg   [31:0] tmp_25_6_reg_1517;
reg   [31:0] tmp_25_6_reg_1517_pp0_iter1_reg;
reg   [31:0] tmp_25_6_reg_1517_pp0_iter2_reg;
reg   [31:0] tmp_25_6_reg_1517_pp0_iter3_reg;
reg   [31:0] tmp_25_6_reg_1517_pp0_iter4_reg;
reg   [31:0] tmp_25_7_reg_1523;
reg   [31:0] tmp_25_7_reg_1523_pp0_iter2_reg;
reg   [31:0] tmp_25_7_reg_1523_pp0_iter3_reg;
reg   [31:0] tmp_25_7_reg_1523_pp0_iter4_reg;
reg   [31:0] tmp_25_7_reg_1523_pp0_iter5_reg;
reg   [31:0] tmp_25_8_reg_1529;
reg   [31:0] tmp_25_8_reg_1529_pp0_iter2_reg;
reg   [31:0] tmp_25_8_reg_1529_pp0_iter3_reg;
reg   [31:0] tmp_25_8_reg_1529_pp0_iter4_reg;
reg   [31:0] tmp_25_8_reg_1529_pp0_iter5_reg;
reg   [31:0] norm2_x_3_reg_1535;
reg   [31:0] norm2_x_5_reg_1540;
reg   [31:0] norm2_x_6_reg_1545;
reg   [31:0] norm2_x_8_reg_1550;
reg   [31:0] norm2_x_8_reg_1550_pp0_iter4_reg;
wire   [0:0] and_ln82_fu_1085_p2;
reg   [31:0] tmp_34_2_reg_1561;
reg   [31:0] tmp_34_3_reg_1566;
reg   [31:0] tmp_34_4_reg_1571;
reg   [31:0] tmp_34_5_reg_1576;
reg   [31:0] tmp_34_5_reg_1576_pp0_iter5_reg;
reg   [31:0] tmp_34_6_reg_1581;
reg   [31:0] tmp_34_6_reg_1581_pp0_iter5_reg;
reg   [31:0] tmp_34_7_reg_1586;
reg   [31:0] tmp_34_7_reg_1586_pp0_iter5_reg;
reg   [31:0] tmp_34_8_reg_1591;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_state40_pp0_stage15_iter1;
wire    ap_block_state64_pp0_stage15_iter2;
wire    ap_block_state88_pp0_stage15_iter3;
wire    ap_block_state112_pp0_stage15_iter4;
wire    ap_block_state136_pp0_stage15_iter5;
wire    ap_block_pp0_stage15_11001;
reg   [31:0] tmp_34_8_reg_1591_pp0_iter5_reg;
reg   [31:0] tmp_39_6_reg_1596;
wire    ap_block_pp0_stage23_subdone;
reg    ap_enable_reg_pp0_iter6;
wire    ap_block_pp0_stage7_subdone;
reg   [31:0] ap_phi_mux_w_imag_load_phi_fu_517_p4;
reg   [31:0] ap_phi_reg_pp0_iter5_w_imag_load_reg_514;
wire    ap_block_pp0_stage3;
wire   [31:0] ap_phi_reg_pp0_iter0_w_imag_load_reg_514;
reg   [31:0] ap_phi_reg_pp0_iter1_w_imag_load_reg_514;
reg   [31:0] ap_phi_reg_pp0_iter2_w_imag_load_reg_514;
reg   [31:0] ap_phi_reg_pp0_iter3_w_imag_load_reg_514;
reg   [31:0] ap_phi_reg_pp0_iter4_w_imag_load_reg_514;
reg   [31:0] ap_phi_mux_w_real_load_phi_fu_527_p4;
reg   [31:0] ap_phi_reg_pp0_iter5_w_real_load_reg_524;
wire   [31:0] ap_phi_reg_pp0_iter0_w_real_load_reg_524;
reg   [31:0] ap_phi_reg_pp0_iter1_w_real_load_reg_524;
reg   [31:0] ap_phi_reg_pp0_iter2_w_real_load_reg_524;
reg   [31:0] ap_phi_reg_pp0_iter3_w_real_load_reg_524;
reg   [31:0] ap_phi_reg_pp0_iter4_w_real_load_reg_524;
wire   [31:0] ap_phi_reg_pp0_iter0_w_imag_load_1_reg_534;
reg   [31:0] ap_phi_reg_pp0_iter1_w_imag_load_1_reg_534;
reg   [31:0] ap_phi_reg_pp0_iter2_w_imag_load_1_reg_534;
reg   [31:0] ap_phi_reg_pp0_iter3_w_imag_load_1_reg_534;
reg   [31:0] ap_phi_reg_pp0_iter4_w_imag_load_1_reg_534;
reg   [31:0] ap_phi_reg_pp0_iter5_w_imag_load_1_reg_534;
wire   [31:0] ap_phi_reg_pp0_iter0_w_real_load_1_reg_544;
reg   [31:0] ap_phi_reg_pp0_iter1_w_real_load_1_reg_544;
reg   [31:0] ap_phi_reg_pp0_iter2_w_real_load_1_reg_544;
reg   [31:0] ap_phi_reg_pp0_iter3_w_real_load_1_reg_544;
reg   [31:0] ap_phi_reg_pp0_iter4_w_real_load_1_reg_544;
reg   [31:0] ap_phi_reg_pp0_iter5_w_real_load_1_reg_544;
wire   [31:0] ap_phi_reg_pp0_iter0_w_imag_load_2_reg_554;
reg   [31:0] ap_phi_reg_pp0_iter1_w_imag_load_2_reg_554;
reg   [31:0] ap_phi_reg_pp0_iter2_w_imag_load_2_reg_554;
reg   [31:0] ap_phi_reg_pp0_iter3_w_imag_load_2_reg_554;
reg   [31:0] ap_phi_reg_pp0_iter4_w_imag_load_2_reg_554;
reg   [31:0] ap_phi_reg_pp0_iter5_w_imag_load_2_reg_554;
wire   [31:0] ap_phi_reg_pp0_iter0_w_real_load_2_reg_564;
reg   [31:0] ap_phi_reg_pp0_iter1_w_real_load_2_reg_564;
reg   [31:0] ap_phi_reg_pp0_iter2_w_real_load_2_reg_564;
reg   [31:0] ap_phi_reg_pp0_iter3_w_real_load_2_reg_564;
reg   [31:0] ap_phi_reg_pp0_iter4_w_real_load_2_reg_564;
reg   [31:0] ap_phi_reg_pp0_iter5_w_real_load_2_reg_564;
wire   [31:0] ap_phi_reg_pp0_iter0_w_imag_load_3_reg_574;
reg   [31:0] ap_phi_reg_pp0_iter1_w_imag_load_3_reg_574;
reg   [31:0] ap_phi_reg_pp0_iter2_w_imag_load_3_reg_574;
reg   [31:0] ap_phi_reg_pp0_iter3_w_imag_load_3_reg_574;
reg   [31:0] ap_phi_reg_pp0_iter4_w_imag_load_3_reg_574;
reg   [31:0] ap_phi_reg_pp0_iter5_w_imag_load_3_reg_574;
wire   [31:0] ap_phi_reg_pp0_iter0_w_real_load_3_reg_584;
reg   [31:0] ap_phi_reg_pp0_iter1_w_real_load_3_reg_584;
reg   [31:0] ap_phi_reg_pp0_iter2_w_real_load_3_reg_584;
reg   [31:0] ap_phi_reg_pp0_iter3_w_real_load_3_reg_584;
reg   [31:0] ap_phi_reg_pp0_iter4_w_real_load_3_reg_584;
reg   [31:0] ap_phi_reg_pp0_iter5_w_real_load_3_reg_584;
wire   [31:0] ap_phi_reg_pp0_iter0_w_imag_load_4_reg_594;
reg   [31:0] ap_phi_reg_pp0_iter1_w_imag_load_4_reg_594;
reg   [31:0] ap_phi_reg_pp0_iter2_w_imag_load_4_reg_594;
reg   [31:0] ap_phi_reg_pp0_iter3_w_imag_load_4_reg_594;
reg   [31:0] ap_phi_reg_pp0_iter4_w_imag_load_4_reg_594;
reg   [31:0] ap_phi_reg_pp0_iter5_w_imag_load_4_reg_594;
wire   [31:0] ap_phi_reg_pp0_iter0_w_real_load_4_reg_604;
reg   [31:0] ap_phi_reg_pp0_iter1_w_real_load_4_reg_604;
reg   [31:0] ap_phi_reg_pp0_iter2_w_real_load_4_reg_604;
reg   [31:0] ap_phi_reg_pp0_iter3_w_real_load_4_reg_604;
reg   [31:0] ap_phi_reg_pp0_iter4_w_real_load_4_reg_604;
reg   [31:0] ap_phi_reg_pp0_iter5_w_real_load_4_reg_604;
reg   [31:0] ap_phi_mux_w_imag_load_5_phi_fu_617_p4;
reg   [31:0] ap_phi_reg_pp0_iter5_w_imag_load_5_reg_614;
wire    ap_block_pp0_stage17;
wire   [31:0] ap_phi_reg_pp0_iter0_w_imag_load_5_reg_614;
reg   [31:0] ap_phi_reg_pp0_iter1_w_imag_load_5_reg_614;
reg   [31:0] ap_phi_reg_pp0_iter2_w_imag_load_5_reg_614;
reg   [31:0] ap_phi_reg_pp0_iter3_w_imag_load_5_reg_614;
reg   [31:0] ap_phi_reg_pp0_iter4_w_imag_load_5_reg_614;
reg   [31:0] ap_phi_mux_w_real_load_5_phi_fu_627_p4;
reg   [31:0] ap_phi_reg_pp0_iter5_w_real_load_5_reg_624;
wire   [31:0] ap_phi_reg_pp0_iter0_w_real_load_5_reg_624;
reg   [31:0] ap_phi_reg_pp0_iter1_w_real_load_5_reg_624;
reg   [31:0] ap_phi_reg_pp0_iter2_w_real_load_5_reg_624;
reg   [31:0] ap_phi_reg_pp0_iter3_w_real_load_5_reg_624;
reg   [31:0] ap_phi_reg_pp0_iter4_w_real_load_5_reg_624;
reg   [31:0] ap_phi_mux_w_imag_load_6_phi_fu_637_p4;
reg   [31:0] ap_phi_reg_pp0_iter5_w_imag_load_6_reg_634;
wire    ap_block_pp0_stage18;
wire   [31:0] ap_phi_reg_pp0_iter0_w_imag_load_6_reg_634;
reg   [31:0] ap_phi_reg_pp0_iter1_w_imag_load_6_reg_634;
reg   [31:0] ap_phi_reg_pp0_iter2_w_imag_load_6_reg_634;
reg   [31:0] ap_phi_reg_pp0_iter3_w_imag_load_6_reg_634;
reg   [31:0] ap_phi_reg_pp0_iter4_w_imag_load_6_reg_634;
reg   [31:0] ap_phi_mux_w_real_load_6_phi_fu_647_p4;
reg   [31:0] ap_phi_reg_pp0_iter5_w_real_load_6_reg_644;
wire   [31:0] ap_phi_reg_pp0_iter0_w_real_load_6_reg_644;
reg   [31:0] ap_phi_reg_pp0_iter1_w_real_load_6_reg_644;
reg   [31:0] ap_phi_reg_pp0_iter2_w_real_load_6_reg_644;
reg   [31:0] ap_phi_reg_pp0_iter3_w_real_load_6_reg_644;
reg   [31:0] ap_phi_reg_pp0_iter4_w_real_load_6_reg_644;
reg   [31:0] ap_phi_mux_w_imag_load_7_phi_fu_657_p4;
reg   [31:0] ap_phi_reg_pp0_iter5_w_imag_load_7_reg_654;
wire    ap_block_pp0_stage19;
wire   [31:0] ap_phi_reg_pp0_iter0_w_imag_load_7_reg_654;
reg   [31:0] ap_phi_reg_pp0_iter1_w_imag_load_7_reg_654;
reg   [31:0] ap_phi_reg_pp0_iter2_w_imag_load_7_reg_654;
reg   [31:0] ap_phi_reg_pp0_iter3_w_imag_load_7_reg_654;
reg   [31:0] ap_phi_reg_pp0_iter4_w_imag_load_7_reg_654;
reg   [31:0] ap_phi_mux_w_real_load_7_phi_fu_667_p4;
reg   [31:0] ap_phi_reg_pp0_iter5_w_real_load_7_reg_664;
wire   [31:0] ap_phi_reg_pp0_iter0_w_real_load_7_reg_664;
reg   [31:0] ap_phi_reg_pp0_iter1_w_real_load_7_reg_664;
reg   [31:0] ap_phi_reg_pp0_iter2_w_real_load_7_reg_664;
reg   [31:0] ap_phi_reg_pp0_iter3_w_real_load_7_reg_664;
reg   [31:0] ap_phi_reg_pp0_iter4_w_real_load_7_reg_664;
wire   [31:0] ap_phi_reg_pp0_iter0_w_imag_load_8_reg_674;
reg   [31:0] ap_phi_reg_pp0_iter1_w_imag_load_8_reg_674;
reg   [31:0] ap_phi_reg_pp0_iter2_w_imag_load_8_reg_674;
reg   [31:0] ap_phi_reg_pp0_iter3_w_imag_load_8_reg_674;
reg   [31:0] ap_phi_reg_pp0_iter4_w_imag_load_8_reg_674;
reg   [31:0] ap_phi_reg_pp0_iter5_w_imag_load_8_reg_674;
wire   [31:0] ap_phi_reg_pp0_iter0_w_real_load_8_reg_684;
reg   [31:0] ap_phi_reg_pp0_iter1_w_real_load_8_reg_684;
reg   [31:0] ap_phi_reg_pp0_iter2_w_real_load_8_reg_684;
reg   [31:0] ap_phi_reg_pp0_iter3_w_real_load_8_reg_684;
reg   [31:0] ap_phi_reg_pp0_iter4_w_real_load_8_reg_684;
reg   [31:0] ap_phi_reg_pp0_iter5_w_real_load_8_reg_684;
wire    ap_block_pp0_stage10_01001;
wire    ap_block_pp0_stage15_01001;
wire    ap_block_pp0_stage19_01001;
wire    ap_block_pp0_stage20_01001;
wire    ap_block_pp0_stage21_01001;
reg    ap_block_pp0_stage0_01001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state26_pp0_stage1_iter1;
wire    ap_block_state50_pp0_stage1_iter2;
wire    ap_block_state74_pp0_stage1_iter3;
wire    ap_block_state98_pp0_stage1_iter4;
wire    ap_block_state122_pp0_stage1_iter5;
wire    ap_block_state146_pp0_stage1_iter6;
wire    ap_block_pp0_stage1_01001;
wire    ap_block_pp0_stage1_11001;
wire    ap_block_pp0_stage2_01001;
wire    ap_block_pp0_stage7_01001;
reg   [31:0] grp_fu_694_p0;
reg   [31:0] grp_fu_694_p1;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage11;
wire    ap_block_pp0_stage12;
wire    ap_block_pp0_stage20;
wire    ap_block_pp0_stage14;
wire    ap_block_pp0_stage22;
wire    ap_block_pp0_stage21;
wire    ap_block_pp0_stage23;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage13;
reg   [31:0] grp_fu_698_p0;
reg   [31:0] grp_fu_698_p1;
reg   [31:0] grp_fu_702_p0;
reg   [31:0] grp_fu_702_p1;
reg   [31:0] grp_fu_743_p0;
reg   [31:0] grp_fu_743_p1;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage16;
reg   [31:0] grp_fu_749_p0;
reg   [31:0] grp_fu_749_p1;
reg   [31:0] grp_fu_755_p0;
reg   [31:0] grp_fu_755_p1;
reg   [31:0] grp_fu_761_p0;
reg   [31:0] grp_fu_761_p1;
reg   [31:0] grp_fu_767_p0;
reg   [31:0] grp_fu_767_p1;
reg   [31:0] grp_fu_773_p0;
reg   [31:0] grp_fu_773_p1;
wire    ap_block_pp0_stage15;
wire   [31:0] bitcast_ln14_fu_1035_p1;
wire   [31:0] bitcast_ln82_fu_1050_p1;
wire   [7:0] tmp_fu_1053_p4;
wire   [22:0] trunc_ln82_fu_1063_p1;
wire   [0:0] icmp_ln82_1_fu_1073_p2;
wire   [0:0] icmp_ln82_fu_1067_p2;
wire   [0:0] or_ln82_fu_1079_p2;
wire   [0:0] grp_fu_777_p2;
reg   [1:0] grp_fu_694_opcode;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp0_stage5_00001;
wire    ap_block_pp0_stage6_00001;
wire    ap_block_pp0_stage7_00001;
wire    ap_block_pp0_stage12_00001;
wire    ap_block_pp0_stage20_00001;
wire    ap_block_pp0_stage14_00001;
wire    ap_block_pp0_stage22_00001;
wire    ap_block_pp0_stage21_00001;
wire    ap_block_pp0_stage23_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage8_00001;
wire    ap_block_pp0_stage13_00001;
wire    ap_block_pp0_stage17_00001;
wire    ap_block_pp0_stage18_00001;
wire    ap_block_pp0_stage19_00001;
reg    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage9_00001;
wire    ap_block_pp0_stage10_00001;
wire    ap_block_pp0_stage11_00001;
reg    grp_fu_694_ce;
reg   [1:0] grp_fu_698_opcode;
reg    grp_fu_698_ce;
reg   [1:0] grp_fu_702_opcode;
reg    grp_fu_702_ce;
reg    grp_fu_743_ce;
reg    grp_fu_749_ce;
reg    grp_fu_755_ce;
reg    grp_fu_761_ce;
reg    grp_fu_767_ce;
reg    grp_fu_773_ce;
reg    grp_fu_777_ce;
wire    ap_block_pp0_stage15_00001;
reg   [23:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_reset_idle_pp0;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_pp0_stage22_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 mu_preg = 32'd0;
#0 mu_ap_vld_preg = 1'b0;
#0 x1_real_preg = 32'd0;
#0 x1_real_ap_vld_preg = 1'b0;
#0 x1_imag_preg = 32'd0;
#0 x1_imag_ap_vld_preg = 1'b0;
#0 x2_real_preg = 32'd0;
#0 x2_real_ap_vld_preg = 1'b0;
#0 x2_imag_preg = 32'd0;
#0 x2_imag_ap_vld_preg = 1'b0;
#0 x3_real_preg = 32'd0;
#0 x3_real_ap_vld_preg = 1'b0;
#0 x3_imag_preg = 32'd0;
#0 x3_imag_ap_vld_preg = 1'b0;
#0 x4_real_preg = 32'd0;
#0 x4_real_ap_vld_preg = 1'b0;
#0 x4_imag_preg = 32'd0;
#0 x4_imag_ap_vld_preg = 1'b0;
#0 x5_real_preg = 32'd0;
#0 x5_real_ap_vld_preg = 1'b0;
#0 x5_imag_preg = 32'd0;
#0 x5_imag_ap_vld_preg = 1'b0;
#0 x6_real_preg = 32'd0;
#0 x6_real_ap_vld_preg = 1'b0;
#0 x6_imag_preg = 32'd0;
#0 x6_imag_ap_vld_preg = 1'b0;
#0 x7_real_preg = 32'd0;
#0 x7_real_ap_vld_preg = 1'b0;
#0 x7_imag_preg = 32'd0;
#0 x7_imag_ap_vld_preg = 1'b0;
#0 x8_real_preg = 32'd0;
#0 x8_real_ap_vld_preg = 1'b0;
#0 x8_imag_preg = 32'd0;
#0 x8_imag_ap_vld_preg = 1'b0;
#0 x9_real_preg = 32'd0;
#0 x9_real_ap_vld_preg = 1'b0;
#0 x9_imag_preg = 32'd0;
#0 x9_imag_ap_vld_preg = 1'b0;
#0 W1_old_real_preg = 32'd0;
#0 W1_old_real_ap_vld_preg = 1'b0;
#0 W1_old_imag_preg = 32'd0;
#0 W1_old_imag_ap_vld_preg = 1'b0;
#0 W2_old_real_preg = 32'd0;
#0 W2_old_real_ap_vld_preg = 1'b0;
#0 W2_old_imag_preg = 32'd0;
#0 W2_old_imag_ap_vld_preg = 1'b0;
#0 W3_old_real_preg = 32'd0;
#0 W3_old_real_ap_vld_preg = 1'b0;
#0 W3_old_imag_preg = 32'd0;
#0 W3_old_imag_ap_vld_preg = 1'b0;
#0 W4_old_real_preg = 32'd0;
#0 W4_old_real_ap_vld_preg = 1'b0;
#0 W4_old_imag_preg = 32'd0;
#0 W4_old_imag_ap_vld_preg = 1'b0;
#0 W5_old_real_preg = 32'd0;
#0 W5_old_real_ap_vld_preg = 1'b0;
#0 W5_old_imag_preg = 32'd0;
#0 W5_old_imag_ap_vld_preg = 1'b0;
#0 W6_old_real_preg = 32'd0;
#0 W6_old_real_ap_vld_preg = 1'b0;
#0 W6_old_imag_preg = 32'd0;
#0 W6_old_imag_ap_vld_preg = 1'b0;
#0 W7_old_real_preg = 32'd0;
#0 W7_old_real_ap_vld_preg = 1'b0;
#0 W7_old_imag_preg = 32'd0;
#0 W7_old_imag_ap_vld_preg = 1'b0;
#0 W8_old_real_preg = 32'd0;
#0 W8_old_real_ap_vld_preg = 1'b0;
#0 W8_old_imag_preg = 32'd0;
#0 W8_old_imag_ap_vld_preg = 1'b0;
#0 W9_old_real_preg = 32'd0;
#0 W9_old_real_ap_vld_preg = 1'b0;
#0 W9_old_imag_preg = 32'd0;
#0 W9_old_imag_ap_vld_preg = 1'b0;
#0 err_real_preg = 32'd0;
#0 err_real_ap_vld_preg = 1'b0;
#0 err_imag_preg = 32'd0;
#0 err_imag_ap_vld_preg = 1'b0;
#0 ap_CS_fsm = 24'd1;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
end

Wb_faddfsub_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Wb_faddfsub_32ns_bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_694_p0),
    .din1(grp_fu_694_p1),
    .opcode(grp_fu_694_opcode),
    .ce(grp_fu_694_ce),
    .dout(grp_fu_694_p2)
);

Wb_faddfsub_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Wb_faddfsub_32ns_bkb_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_698_p0),
    .din1(grp_fu_698_p1),
    .opcode(grp_fu_698_opcode),
    .ce(grp_fu_698_ce),
    .dout(grp_fu_698_p2)
);

Wb_faddfsub_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Wb_faddfsub_32ns_bkb_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_702_p0),
    .din1(grp_fu_702_p1),
    .opcode(grp_fu_702_opcode),
    .ce(grp_fu_702_ce),
    .dout(grp_fu_702_p2)
);

Wb_fmul_32ns_32nscud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Wb_fmul_32ns_32nscud_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_743_p0),
    .din1(grp_fu_743_p1),
    .ce(grp_fu_743_ce),
    .dout(grp_fu_743_p2)
);

Wb_fmul_32ns_32nscud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Wb_fmul_32ns_32nscud_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_749_p0),
    .din1(grp_fu_749_p1),
    .ce(grp_fu_749_ce),
    .dout(grp_fu_749_p2)
);

Wb_fmul_32ns_32nscud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Wb_fmul_32ns_32nscud_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_755_p0),
    .din1(grp_fu_755_p1),
    .ce(grp_fu_755_ce),
    .dout(grp_fu_755_p2)
);

Wb_fmul_32ns_32nscud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Wb_fmul_32ns_32nscud_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_761_p0),
    .din1(grp_fu_761_p1),
    .ce(grp_fu_761_ce),
    .dout(grp_fu_761_p2)
);

Wb_fmul_32ns_32nscud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Wb_fmul_32ns_32nscud_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_767_p0),
    .din1(grp_fu_767_p1),
    .ce(grp_fu_767_ce),
    .dout(grp_fu_767_p2)
);

Wb_fdiv_32ns_32nsdEe #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Wb_fdiv_32ns_32nsdEe_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_773_p0),
    .din1(grp_fu_773_p1),
    .ce(grp_fu_773_ce),
    .dout(grp_fu_773_p2)
);

Wb_fcmp_32ns_32nseOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
Wb_fcmp_32ns_32nseOg_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(norm2_x_8_reg_1550),
    .din1(32'd0),
    .ce(grp_fu_777_ce),
    .opcode(5'd1),
    .dout(grp_fu_777_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W1_old_imag_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            W1_old_imag_ap_vld_preg <= 1'b0;
        end else if ((1'b1 == W1_old_imag_ap_vld)) begin
            W1_old_imag_ap_vld_preg <= W1_old_imag_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W1_old_imag_preg <= 32'd0;
    end else begin
        if ((1'b1 == W1_old_imag_ap_vld)) begin
            W1_old_imag_preg <= W1_old_imag;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W1_old_real_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            W1_old_real_ap_vld_preg <= 1'b0;
        end else if ((1'b1 == W1_old_real_ap_vld)) begin
            W1_old_real_ap_vld_preg <= W1_old_real_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W1_old_real_preg <= 32'd0;
    end else begin
        if ((1'b1 == W1_old_real_ap_vld)) begin
            W1_old_real_preg <= W1_old_real;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W2_old_imag_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            W2_old_imag_ap_vld_preg <= 1'b0;
        end else if ((1'b1 == W2_old_imag_ap_vld)) begin
            W2_old_imag_ap_vld_preg <= W2_old_imag_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W2_old_imag_preg <= 32'd0;
    end else begin
        if ((1'b1 == W2_old_imag_ap_vld)) begin
            W2_old_imag_preg <= W2_old_imag;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W2_old_real_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            W2_old_real_ap_vld_preg <= 1'b0;
        end else if ((1'b1 == W2_old_real_ap_vld)) begin
            W2_old_real_ap_vld_preg <= W2_old_real_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W2_old_real_preg <= 32'd0;
    end else begin
        if ((1'b1 == W2_old_real_ap_vld)) begin
            W2_old_real_preg <= W2_old_real;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W3_old_imag_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            W3_old_imag_ap_vld_preg <= 1'b0;
        end else if ((1'b1 == W3_old_imag_ap_vld)) begin
            W3_old_imag_ap_vld_preg <= W3_old_imag_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W3_old_imag_preg <= 32'd0;
    end else begin
        if ((1'b1 == W3_old_imag_ap_vld)) begin
            W3_old_imag_preg <= W3_old_imag;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W3_old_real_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            W3_old_real_ap_vld_preg <= 1'b0;
        end else if ((1'b1 == W3_old_real_ap_vld)) begin
            W3_old_real_ap_vld_preg <= W3_old_real_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W3_old_real_preg <= 32'd0;
    end else begin
        if ((1'b1 == W3_old_real_ap_vld)) begin
            W3_old_real_preg <= W3_old_real;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W4_old_imag_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            W4_old_imag_ap_vld_preg <= 1'b0;
        end else if ((1'b1 == W4_old_imag_ap_vld)) begin
            W4_old_imag_ap_vld_preg <= W4_old_imag_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W4_old_imag_preg <= 32'd0;
    end else begin
        if ((1'b1 == W4_old_imag_ap_vld)) begin
            W4_old_imag_preg <= W4_old_imag;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W4_old_real_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            W4_old_real_ap_vld_preg <= 1'b0;
        end else if ((1'b1 == W4_old_real_ap_vld)) begin
            W4_old_real_ap_vld_preg <= W4_old_real_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W4_old_real_preg <= 32'd0;
    end else begin
        if ((1'b1 == W4_old_real_ap_vld)) begin
            W4_old_real_preg <= W4_old_real;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W5_old_imag_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            W5_old_imag_ap_vld_preg <= 1'b0;
        end else if ((1'b1 == W5_old_imag_ap_vld)) begin
            W5_old_imag_ap_vld_preg <= W5_old_imag_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W5_old_imag_preg <= 32'd0;
    end else begin
        if ((1'b1 == W5_old_imag_ap_vld)) begin
            W5_old_imag_preg <= W5_old_imag;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W5_old_real_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            W5_old_real_ap_vld_preg <= 1'b0;
        end else if ((1'b1 == W5_old_real_ap_vld)) begin
            W5_old_real_ap_vld_preg <= W5_old_real_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W5_old_real_preg <= 32'd0;
    end else begin
        if ((1'b1 == W5_old_real_ap_vld)) begin
            W5_old_real_preg <= W5_old_real;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W6_old_imag_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            W6_old_imag_ap_vld_preg <= 1'b0;
        end else if ((1'b1 == W6_old_imag_ap_vld)) begin
            W6_old_imag_ap_vld_preg <= W6_old_imag_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W6_old_imag_preg <= 32'd0;
    end else begin
        if ((1'b1 == W6_old_imag_ap_vld)) begin
            W6_old_imag_preg <= W6_old_imag;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W6_old_real_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            W6_old_real_ap_vld_preg <= 1'b0;
        end else if ((1'b1 == W6_old_real_ap_vld)) begin
            W6_old_real_ap_vld_preg <= W6_old_real_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W6_old_real_preg <= 32'd0;
    end else begin
        if ((1'b1 == W6_old_real_ap_vld)) begin
            W6_old_real_preg <= W6_old_real;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W7_old_imag_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            W7_old_imag_ap_vld_preg <= 1'b0;
        end else if ((1'b1 == W7_old_imag_ap_vld)) begin
            W7_old_imag_ap_vld_preg <= W7_old_imag_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W7_old_imag_preg <= 32'd0;
    end else begin
        if ((1'b1 == W7_old_imag_ap_vld)) begin
            W7_old_imag_preg <= W7_old_imag;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W7_old_real_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            W7_old_real_ap_vld_preg <= 1'b0;
        end else if ((1'b1 == W7_old_real_ap_vld)) begin
            W7_old_real_ap_vld_preg <= W7_old_real_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W7_old_real_preg <= 32'd0;
    end else begin
        if ((1'b1 == W7_old_real_ap_vld)) begin
            W7_old_real_preg <= W7_old_real;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W8_old_imag_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            W8_old_imag_ap_vld_preg <= 1'b0;
        end else if ((1'b1 == W8_old_imag_ap_vld)) begin
            W8_old_imag_ap_vld_preg <= W8_old_imag_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W8_old_imag_preg <= 32'd0;
    end else begin
        if ((1'b1 == W8_old_imag_ap_vld)) begin
            W8_old_imag_preg <= W8_old_imag;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W8_old_real_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            W8_old_real_ap_vld_preg <= 1'b0;
        end else if ((1'b1 == W8_old_real_ap_vld)) begin
            W8_old_real_ap_vld_preg <= W8_old_real_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W8_old_real_preg <= 32'd0;
    end else begin
        if ((1'b1 == W8_old_real_ap_vld)) begin
            W8_old_real_preg <= W8_old_real;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W9_old_imag_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            W9_old_imag_ap_vld_preg <= 1'b0;
        end else if ((1'b1 == W9_old_imag_ap_vld)) begin
            W9_old_imag_ap_vld_preg <= W9_old_imag_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W9_old_imag_preg <= 32'd0;
    end else begin
        if ((1'b1 == W9_old_imag_ap_vld)) begin
            W9_old_imag_preg <= W9_old_imag;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W9_old_real_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            W9_old_real_ap_vld_preg <= 1'b0;
        end else if ((1'b1 == W9_old_real_ap_vld)) begin
            W9_old_real_ap_vld_preg <= W9_old_real_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        W9_old_real_preg <= 32'd0;
    end else begin
        if ((1'b1 == W9_old_real_ap_vld)) begin
            W9_old_real_preg <= W9_old_real;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if (((ap_enable_reg_pp0_iter5 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        err_imag_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            err_imag_ap_vld_preg <= 1'b0;
        end else if ((err_imag_ap_vld == 1'b1)) begin
            err_imag_ap_vld_preg <= err_imag_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        err_imag_preg <= 32'd0;
    end else begin
        if ((err_imag_ap_vld == 1'b1)) begin
            err_imag_preg <= err_imag;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        err_real_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            err_real_ap_vld_preg <= 1'b0;
        end else if ((err_real_ap_vld == 1'b1)) begin
            err_real_ap_vld_preg <= err_real_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        err_real_preg <= 32'd0;
    end else begin
        if ((err_real_ap_vld == 1'b1)) begin
            err_real_preg <= err_real;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        mu_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            mu_ap_vld_preg <= 1'b0;
        end else if ((mu_ap_vld == 1'b1)) begin
            mu_ap_vld_preg <= mu_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        mu_preg <= 32'd0;
    end else begin
        if ((mu_ap_vld == 1'b1)) begin
            mu_preg <= mu;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x1_imag_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            x1_imag_ap_vld_preg <= 1'b0;
        end else if ((x1_imag_ap_vld == 1'b1)) begin
            x1_imag_ap_vld_preg <= x1_imag_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x1_imag_preg <= 32'd0;
    end else begin
        if ((x1_imag_ap_vld == 1'b1)) begin
            x1_imag_preg <= x1_imag;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x1_real_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            x1_real_ap_vld_preg <= 1'b0;
        end else if ((x1_real_ap_vld == 1'b1)) begin
            x1_real_ap_vld_preg <= x1_real_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x1_real_preg <= 32'd0;
    end else begin
        if ((x1_real_ap_vld == 1'b1)) begin
            x1_real_preg <= x1_real;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x2_imag_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            x2_imag_ap_vld_preg <= 1'b0;
        end else if ((x2_imag_ap_vld == 1'b1)) begin
            x2_imag_ap_vld_preg <= x2_imag_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x2_imag_preg <= 32'd0;
    end else begin
        if ((x2_imag_ap_vld == 1'b1)) begin
            x2_imag_preg <= x2_imag;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x2_real_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            x2_real_ap_vld_preg <= 1'b0;
        end else if ((x2_real_ap_vld == 1'b1)) begin
            x2_real_ap_vld_preg <= x2_real_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x2_real_preg <= 32'd0;
    end else begin
        if ((x2_real_ap_vld == 1'b1)) begin
            x2_real_preg <= x2_real;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x3_imag_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            x3_imag_ap_vld_preg <= 1'b0;
        end else if ((x3_imag_ap_vld == 1'b1)) begin
            x3_imag_ap_vld_preg <= x3_imag_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x3_imag_preg <= 32'd0;
    end else begin
        if ((x3_imag_ap_vld == 1'b1)) begin
            x3_imag_preg <= x3_imag;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x3_real_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            x3_real_ap_vld_preg <= 1'b0;
        end else if ((x3_real_ap_vld == 1'b1)) begin
            x3_real_ap_vld_preg <= x3_real_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x3_real_preg <= 32'd0;
    end else begin
        if ((x3_real_ap_vld == 1'b1)) begin
            x3_real_preg <= x3_real;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x4_imag_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            x4_imag_ap_vld_preg <= 1'b0;
        end else if ((x4_imag_ap_vld == 1'b1)) begin
            x4_imag_ap_vld_preg <= x4_imag_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x4_imag_preg <= 32'd0;
    end else begin
        if ((x4_imag_ap_vld == 1'b1)) begin
            x4_imag_preg <= x4_imag;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x4_real_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            x4_real_ap_vld_preg <= 1'b0;
        end else if ((x4_real_ap_vld == 1'b1)) begin
            x4_real_ap_vld_preg <= x4_real_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x4_real_preg <= 32'd0;
    end else begin
        if ((x4_real_ap_vld == 1'b1)) begin
            x4_real_preg <= x4_real;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x5_imag_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            x5_imag_ap_vld_preg <= 1'b0;
        end else if ((x5_imag_ap_vld == 1'b1)) begin
            x5_imag_ap_vld_preg <= x5_imag_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x5_imag_preg <= 32'd0;
    end else begin
        if ((x5_imag_ap_vld == 1'b1)) begin
            x5_imag_preg <= x5_imag;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x5_real_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            x5_real_ap_vld_preg <= 1'b0;
        end else if ((x5_real_ap_vld == 1'b1)) begin
            x5_real_ap_vld_preg <= x5_real_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x5_real_preg <= 32'd0;
    end else begin
        if ((x5_real_ap_vld == 1'b1)) begin
            x5_real_preg <= x5_real;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x6_imag_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            x6_imag_ap_vld_preg <= 1'b0;
        end else if ((x6_imag_ap_vld == 1'b1)) begin
            x6_imag_ap_vld_preg <= x6_imag_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x6_imag_preg <= 32'd0;
    end else begin
        if ((x6_imag_ap_vld == 1'b1)) begin
            x6_imag_preg <= x6_imag;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x6_real_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            x6_real_ap_vld_preg <= 1'b0;
        end else if ((x6_real_ap_vld == 1'b1)) begin
            x6_real_ap_vld_preg <= x6_real_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x6_real_preg <= 32'd0;
    end else begin
        if ((x6_real_ap_vld == 1'b1)) begin
            x6_real_preg <= x6_real;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x7_imag_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            x7_imag_ap_vld_preg <= 1'b0;
        end else if ((x7_imag_ap_vld == 1'b1)) begin
            x7_imag_ap_vld_preg <= x7_imag_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x7_imag_preg <= 32'd0;
    end else begin
        if ((x7_imag_ap_vld == 1'b1)) begin
            x7_imag_preg <= x7_imag;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x7_real_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            x7_real_ap_vld_preg <= 1'b0;
        end else if ((x7_real_ap_vld == 1'b1)) begin
            x7_real_ap_vld_preg <= x7_real_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x7_real_preg <= 32'd0;
    end else begin
        if ((x7_real_ap_vld == 1'b1)) begin
            x7_real_preg <= x7_real;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x8_imag_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            x8_imag_ap_vld_preg <= 1'b0;
        end else if ((x8_imag_ap_vld == 1'b1)) begin
            x8_imag_ap_vld_preg <= x8_imag_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x8_imag_preg <= 32'd0;
    end else begin
        if ((x8_imag_ap_vld == 1'b1)) begin
            x8_imag_preg <= x8_imag;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x8_real_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            x8_real_ap_vld_preg <= 1'b0;
        end else if ((x8_real_ap_vld == 1'b1)) begin
            x8_real_ap_vld_preg <= x8_real_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x8_real_preg <= 32'd0;
    end else begin
        if ((x8_real_ap_vld == 1'b1)) begin
            x8_real_preg <= x8_real;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x9_imag_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            x9_imag_ap_vld_preg <= 1'b0;
        end else if ((x9_imag_ap_vld == 1'b1)) begin
            x9_imag_ap_vld_preg <= x9_imag_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x9_imag_preg <= 32'd0;
    end else begin
        if ((x9_imag_ap_vld == 1'b1)) begin
            x9_imag_preg <= x9_imag;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x9_real_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
            x9_real_ap_vld_preg <= 1'b0;
        end else if ((x9_real_ap_vld == 1'b1)) begin
            x9_real_ap_vld_preg <= x9_real_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x9_real_preg <= 32'd0;
    end else begin
        if ((x9_real_ap_vld == 1'b1)) begin
            x9_real_preg <= x9_real;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'd1 == and_ln82_reg_1557_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_reg_pp0_iter5_w_imag_load_1_reg_534 <= reg_978;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'd0 == and_ln82_reg_1557_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_reg_pp0_iter5_w_imag_load_1_reg_534 <= reg_959;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        ap_phi_reg_pp0_iter5_w_imag_load_1_reg_534 <= ap_phi_reg_pp0_iter4_w_imag_load_1_reg_534;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'd1 == and_ln82_reg_1557_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_phi_reg_pp0_iter5_w_imag_load_2_reg_554 <= reg_984;
    end else if (((1'b0 == ap_block_pp0_stage5_11001) & (1'd0 == and_ln82_reg_1557_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_phi_reg_pp0_iter5_w_imag_load_2_reg_554 <= reg_1026;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        ap_phi_reg_pp0_iter5_w_imag_load_2_reg_554 <= ap_phi_reg_pp0_iter4_w_imag_load_2_reg_554;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'd1 == and_ln82_reg_1557_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ap_phi_reg_pp0_iter5_w_imag_load_3_reg_574 <= reg_990;
    end else if (((1'b0 == ap_block_pp0_stage6_11001) & (1'd0 == and_ln82_reg_1557_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ap_phi_reg_pp0_iter5_w_imag_load_3_reg_574 <= reg_959;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        ap_phi_reg_pp0_iter5_w_imag_load_3_reg_574 <= ap_phi_reg_pp0_iter4_w_imag_load_3_reg_574;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'd1 == and_ln82_reg_1557_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter5_w_imag_load_4_reg_594 <= reg_996;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'd0 == and_ln82_reg_1557_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter5_w_imag_load_4_reg_594 <= reg_966;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        ap_phi_reg_pp0_iter5_w_imag_load_4_reg_594 <= ap_phi_reg_pp0_iter4_w_imag_load_4_reg_594;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage16_11001) & (1'd1 == and_ln82_reg_1557_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        ap_phi_reg_pp0_iter5_w_imag_load_5_reg_614 <= reg_1002_pp0_iter5_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        ap_phi_reg_pp0_iter5_w_imag_load_5_reg_614 <= ap_phi_reg_pp0_iter4_w_imag_load_5_reg_614;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage17_11001) & (1'd1 == and_ln82_reg_1557_pp0_iter5_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        ap_phi_reg_pp0_iter5_w_imag_load_6_reg_634 <= reg_1008_pp0_iter5_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        ap_phi_reg_pp0_iter5_w_imag_load_6_reg_634 <= ap_phi_reg_pp0_iter4_w_imag_load_6_reg_634;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage18_11001) & (1'd1 == and_ln82_reg_1557_pp0_iter5_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        ap_phi_reg_pp0_iter5_w_imag_load_7_reg_654 <= reg_1014_pp0_iter5_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        ap_phi_reg_pp0_iter5_w_imag_load_7_reg_654 <= ap_phi_reg_pp0_iter4_w_imag_load_7_reg_654;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage20_11001) & (1'd1 == and_ln82_reg_1557_pp0_iter5_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        ap_phi_reg_pp0_iter5_w_imag_load_8_reg_674 <= reg_1020_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage20_11001) & (1'd0 == and_ln82_reg_1557_pp0_iter5_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        ap_phi_reg_pp0_iter5_w_imag_load_8_reg_674 <= reg_1026;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        ap_phi_reg_pp0_iter5_w_imag_load_8_reg_674 <= ap_phi_reg_pp0_iter4_w_imag_load_8_reg_674;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'd1 == and_ln82_reg_1557_pp0_iter4_reg) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        ap_phi_reg_pp0_iter5_w_imag_load_reg_514 <= reg_972;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        ap_phi_reg_pp0_iter5_w_imag_load_reg_514 <= ap_phi_reg_pp0_iter4_w_imag_load_reg_514;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'd1 == and_ln82_reg_1557_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_reg_pp0_iter5_w_real_load_1_reg_544 <= tmp_25_1_reg_1487_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'd0 == and_ln82_reg_1557_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_reg_pp0_iter5_w_real_load_1_reg_544 <= reg_966;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        ap_phi_reg_pp0_iter5_w_real_load_1_reg_544 <= ap_phi_reg_pp0_iter4_w_real_load_1_reg_544;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'd1 == and_ln82_reg_1557_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_phi_reg_pp0_iter5_w_real_load_2_reg_564 <= tmp_25_2_reg_1493_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage5_11001) & (1'd0 == and_ln82_reg_1557_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_phi_reg_pp0_iter5_w_real_load_2_reg_564 <= tmp_34_2_reg_1561;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        ap_phi_reg_pp0_iter5_w_real_load_2_reg_564 <= ap_phi_reg_pp0_iter4_w_real_load_2_reg_564;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'd1 == and_ln82_reg_1557_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ap_phi_reg_pp0_iter5_w_real_load_3_reg_584 <= tmp_25_3_reg_1499_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage6_11001) & (1'd0 == and_ln82_reg_1557_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ap_phi_reg_pp0_iter5_w_real_load_3_reg_584 <= tmp_34_3_reg_1566;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        ap_phi_reg_pp0_iter5_w_real_load_3_reg_584 <= ap_phi_reg_pp0_iter4_w_real_load_3_reg_584;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'd1 == and_ln82_reg_1557_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter5_w_real_load_4_reg_604 <= tmp_25_4_reg_1505_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'd0 == and_ln82_reg_1557_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter5_w_real_load_4_reg_604 <= tmp_34_4_reg_1571;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        ap_phi_reg_pp0_iter5_w_real_load_4_reg_604 <= ap_phi_reg_pp0_iter4_w_real_load_4_reg_604;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage16_11001) & (1'd1 == and_ln82_reg_1557_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        ap_phi_reg_pp0_iter5_w_real_load_5_reg_624 <= tmp_25_5_reg_1511_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        ap_phi_reg_pp0_iter5_w_real_load_5_reg_624 <= ap_phi_reg_pp0_iter4_w_real_load_5_reg_624;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage17_11001) & (1'd1 == and_ln82_reg_1557_pp0_iter5_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        ap_phi_reg_pp0_iter5_w_real_load_6_reg_644 <= tmp_25_6_reg_1517_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        ap_phi_reg_pp0_iter5_w_real_load_6_reg_644 <= ap_phi_reg_pp0_iter4_w_real_load_6_reg_644;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage18_11001) & (1'd1 == and_ln82_reg_1557_pp0_iter5_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        ap_phi_reg_pp0_iter5_w_real_load_7_reg_664 <= tmp_25_7_reg_1523_pp0_iter5_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        ap_phi_reg_pp0_iter5_w_real_load_7_reg_664 <= ap_phi_reg_pp0_iter4_w_real_load_7_reg_664;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage20_11001) & (1'd1 == and_ln82_reg_1557_pp0_iter5_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        ap_phi_reg_pp0_iter5_w_real_load_8_reg_684 <= tmp_25_8_reg_1529_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage20_11001) & (1'd0 == and_ln82_reg_1557_pp0_iter5_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        ap_phi_reg_pp0_iter5_w_real_load_8_reg_684 <= tmp_34_8_reg_1591_pp0_iter5_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        ap_phi_reg_pp0_iter5_w_real_load_8_reg_684 <= ap_phi_reg_pp0_iter4_w_real_load_8_reg_684;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'd1 == and_ln82_reg_1557_pp0_iter4_reg) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        ap_phi_reg_pp0_iter5_w_real_load_reg_524 <= tmp_25_reg_1481_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        ap_phi_reg_pp0_iter5_w_real_load_reg_524 <= ap_phi_reg_pp0_iter4_w_real_load_reg_524;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W1_old_imag_read_reg_1185 <= W1_old_imag_in_sig;
        W1_old_imag_read_reg_1185_pp0_iter1_reg <= W1_old_imag_read_reg_1185;
        W1_old_imag_read_reg_1185_pp0_iter2_reg <= W1_old_imag_read_reg_1185_pp0_iter1_reg;
        W1_old_imag_read_reg_1185_pp0_iter3_reg <= W1_old_imag_read_reg_1185_pp0_iter2_reg;
        W1_old_imag_read_reg_1185_pp0_iter4_reg <= W1_old_imag_read_reg_1185_pp0_iter3_reg;
        W1_old_imag_read_reg_1185_pp0_iter5_reg <= W1_old_imag_read_reg_1185_pp0_iter4_reg;
        W1_old_real_read_reg_1190 <= W1_old_real_in_sig;
        W1_old_real_read_reg_1190_pp0_iter1_reg <= W1_old_real_read_reg_1190;
        W1_old_real_read_reg_1190_pp0_iter2_reg <= W1_old_real_read_reg_1190_pp0_iter1_reg;
        W1_old_real_read_reg_1190_pp0_iter3_reg <= W1_old_real_read_reg_1190_pp0_iter2_reg;
        W1_old_real_read_reg_1190_pp0_iter4_reg <= W1_old_real_read_reg_1190_pp0_iter3_reg;
        W1_old_real_read_reg_1190_pp0_iter5_reg <= W1_old_real_read_reg_1190_pp0_iter4_reg;
        W2_old_imag_read_reg_1175 <= W2_old_imag_in_sig;
        W2_old_imag_read_reg_1175_pp0_iter1_reg <= W2_old_imag_read_reg_1175;
        W2_old_imag_read_reg_1175_pp0_iter2_reg <= W2_old_imag_read_reg_1175_pp0_iter1_reg;
        W2_old_imag_read_reg_1175_pp0_iter3_reg <= W2_old_imag_read_reg_1175_pp0_iter2_reg;
        W2_old_imag_read_reg_1175_pp0_iter4_reg <= W2_old_imag_read_reg_1175_pp0_iter3_reg;
        W2_old_imag_read_reg_1175_pp0_iter5_reg <= W2_old_imag_read_reg_1175_pp0_iter4_reg;
        W2_old_real_read_reg_1180 <= W2_old_real_in_sig;
        W2_old_real_read_reg_1180_pp0_iter1_reg <= W2_old_real_read_reg_1180;
        W2_old_real_read_reg_1180_pp0_iter2_reg <= W2_old_real_read_reg_1180_pp0_iter1_reg;
        W2_old_real_read_reg_1180_pp0_iter3_reg <= W2_old_real_read_reg_1180_pp0_iter2_reg;
        W2_old_real_read_reg_1180_pp0_iter4_reg <= W2_old_real_read_reg_1180_pp0_iter3_reg;
        W2_old_real_read_reg_1180_pp0_iter5_reg <= W2_old_real_read_reg_1180_pp0_iter4_reg;
        W3_old_imag_read_reg_1165 <= W3_old_imag_in_sig;
        W3_old_imag_read_reg_1165_pp0_iter1_reg <= W3_old_imag_read_reg_1165;
        W3_old_imag_read_reg_1165_pp0_iter2_reg <= W3_old_imag_read_reg_1165_pp0_iter1_reg;
        W3_old_imag_read_reg_1165_pp0_iter3_reg <= W3_old_imag_read_reg_1165_pp0_iter2_reg;
        W3_old_imag_read_reg_1165_pp0_iter4_reg <= W3_old_imag_read_reg_1165_pp0_iter3_reg;
        W3_old_imag_read_reg_1165_pp0_iter5_reg <= W3_old_imag_read_reg_1165_pp0_iter4_reg;
        W3_old_real_read_reg_1170 <= W3_old_real_in_sig;
        W3_old_real_read_reg_1170_pp0_iter1_reg <= W3_old_real_read_reg_1170;
        W3_old_real_read_reg_1170_pp0_iter2_reg <= W3_old_real_read_reg_1170_pp0_iter1_reg;
        W3_old_real_read_reg_1170_pp0_iter3_reg <= W3_old_real_read_reg_1170_pp0_iter2_reg;
        W3_old_real_read_reg_1170_pp0_iter4_reg <= W3_old_real_read_reg_1170_pp0_iter3_reg;
        W3_old_real_read_reg_1170_pp0_iter5_reg <= W3_old_real_read_reg_1170_pp0_iter4_reg;
        W4_old_imag_read_reg_1155 <= W4_old_imag_in_sig;
        W4_old_imag_read_reg_1155_pp0_iter1_reg <= W4_old_imag_read_reg_1155;
        W4_old_imag_read_reg_1155_pp0_iter2_reg <= W4_old_imag_read_reg_1155_pp0_iter1_reg;
        W4_old_imag_read_reg_1155_pp0_iter3_reg <= W4_old_imag_read_reg_1155_pp0_iter2_reg;
        W4_old_imag_read_reg_1155_pp0_iter4_reg <= W4_old_imag_read_reg_1155_pp0_iter3_reg;
        W4_old_imag_read_reg_1155_pp0_iter5_reg <= W4_old_imag_read_reg_1155_pp0_iter4_reg;
        W4_old_real_read_reg_1160 <= W4_old_real_in_sig;
        W4_old_real_read_reg_1160_pp0_iter1_reg <= W4_old_real_read_reg_1160;
        W4_old_real_read_reg_1160_pp0_iter2_reg <= W4_old_real_read_reg_1160_pp0_iter1_reg;
        W4_old_real_read_reg_1160_pp0_iter3_reg <= W4_old_real_read_reg_1160_pp0_iter2_reg;
        W4_old_real_read_reg_1160_pp0_iter4_reg <= W4_old_real_read_reg_1160_pp0_iter3_reg;
        W4_old_real_read_reg_1160_pp0_iter5_reg <= W4_old_real_read_reg_1160_pp0_iter4_reg;
        W5_old_imag_read_reg_1145 <= W5_old_imag_in_sig;
        W5_old_imag_read_reg_1145_pp0_iter1_reg <= W5_old_imag_read_reg_1145;
        W5_old_imag_read_reg_1145_pp0_iter2_reg <= W5_old_imag_read_reg_1145_pp0_iter1_reg;
        W5_old_imag_read_reg_1145_pp0_iter3_reg <= W5_old_imag_read_reg_1145_pp0_iter2_reg;
        W5_old_imag_read_reg_1145_pp0_iter4_reg <= W5_old_imag_read_reg_1145_pp0_iter3_reg;
        W5_old_imag_read_reg_1145_pp0_iter5_reg <= W5_old_imag_read_reg_1145_pp0_iter4_reg;
        W5_old_real_read_reg_1150 <= W5_old_real_in_sig;
        W5_old_real_read_reg_1150_pp0_iter1_reg <= W5_old_real_read_reg_1150;
        W5_old_real_read_reg_1150_pp0_iter2_reg <= W5_old_real_read_reg_1150_pp0_iter1_reg;
        W5_old_real_read_reg_1150_pp0_iter3_reg <= W5_old_real_read_reg_1150_pp0_iter2_reg;
        W5_old_real_read_reg_1150_pp0_iter4_reg <= W5_old_real_read_reg_1150_pp0_iter3_reg;
        W5_old_real_read_reg_1150_pp0_iter5_reg <= W5_old_real_read_reg_1150_pp0_iter4_reg;
        W6_old_imag_read_reg_1135 <= W6_old_imag_in_sig;
        W6_old_imag_read_reg_1135_pp0_iter1_reg <= W6_old_imag_read_reg_1135;
        W6_old_imag_read_reg_1135_pp0_iter2_reg <= W6_old_imag_read_reg_1135_pp0_iter1_reg;
        W6_old_imag_read_reg_1135_pp0_iter3_reg <= W6_old_imag_read_reg_1135_pp0_iter2_reg;
        W6_old_imag_read_reg_1135_pp0_iter4_reg <= W6_old_imag_read_reg_1135_pp0_iter3_reg;
        W6_old_imag_read_reg_1135_pp0_iter5_reg <= W6_old_imag_read_reg_1135_pp0_iter4_reg;
        W6_old_real_read_reg_1140 <= W6_old_real_in_sig;
        W6_old_real_read_reg_1140_pp0_iter1_reg <= W6_old_real_read_reg_1140;
        W6_old_real_read_reg_1140_pp0_iter2_reg <= W6_old_real_read_reg_1140_pp0_iter1_reg;
        W6_old_real_read_reg_1140_pp0_iter3_reg <= W6_old_real_read_reg_1140_pp0_iter2_reg;
        W6_old_real_read_reg_1140_pp0_iter4_reg <= W6_old_real_read_reg_1140_pp0_iter3_reg;
        W6_old_real_read_reg_1140_pp0_iter5_reg <= W6_old_real_read_reg_1140_pp0_iter4_reg;
        W7_old_imag_read_reg_1125 <= W7_old_imag_in_sig;
        W7_old_imag_read_reg_1125_pp0_iter1_reg <= W7_old_imag_read_reg_1125;
        W7_old_imag_read_reg_1125_pp0_iter2_reg <= W7_old_imag_read_reg_1125_pp0_iter1_reg;
        W7_old_imag_read_reg_1125_pp0_iter3_reg <= W7_old_imag_read_reg_1125_pp0_iter2_reg;
        W7_old_imag_read_reg_1125_pp0_iter4_reg <= W7_old_imag_read_reg_1125_pp0_iter3_reg;
        W7_old_imag_read_reg_1125_pp0_iter5_reg <= W7_old_imag_read_reg_1125_pp0_iter4_reg;
        W7_old_real_read_reg_1130 <= W7_old_real_in_sig;
        W7_old_real_read_reg_1130_pp0_iter1_reg <= W7_old_real_read_reg_1130;
        W7_old_real_read_reg_1130_pp0_iter2_reg <= W7_old_real_read_reg_1130_pp0_iter1_reg;
        W7_old_real_read_reg_1130_pp0_iter3_reg <= W7_old_real_read_reg_1130_pp0_iter2_reg;
        W7_old_real_read_reg_1130_pp0_iter4_reg <= W7_old_real_read_reg_1130_pp0_iter3_reg;
        W7_old_real_read_reg_1130_pp0_iter5_reg <= W7_old_real_read_reg_1130_pp0_iter4_reg;
        W8_old_imag_read_reg_1115 <= W8_old_imag_in_sig;
        W8_old_imag_read_reg_1115_pp0_iter1_reg <= W8_old_imag_read_reg_1115;
        W8_old_imag_read_reg_1115_pp0_iter2_reg <= W8_old_imag_read_reg_1115_pp0_iter1_reg;
        W8_old_imag_read_reg_1115_pp0_iter3_reg <= W8_old_imag_read_reg_1115_pp0_iter2_reg;
        W8_old_imag_read_reg_1115_pp0_iter4_reg <= W8_old_imag_read_reg_1115_pp0_iter3_reg;
        W8_old_imag_read_reg_1115_pp0_iter5_reg <= W8_old_imag_read_reg_1115_pp0_iter4_reg;
        W8_old_real_read_reg_1120 <= W8_old_real_in_sig;
        W8_old_real_read_reg_1120_pp0_iter1_reg <= W8_old_real_read_reg_1120;
        W8_old_real_read_reg_1120_pp0_iter2_reg <= W8_old_real_read_reg_1120_pp0_iter1_reg;
        W8_old_real_read_reg_1120_pp0_iter3_reg <= W8_old_real_read_reg_1120_pp0_iter2_reg;
        W8_old_real_read_reg_1120_pp0_iter4_reg <= W8_old_real_read_reg_1120_pp0_iter3_reg;
        W8_old_real_read_reg_1120_pp0_iter5_reg <= W8_old_real_read_reg_1120_pp0_iter4_reg;
        W9_old_imag_read_reg_1105 <= W9_old_imag_in_sig;
        W9_old_imag_read_reg_1105_pp0_iter1_reg <= W9_old_imag_read_reg_1105;
        W9_old_imag_read_reg_1105_pp0_iter2_reg <= W9_old_imag_read_reg_1105_pp0_iter1_reg;
        W9_old_imag_read_reg_1105_pp0_iter3_reg <= W9_old_imag_read_reg_1105_pp0_iter2_reg;
        W9_old_imag_read_reg_1105_pp0_iter4_reg <= W9_old_imag_read_reg_1105_pp0_iter3_reg;
        W9_old_imag_read_reg_1105_pp0_iter5_reg <= W9_old_imag_read_reg_1105_pp0_iter4_reg;
        W9_old_real_read_reg_1110 <= W9_old_real_in_sig;
        W9_old_real_read_reg_1110_pp0_iter1_reg <= W9_old_real_read_reg_1110;
        W9_old_real_read_reg_1110_pp0_iter2_reg <= W9_old_real_read_reg_1110_pp0_iter1_reg;
        W9_old_real_read_reg_1110_pp0_iter3_reg <= W9_old_real_read_reg_1110_pp0_iter2_reg;
        W9_old_real_read_reg_1110_pp0_iter4_reg <= W9_old_real_read_reg_1110_pp0_iter3_reg;
        W9_old_real_read_reg_1110_pp0_iter5_reg <= W9_old_real_read_reg_1110_pp0_iter4_reg;
        err_imag_read_reg_1091 <= err_imag_in_sig;
        err_real_read_reg_1096 <= err_real_in_sig;
        err_real_read_reg_1096_pp0_iter1_reg <= err_real_read_reg_1096;
        err_real_read_reg_1096_pp0_iter2_reg <= err_real_read_reg_1096_pp0_iter1_reg;
        err_real_read_reg_1096_pp0_iter3_reg <= err_real_read_reg_1096_pp0_iter2_reg;
        mu_read_reg_1333 <= mu_in_sig;
        mu_read_reg_1333_pp0_iter1_reg <= mu_read_reg_1333;
        mu_read_reg_1333_pp0_iter2_reg <= mu_read_reg_1333_pp0_iter1_reg;
        mu_read_reg_1333_pp0_iter3_reg <= mu_read_reg_1333_pp0_iter2_reg;
        mu_read_reg_1333_pp0_iter4_reg <= mu_read_reg_1333_pp0_iter3_reg;
        tmp_25_7_reg_1523_pp0_iter2_reg <= tmp_25_7_reg_1523;
        tmp_25_7_reg_1523_pp0_iter3_reg <= tmp_25_7_reg_1523_pp0_iter2_reg;
        tmp_25_7_reg_1523_pp0_iter4_reg <= tmp_25_7_reg_1523_pp0_iter3_reg;
        tmp_25_7_reg_1523_pp0_iter5_reg <= tmp_25_7_reg_1523_pp0_iter4_reg;
        tmp_25_8_reg_1529_pp0_iter2_reg <= tmp_25_8_reg_1529;
        tmp_25_8_reg_1529_pp0_iter3_reg <= tmp_25_8_reg_1529_pp0_iter2_reg;
        tmp_25_8_reg_1529_pp0_iter4_reg <= tmp_25_8_reg_1529_pp0_iter3_reg;
        tmp_25_8_reg_1529_pp0_iter5_reg <= tmp_25_8_reg_1529_pp0_iter4_reg;
        x1_imag_read_reg_1318 <= x1_imag_in_sig;
        x1_imag_read_reg_1318_pp0_iter1_reg <= x1_imag_read_reg_1318;
        x1_imag_read_reg_1318_pp0_iter2_reg <= x1_imag_read_reg_1318_pp0_iter1_reg;
        x1_imag_read_reg_1318_pp0_iter3_reg <= x1_imag_read_reg_1318_pp0_iter2_reg;
        x1_real_read_reg_1325 <= x1_real_in_sig;
        x1_real_read_reg_1325_pp0_iter1_reg <= x1_real_read_reg_1325;
        x1_real_read_reg_1325_pp0_iter2_reg <= x1_real_read_reg_1325_pp0_iter1_reg;
        x1_real_read_reg_1325_pp0_iter3_reg <= x1_real_read_reg_1325_pp0_iter2_reg;
        x2_imag_read_reg_1302 <= x2_imag_in_sig;
        x2_imag_read_reg_1302_pp0_iter1_reg <= x2_imag_read_reg_1302;
        x2_imag_read_reg_1302_pp0_iter2_reg <= x2_imag_read_reg_1302_pp0_iter1_reg;
        x2_imag_read_reg_1302_pp0_iter3_reg <= x2_imag_read_reg_1302_pp0_iter2_reg;
        x2_real_read_reg_1310 <= x2_real_in_sig;
        x2_real_read_reg_1310_pp0_iter1_reg <= x2_real_read_reg_1310;
        x2_real_read_reg_1310_pp0_iter2_reg <= x2_real_read_reg_1310_pp0_iter1_reg;
        x2_real_read_reg_1310_pp0_iter3_reg <= x2_real_read_reg_1310_pp0_iter2_reg;
        x3_imag_read_reg_1287 <= x3_imag_in_sig;
        x3_imag_read_reg_1287_pp0_iter1_reg <= x3_imag_read_reg_1287;
        x3_imag_read_reg_1287_pp0_iter2_reg <= x3_imag_read_reg_1287_pp0_iter1_reg;
        x3_imag_read_reg_1287_pp0_iter3_reg <= x3_imag_read_reg_1287_pp0_iter2_reg;
        x3_real_read_reg_1295 <= x3_real_in_sig;
        x3_real_read_reg_1295_pp0_iter1_reg <= x3_real_read_reg_1295;
        x3_real_read_reg_1295_pp0_iter2_reg <= x3_real_read_reg_1295_pp0_iter1_reg;
        x3_real_read_reg_1295_pp0_iter3_reg <= x3_real_read_reg_1295_pp0_iter2_reg;
        x4_imag_read_reg_1272 <= x4_imag_in_sig;
        x4_imag_read_reg_1272_pp0_iter1_reg <= x4_imag_read_reg_1272;
        x4_imag_read_reg_1272_pp0_iter2_reg <= x4_imag_read_reg_1272_pp0_iter1_reg;
        x4_imag_read_reg_1272_pp0_iter3_reg <= x4_imag_read_reg_1272_pp0_iter2_reg;
        x4_real_read_reg_1280 <= x4_real_in_sig;
        x4_real_read_reg_1280_pp0_iter1_reg <= x4_real_read_reg_1280;
        x4_real_read_reg_1280_pp0_iter2_reg <= x4_real_read_reg_1280_pp0_iter1_reg;
        x4_real_read_reg_1280_pp0_iter3_reg <= x4_real_read_reg_1280_pp0_iter2_reg;
        x5_imag_read_reg_1256 <= x5_imag_in_sig;
        x5_imag_read_reg_1256_pp0_iter1_reg <= x5_imag_read_reg_1256;
        x5_imag_read_reg_1256_pp0_iter2_reg <= x5_imag_read_reg_1256_pp0_iter1_reg;
        x5_imag_read_reg_1256_pp0_iter3_reg <= x5_imag_read_reg_1256_pp0_iter2_reg;
        x5_real_read_reg_1264 <= x5_real_in_sig;
        x5_real_read_reg_1264_pp0_iter1_reg <= x5_real_read_reg_1264;
        x5_real_read_reg_1264_pp0_iter2_reg <= x5_real_read_reg_1264_pp0_iter1_reg;
        x5_real_read_reg_1264_pp0_iter3_reg <= x5_real_read_reg_1264_pp0_iter2_reg;
        x6_imag_read_reg_1240 <= x6_imag_in_sig;
        x6_imag_read_reg_1240_pp0_iter1_reg <= x6_imag_read_reg_1240;
        x6_imag_read_reg_1240_pp0_iter2_reg <= x6_imag_read_reg_1240_pp0_iter1_reg;
        x6_imag_read_reg_1240_pp0_iter3_reg <= x6_imag_read_reg_1240_pp0_iter2_reg;
        x6_real_read_reg_1248 <= x6_real_in_sig;
        x6_real_read_reg_1248_pp0_iter1_reg <= x6_real_read_reg_1248;
        x6_real_read_reg_1248_pp0_iter2_reg <= x6_real_read_reg_1248_pp0_iter1_reg;
        x6_real_read_reg_1248_pp0_iter3_reg <= x6_real_read_reg_1248_pp0_iter2_reg;
        x7_imag_read_reg_1225 <= x7_imag_in_sig;
        x7_imag_read_reg_1225_pp0_iter1_reg <= x7_imag_read_reg_1225;
        x7_imag_read_reg_1225_pp0_iter2_reg <= x7_imag_read_reg_1225_pp0_iter1_reg;
        x7_imag_read_reg_1225_pp0_iter3_reg <= x7_imag_read_reg_1225_pp0_iter2_reg;
        x7_real_read_reg_1232 <= x7_real_in_sig;
        x7_real_read_reg_1232_pp0_iter1_reg <= x7_real_read_reg_1232;
        x7_real_read_reg_1232_pp0_iter2_reg <= x7_real_read_reg_1232_pp0_iter1_reg;
        x7_real_read_reg_1232_pp0_iter3_reg <= x7_real_read_reg_1232_pp0_iter2_reg;
        x8_imag_read_reg_1210 <= x8_imag_in_sig;
        x8_imag_read_reg_1210_pp0_iter1_reg <= x8_imag_read_reg_1210;
        x8_imag_read_reg_1210_pp0_iter2_reg <= x8_imag_read_reg_1210_pp0_iter1_reg;
        x8_imag_read_reg_1210_pp0_iter3_reg <= x8_imag_read_reg_1210_pp0_iter2_reg;
        x8_real_read_reg_1217 <= x8_real_in_sig;
        x8_real_read_reg_1217_pp0_iter1_reg <= x8_real_read_reg_1217;
        x8_real_read_reg_1217_pp0_iter2_reg <= x8_real_read_reg_1217_pp0_iter1_reg;
        x8_real_read_reg_1217_pp0_iter3_reg <= x8_real_read_reg_1217_pp0_iter2_reg;
        x9_imag_read_reg_1195 <= x9_imag_in_sig;
        x9_imag_read_reg_1195_pp0_iter1_reg <= x9_imag_read_reg_1195;
        x9_imag_read_reg_1195_pp0_iter2_reg <= x9_imag_read_reg_1195_pp0_iter1_reg;
        x9_imag_read_reg_1195_pp0_iter3_reg <= x9_imag_read_reg_1195_pp0_iter2_reg;
        x9_real_read_reg_1203 <= x9_real_in_sig;
        x9_real_read_reg_1203_pp0_iter1_reg <= x9_real_read_reg_1203;
        x9_real_read_reg_1203_pp0_iter2_reg <= x9_real_read_reg_1203_pp0_iter1_reg;
        x9_real_read_reg_1203_pp0_iter3_reg <= x9_real_read_reg_1203_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        and_ln82_reg_1557 <= and_ln82_fu_1085_p2;
        and_ln82_reg_1557_pp0_iter4_reg <= and_ln82_reg_1557;
        and_ln82_reg_1557_pp0_iter5_reg <= and_ln82_reg_1557_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        ap_phi_reg_pp0_iter1_w_imag_load_1_reg_534 <= ap_phi_reg_pp0_iter0_w_imag_load_1_reg_534;
        ap_phi_reg_pp0_iter1_w_imag_load_2_reg_554 <= ap_phi_reg_pp0_iter0_w_imag_load_2_reg_554;
        ap_phi_reg_pp0_iter1_w_imag_load_3_reg_574 <= ap_phi_reg_pp0_iter0_w_imag_load_3_reg_574;
        ap_phi_reg_pp0_iter1_w_imag_load_4_reg_594 <= ap_phi_reg_pp0_iter0_w_imag_load_4_reg_594;
        ap_phi_reg_pp0_iter1_w_imag_load_5_reg_614 <= ap_phi_reg_pp0_iter0_w_imag_load_5_reg_614;
        ap_phi_reg_pp0_iter1_w_imag_load_6_reg_634 <= ap_phi_reg_pp0_iter0_w_imag_load_6_reg_634;
        ap_phi_reg_pp0_iter1_w_imag_load_7_reg_654 <= ap_phi_reg_pp0_iter0_w_imag_load_7_reg_654;
        ap_phi_reg_pp0_iter1_w_imag_load_8_reg_674 <= ap_phi_reg_pp0_iter0_w_imag_load_8_reg_674;
        ap_phi_reg_pp0_iter1_w_imag_load_reg_514 <= ap_phi_reg_pp0_iter0_w_imag_load_reg_514;
        ap_phi_reg_pp0_iter1_w_real_load_1_reg_544 <= ap_phi_reg_pp0_iter0_w_real_load_1_reg_544;
        ap_phi_reg_pp0_iter1_w_real_load_2_reg_564 <= ap_phi_reg_pp0_iter0_w_real_load_2_reg_564;
        ap_phi_reg_pp0_iter1_w_real_load_3_reg_584 <= ap_phi_reg_pp0_iter0_w_real_load_3_reg_584;
        ap_phi_reg_pp0_iter1_w_real_load_4_reg_604 <= ap_phi_reg_pp0_iter0_w_real_load_4_reg_604;
        ap_phi_reg_pp0_iter1_w_real_load_5_reg_624 <= ap_phi_reg_pp0_iter0_w_real_load_5_reg_624;
        ap_phi_reg_pp0_iter1_w_real_load_6_reg_644 <= ap_phi_reg_pp0_iter0_w_real_load_6_reg_644;
        ap_phi_reg_pp0_iter1_w_real_load_7_reg_664 <= ap_phi_reg_pp0_iter0_w_real_load_7_reg_664;
        ap_phi_reg_pp0_iter1_w_real_load_8_reg_684 <= ap_phi_reg_pp0_iter0_w_real_load_8_reg_684;
        ap_phi_reg_pp0_iter1_w_real_load_reg_524 <= ap_phi_reg_pp0_iter0_w_real_load_reg_524;
        tmp_25_2_reg_1493 <= grp_fu_743_p2;
        tmp_25_3_reg_1499 <= grp_fu_749_p2;
        tmp_25_4_reg_1505 <= grp_fu_755_p2;
        tmp_25_5_reg_1511 <= grp_fu_761_p2;
        tmp_25_6_reg_1517 <= grp_fu_767_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        ap_phi_reg_pp0_iter2_w_imag_load_1_reg_534 <= ap_phi_reg_pp0_iter1_w_imag_load_1_reg_534;
        ap_phi_reg_pp0_iter2_w_imag_load_2_reg_554 <= ap_phi_reg_pp0_iter1_w_imag_load_2_reg_554;
        ap_phi_reg_pp0_iter2_w_imag_load_3_reg_574 <= ap_phi_reg_pp0_iter1_w_imag_load_3_reg_574;
        ap_phi_reg_pp0_iter2_w_imag_load_4_reg_594 <= ap_phi_reg_pp0_iter1_w_imag_load_4_reg_594;
        ap_phi_reg_pp0_iter2_w_imag_load_5_reg_614 <= ap_phi_reg_pp0_iter1_w_imag_load_5_reg_614;
        ap_phi_reg_pp0_iter2_w_imag_load_6_reg_634 <= ap_phi_reg_pp0_iter1_w_imag_load_6_reg_634;
        ap_phi_reg_pp0_iter2_w_imag_load_7_reg_654 <= ap_phi_reg_pp0_iter1_w_imag_load_7_reg_654;
        ap_phi_reg_pp0_iter2_w_imag_load_8_reg_674 <= ap_phi_reg_pp0_iter1_w_imag_load_8_reg_674;
        ap_phi_reg_pp0_iter2_w_imag_load_reg_514 <= ap_phi_reg_pp0_iter1_w_imag_load_reg_514;
        ap_phi_reg_pp0_iter2_w_real_load_1_reg_544 <= ap_phi_reg_pp0_iter1_w_real_load_1_reg_544;
        ap_phi_reg_pp0_iter2_w_real_load_2_reg_564 <= ap_phi_reg_pp0_iter1_w_real_load_2_reg_564;
        ap_phi_reg_pp0_iter2_w_real_load_3_reg_584 <= ap_phi_reg_pp0_iter1_w_real_load_3_reg_584;
        ap_phi_reg_pp0_iter2_w_real_load_4_reg_604 <= ap_phi_reg_pp0_iter1_w_real_load_4_reg_604;
        ap_phi_reg_pp0_iter2_w_real_load_5_reg_624 <= ap_phi_reg_pp0_iter1_w_real_load_5_reg_624;
        ap_phi_reg_pp0_iter2_w_real_load_6_reg_644 <= ap_phi_reg_pp0_iter1_w_real_load_6_reg_644;
        ap_phi_reg_pp0_iter2_w_real_load_7_reg_664 <= ap_phi_reg_pp0_iter1_w_real_load_7_reg_664;
        ap_phi_reg_pp0_iter2_w_real_load_8_reg_684 <= ap_phi_reg_pp0_iter1_w_real_load_8_reg_684;
        ap_phi_reg_pp0_iter2_w_real_load_reg_524 <= ap_phi_reg_pp0_iter1_w_real_load_reg_524;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        ap_phi_reg_pp0_iter3_w_imag_load_1_reg_534 <= ap_phi_reg_pp0_iter2_w_imag_load_1_reg_534;
        ap_phi_reg_pp0_iter3_w_imag_load_2_reg_554 <= ap_phi_reg_pp0_iter2_w_imag_load_2_reg_554;
        ap_phi_reg_pp0_iter3_w_imag_load_3_reg_574 <= ap_phi_reg_pp0_iter2_w_imag_load_3_reg_574;
        ap_phi_reg_pp0_iter3_w_imag_load_4_reg_594 <= ap_phi_reg_pp0_iter2_w_imag_load_4_reg_594;
        ap_phi_reg_pp0_iter3_w_imag_load_5_reg_614 <= ap_phi_reg_pp0_iter2_w_imag_load_5_reg_614;
        ap_phi_reg_pp0_iter3_w_imag_load_6_reg_634 <= ap_phi_reg_pp0_iter2_w_imag_load_6_reg_634;
        ap_phi_reg_pp0_iter3_w_imag_load_7_reg_654 <= ap_phi_reg_pp0_iter2_w_imag_load_7_reg_654;
        ap_phi_reg_pp0_iter3_w_imag_load_8_reg_674 <= ap_phi_reg_pp0_iter2_w_imag_load_8_reg_674;
        ap_phi_reg_pp0_iter3_w_imag_load_reg_514 <= ap_phi_reg_pp0_iter2_w_imag_load_reg_514;
        ap_phi_reg_pp0_iter3_w_real_load_1_reg_544 <= ap_phi_reg_pp0_iter2_w_real_load_1_reg_544;
        ap_phi_reg_pp0_iter3_w_real_load_2_reg_564 <= ap_phi_reg_pp0_iter2_w_real_load_2_reg_564;
        ap_phi_reg_pp0_iter3_w_real_load_3_reg_584 <= ap_phi_reg_pp0_iter2_w_real_load_3_reg_584;
        ap_phi_reg_pp0_iter3_w_real_load_4_reg_604 <= ap_phi_reg_pp0_iter2_w_real_load_4_reg_604;
        ap_phi_reg_pp0_iter3_w_real_load_5_reg_624 <= ap_phi_reg_pp0_iter2_w_real_load_5_reg_624;
        ap_phi_reg_pp0_iter3_w_real_load_6_reg_644 <= ap_phi_reg_pp0_iter2_w_real_load_6_reg_644;
        ap_phi_reg_pp0_iter3_w_real_load_7_reg_664 <= ap_phi_reg_pp0_iter2_w_real_load_7_reg_664;
        ap_phi_reg_pp0_iter3_w_real_load_8_reg_684 <= ap_phi_reg_pp0_iter2_w_real_load_8_reg_684;
        ap_phi_reg_pp0_iter3_w_real_load_reg_524 <= ap_phi_reg_pp0_iter2_w_real_load_reg_524;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        ap_phi_reg_pp0_iter4_w_imag_load_1_reg_534 <= ap_phi_reg_pp0_iter3_w_imag_load_1_reg_534;
        ap_phi_reg_pp0_iter4_w_imag_load_2_reg_554 <= ap_phi_reg_pp0_iter3_w_imag_load_2_reg_554;
        ap_phi_reg_pp0_iter4_w_imag_load_3_reg_574 <= ap_phi_reg_pp0_iter3_w_imag_load_3_reg_574;
        ap_phi_reg_pp0_iter4_w_imag_load_4_reg_594 <= ap_phi_reg_pp0_iter3_w_imag_load_4_reg_594;
        ap_phi_reg_pp0_iter4_w_imag_load_5_reg_614 <= ap_phi_reg_pp0_iter3_w_imag_load_5_reg_614;
        ap_phi_reg_pp0_iter4_w_imag_load_6_reg_634 <= ap_phi_reg_pp0_iter3_w_imag_load_6_reg_634;
        ap_phi_reg_pp0_iter4_w_imag_load_7_reg_654 <= ap_phi_reg_pp0_iter3_w_imag_load_7_reg_654;
        ap_phi_reg_pp0_iter4_w_imag_load_8_reg_674 <= ap_phi_reg_pp0_iter3_w_imag_load_8_reg_674;
        ap_phi_reg_pp0_iter4_w_imag_load_reg_514 <= ap_phi_reg_pp0_iter3_w_imag_load_reg_514;
        ap_phi_reg_pp0_iter4_w_real_load_1_reg_544 <= ap_phi_reg_pp0_iter3_w_real_load_1_reg_544;
        ap_phi_reg_pp0_iter4_w_real_load_2_reg_564 <= ap_phi_reg_pp0_iter3_w_real_load_2_reg_564;
        ap_phi_reg_pp0_iter4_w_real_load_3_reg_584 <= ap_phi_reg_pp0_iter3_w_real_load_3_reg_584;
        ap_phi_reg_pp0_iter4_w_real_load_4_reg_604 <= ap_phi_reg_pp0_iter3_w_real_load_4_reg_604;
        ap_phi_reg_pp0_iter4_w_real_load_5_reg_624 <= ap_phi_reg_pp0_iter3_w_real_load_5_reg_624;
        ap_phi_reg_pp0_iter4_w_real_load_6_reg_644 <= ap_phi_reg_pp0_iter3_w_real_load_6_reg_644;
        ap_phi_reg_pp0_iter4_w_real_load_7_reg_664 <= ap_phi_reg_pp0_iter3_w_real_load_7_reg_664;
        ap_phi_reg_pp0_iter4_w_real_load_8_reg_684 <= ap_phi_reg_pp0_iter3_w_real_load_8_reg_684;
        ap_phi_reg_pp0_iter4_w_real_load_reg_524 <= ap_phi_reg_pp0_iter3_w_real_load_reg_524;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        b_imag_reg_1362 <= b_imag_fu_1044_p1;
        b_imag_reg_1362_pp0_iter1_reg <= b_imag_reg_1362;
        b_imag_reg_1362_pp0_iter2_reg <= b_imag_reg_1362_pp0_iter1_reg;
        b_imag_reg_1362_pp0_iter3_reg <= b_imag_reg_1362_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        norm2_x_3_reg_1535 <= grp_fu_698_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001))) begin
        norm2_x_5_reg_1540 <= grp_fu_702_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        norm2_x_6_reg_1545 <= grp_fu_694_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001))) begin
        norm2_x_8_reg_1550 <= grp_fu_702_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001))) begin
        norm2_x_8_reg_1550_pp0_iter4_reg <= norm2_x_8_reg_1550;
        tmp_34_7_reg_1586_pp0_iter5_reg <= tmp_34_7_reg_1586;
        tmp_4_7_reg_1471_pp0_iter1_reg <= tmp_4_7_reg_1471;
        tmp_4_7_reg_1471_pp0_iter2_reg <= tmp_4_7_reg_1471_pp0_iter1_reg;
        tmp_4_8_reg_1476_pp0_iter1_reg <= tmp_4_8_reg_1476;
        tmp_4_8_reg_1476_pp0_iter2_reg <= tmp_4_8_reg_1476_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage11_11001) & (1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)))) begin
        reg_1002 <= grp_fu_749_p2;
        reg_1008 <= grp_fu_755_p2;
        reg_1014 <= grp_fu_761_p2;
        reg_1020 <= grp_fu_767_p2;
        reg_996 <= grp_fu_743_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        reg_1002_pp0_iter5_reg <= reg_1002;
        reg_1008_pp0_iter5_reg <= reg_1008;
        reg_1014_pp0_iter5_reg <= reg_1014;
        reg_1020_pp0_iter5_reg <= reg_1020;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'd0 == and_ln82_reg_1557_pp0_iter4_reg) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'd0 == and_ln82_reg_1557_pp0_iter5_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'd0 == and_ln82_reg_1557_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'd0 == and_ln82_reg_1557_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'd0 == and_ln82_reg_1557_pp0_iter5_reg) & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)))) begin
        reg_1026 <= grp_fu_773_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd1 == and_ln82_reg_1557) & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'd0 == and_ln82_reg_1557) & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == 1'b1)))) begin
        reg_782 <= grp_fu_743_p2;
        reg_788 <= grp_fu_749_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage20_11001) & (1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage20_11001) & (1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == 1'b1)))) begin
        reg_794 <= grp_fu_743_p2;
        reg_800 <= grp_fu_749_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd1 == and_ln82_reg_1557) & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'd0 == and_ln82_reg_1557) & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == 1'b1)))) begin
        reg_806 <= grp_fu_755_p2;
        reg_812 <= grp_fu_761_p2;
        reg_818 <= grp_fu_767_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage21_11001) & (1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage21_11001) & (1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == 1'b1)))) begin
        reg_824 <= grp_fu_743_p2;
        reg_830 <= grp_fu_749_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage20_11001) & (1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage20_11001) & (1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == 1'b1)))) begin
        reg_836 <= grp_fu_755_p2;
        reg_842 <= grp_fu_761_p2;
        reg_848 <= grp_fu_767_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage21_11001) & (1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage21_11001) & (1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == 1'b1)))) begin
        reg_854 <= grp_fu_755_p2;
        reg_860 <= grp_fu_761_p2;
        reg_866 <= grp_fu_767_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage22_11001) & (1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage22_11001) & (1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == 1'b1)))) begin
        reg_871 <= grp_fu_755_p2;
        reg_877 <= grp_fu_761_p2;
        reg_882 <= grp_fu_767_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == 1'b1)))) begin
        reg_888 <= grp_fu_694_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b1 == 1'b1)))) begin
        reg_894 <= grp_fu_698_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b1 == 1'b1)))) begin
        reg_900 <= grp_fu_694_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b1 == 1'b1)))) begin
        reg_906 <= grp_fu_698_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd1 == and_ln82_reg_1557) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'd0 == and_ln82_reg_1557) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b1 == 1'b1)))) begin
        reg_912 <= grp_fu_702_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b1 == 1'b1)))) begin
        reg_918 <= grp_fu_694_p2;
        reg_930 <= grp_fu_702_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b1 == 1'b1)))) begin
        reg_924 <= grp_fu_698_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == 1'b1)))) begin
        reg_936 <= grp_fu_694_p2;
        reg_942 <= grp_fu_698_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == 1'b1)))) begin
        reg_948 <= grp_fu_702_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_953 <= grp_fu_702_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (1'd0 == and_ln82_reg_1557_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'd0 == and_ln82_reg_1557_pp0_iter4_reg) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_959 <= grp_fu_773_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (1'd0 == and_ln82_reg_1557_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        reg_966 <= grp_fu_773_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage10_11001) & (1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        reg_972 <= grp_fu_749_p2;
        reg_978 <= grp_fu_755_p2;
        reg_984 <= grp_fu_761_p2;
        reg_990 <= grp_fu_767_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == 1'b1))) begin
        tmp_22_2_reg_1381 <= grp_fu_743_p2;
        tmp_22_3_reg_1386 <= grp_fu_749_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == 1'b1))) begin
        tmp_22_7_reg_1406 <= grp_fu_761_p2;
        tmp_22_8_reg_1411 <= grp_fu_767_p2;
        tmp_23_1_reg_1396 <= grp_fu_749_p2;
        tmp_23_2_reg_1401 <= grp_fu_755_p2;
        tmp_23_reg_1391 <= grp_fu_743_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        tmp_23_3_reg_1416 <= grp_fu_743_p2;
        tmp_23_4_reg_1421 <= grp_fu_749_p2;
        tmp_23_5_reg_1426 <= grp_fu_755_p2;
        tmp_23_6_reg_1431 <= grp_fu_761_p2;
        tmp_23_7_reg_1436 <= grp_fu_767_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == 1'b1))) begin
        tmp_23_8_reg_1441 <= grp_fu_743_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b1 == 1'b1))) begin
        tmp_25_1_reg_1487 <= grp_fu_749_p2;
        tmp_25_reg_1481 <= grp_fu_743_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        tmp_25_1_reg_1487_pp0_iter1_reg <= tmp_25_1_reg_1487;
        tmp_25_1_reg_1487_pp0_iter2_reg <= tmp_25_1_reg_1487_pp0_iter1_reg;
        tmp_25_1_reg_1487_pp0_iter3_reg <= tmp_25_1_reg_1487_pp0_iter2_reg;
        tmp_25_1_reg_1487_pp0_iter4_reg <= tmp_25_1_reg_1487_pp0_iter3_reg;
        tmp_25_reg_1481_pp0_iter1_reg <= tmp_25_reg_1481;
        tmp_25_reg_1481_pp0_iter2_reg <= tmp_25_reg_1481_pp0_iter1_reg;
        tmp_25_reg_1481_pp0_iter3_reg <= tmp_25_reg_1481_pp0_iter2_reg;
        tmp_25_reg_1481_pp0_iter4_reg <= tmp_25_reg_1481_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        tmp_25_2_reg_1493_pp0_iter1_reg <= tmp_25_2_reg_1493;
        tmp_25_2_reg_1493_pp0_iter2_reg <= tmp_25_2_reg_1493_pp0_iter1_reg;
        tmp_25_2_reg_1493_pp0_iter3_reg <= tmp_25_2_reg_1493_pp0_iter2_reg;
        tmp_25_2_reg_1493_pp0_iter4_reg <= tmp_25_2_reg_1493_pp0_iter3_reg;
        tmp_25_3_reg_1499_pp0_iter1_reg <= tmp_25_3_reg_1499;
        tmp_25_3_reg_1499_pp0_iter2_reg <= tmp_25_3_reg_1499_pp0_iter1_reg;
        tmp_25_3_reg_1499_pp0_iter3_reg <= tmp_25_3_reg_1499_pp0_iter2_reg;
        tmp_25_3_reg_1499_pp0_iter4_reg <= tmp_25_3_reg_1499_pp0_iter3_reg;
        tmp_25_4_reg_1505_pp0_iter1_reg <= tmp_25_4_reg_1505;
        tmp_25_4_reg_1505_pp0_iter2_reg <= tmp_25_4_reg_1505_pp0_iter1_reg;
        tmp_25_4_reg_1505_pp0_iter3_reg <= tmp_25_4_reg_1505_pp0_iter2_reg;
        tmp_25_4_reg_1505_pp0_iter4_reg <= tmp_25_4_reg_1505_pp0_iter3_reg;
        tmp_25_5_reg_1511_pp0_iter1_reg <= tmp_25_5_reg_1511;
        tmp_25_5_reg_1511_pp0_iter2_reg <= tmp_25_5_reg_1511_pp0_iter1_reg;
        tmp_25_5_reg_1511_pp0_iter3_reg <= tmp_25_5_reg_1511_pp0_iter2_reg;
        tmp_25_5_reg_1511_pp0_iter4_reg <= tmp_25_5_reg_1511_pp0_iter3_reg;
        tmp_25_6_reg_1517_pp0_iter1_reg <= tmp_25_6_reg_1517;
        tmp_25_6_reg_1517_pp0_iter2_reg <= tmp_25_6_reg_1517_pp0_iter1_reg;
        tmp_25_6_reg_1517_pp0_iter3_reg <= tmp_25_6_reg_1517_pp0_iter2_reg;
        tmp_25_6_reg_1517_pp0_iter4_reg <= tmp_25_6_reg_1517_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_25_7_reg_1523 <= grp_fu_743_p2;
        tmp_25_8_reg_1529 <= grp_fu_749_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == 1'b1))) begin
        tmp_2_1_reg_1342 <= grp_fu_755_p2;
        tmp_2_2_reg_1352 <= grp_fu_767_p2;
        tmp_3_1_reg_1347 <= grp_fu_761_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == 1'b1))) begin
        tmp_2_8_reg_1376 <= grp_fu_749_p2;
        tmp_3_7_reg_1371 <= grp_fu_743_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        tmp_34_2_reg_1561 <= grp_fu_773_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        tmp_34_3_reg_1566 <= grp_fu_773_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        tmp_34_4_reg_1571 <= grp_fu_773_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        tmp_34_5_reg_1576 <= grp_fu_773_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        tmp_34_5_reg_1576_pp0_iter5_reg <= tmp_34_5_reg_1576;
        tmp_4_4_reg_1456_pp0_iter1_reg <= tmp_4_4_reg_1456;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001))) begin
        tmp_34_6_reg_1581 <= grp_fu_773_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001))) begin
        tmp_34_6_reg_1581_pp0_iter5_reg <= tmp_34_6_reg_1581;
        tmp_4_5_reg_1461_pp0_iter1_reg <= tmp_4_5_reg_1461;
        tmp_4_6_reg_1466_pp0_iter1_reg <= tmp_4_6_reg_1466;
        tmp_4_6_reg_1466_pp0_iter2_reg <= tmp_4_6_reg_1466_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001))) begin
        tmp_34_7_reg_1586 <= grp_fu_773_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001))) begin
        tmp_34_8_reg_1591 <= grp_fu_773_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001))) begin
        tmp_34_8_reg_1591_pp0_iter5_reg <= tmp_34_8_reg_1591;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage17_11001) & (1'd0 == and_ln82_reg_1557_pp0_iter5_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        tmp_39_6_reg_1596 <= grp_fu_773_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        tmp_4_2_reg_1446 <= grp_fu_694_p2;
        tmp_4_3_reg_1451 <= grp_fu_698_p2;
        tmp_4_4_reg_1456 <= grp_fu_702_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001))) begin
        tmp_4_5_reg_1461 <= grp_fu_694_p2;
        tmp_4_6_reg_1466 <= grp_fu_698_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001))) begin
        tmp_4_7_reg_1471 <= grp_fu_694_p2;
        tmp_4_8_reg_1476 <= grp_fu_698_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        w_imag_load_1_reg_534 <= ap_phi_reg_pp0_iter5_w_imag_load_1_reg_534;
        w_real_load_1_reg_544 <= ap_phi_reg_pp0_iter5_w_real_load_1_reg_544;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        w_imag_load_2_reg_554 <= ap_phi_reg_pp0_iter5_w_imag_load_2_reg_554;
        w_real_load_2_reg_564 <= ap_phi_reg_pp0_iter5_w_real_load_2_reg_564;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        w_imag_load_3_reg_574 <= ap_phi_reg_pp0_iter5_w_imag_load_3_reg_574;
        w_real_load_3_reg_584 <= ap_phi_reg_pp0_iter5_w_real_load_3_reg_584;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        w_imag_load_4_reg_594 <= ap_phi_reg_pp0_iter5_w_imag_load_4_reg_594;
        w_real_load_4_reg_604 <= ap_phi_reg_pp0_iter5_w_real_load_4_reg_604;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        w_imag_load_8_reg_674 <= ap_phi_reg_pp0_iter5_w_imag_load_8_reg_674;
        w_real_load_8_reg_684 <= ap_phi_reg_pp0_iter5_w_real_load_8_reg_684;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        xor_ln14_reg_1357 <= xor_ln14_fu_1038_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        W1_imag_ap_vld = 1'b1;
    end else begin
        W1_imag_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == W1_old_imag_ap_vld)) begin
        W1_old_imag_ap_vld_in_sig = W1_old_imag_ap_vld;
    end else begin
        W1_old_imag_ap_vld_in_sig = W1_old_imag_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W1_old_imag_blk_n = W1_old_imag_ap_vld;
    end else begin
        W1_old_imag_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == W1_old_imag_ap_vld)) begin
        W1_old_imag_in_sig = W1_old_imag;
    end else begin
        W1_old_imag_in_sig = W1_old_imag_preg;
    end
end

always @ (*) begin
    if ((1'b1 == W1_old_real_ap_vld)) begin
        W1_old_real_ap_vld_in_sig = W1_old_real_ap_vld;
    end else begin
        W1_old_real_ap_vld_in_sig = W1_old_real_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W1_old_real_blk_n = W1_old_real_ap_vld;
    end else begin
        W1_old_real_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == W1_old_real_ap_vld)) begin
        W1_old_real_in_sig = W1_old_real;
    end else begin
        W1_old_real_in_sig = W1_old_real_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        W1_real_ap_vld = 1'b1;
    end else begin
        W1_real_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001))) begin
        W2_imag_ap_vld = 1'b1;
    end else begin
        W2_imag_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == W2_old_imag_ap_vld)) begin
        W2_old_imag_ap_vld_in_sig = W2_old_imag_ap_vld;
    end else begin
        W2_old_imag_ap_vld_in_sig = W2_old_imag_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W2_old_imag_blk_n = W2_old_imag_ap_vld;
    end else begin
        W2_old_imag_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == W2_old_imag_ap_vld)) begin
        W2_old_imag_in_sig = W2_old_imag;
    end else begin
        W2_old_imag_in_sig = W2_old_imag_preg;
    end
end

always @ (*) begin
    if ((1'b1 == W2_old_real_ap_vld)) begin
        W2_old_real_ap_vld_in_sig = W2_old_real_ap_vld;
    end else begin
        W2_old_real_ap_vld_in_sig = W2_old_real_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W2_old_real_blk_n = W2_old_real_ap_vld;
    end else begin
        W2_old_real_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == W2_old_real_ap_vld)) begin
        W2_old_real_in_sig = W2_old_real;
    end else begin
        W2_old_real_in_sig = W2_old_real_preg;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001))) begin
        W2_real_ap_vld = 1'b1;
    end else begin
        W2_real_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        W3_imag_ap_vld = 1'b1;
    end else begin
        W3_imag_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == W3_old_imag_ap_vld)) begin
        W3_old_imag_ap_vld_in_sig = W3_old_imag_ap_vld;
    end else begin
        W3_old_imag_ap_vld_in_sig = W3_old_imag_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_old_imag_blk_n = W3_old_imag_ap_vld;
    end else begin
        W3_old_imag_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == W3_old_imag_ap_vld)) begin
        W3_old_imag_in_sig = W3_old_imag;
    end else begin
        W3_old_imag_in_sig = W3_old_imag_preg;
    end
end

always @ (*) begin
    if ((1'b1 == W3_old_real_ap_vld)) begin
        W3_old_real_ap_vld_in_sig = W3_old_real_ap_vld;
    end else begin
        W3_old_real_ap_vld_in_sig = W3_old_real_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W3_old_real_blk_n = W3_old_real_ap_vld;
    end else begin
        W3_old_real_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == W3_old_real_ap_vld)) begin
        W3_old_real_in_sig = W3_old_real;
    end else begin
        W3_old_real_in_sig = W3_old_real_preg;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001))) begin
        W3_real_ap_vld = 1'b1;
    end else begin
        W3_real_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        W4_imag_ap_vld = 1'b1;
    end else begin
        W4_imag_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == W4_old_imag_ap_vld)) begin
        W4_old_imag_ap_vld_in_sig = W4_old_imag_ap_vld;
    end else begin
        W4_old_imag_ap_vld_in_sig = W4_old_imag_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W4_old_imag_blk_n = W4_old_imag_ap_vld;
    end else begin
        W4_old_imag_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == W4_old_imag_ap_vld)) begin
        W4_old_imag_in_sig = W4_old_imag;
    end else begin
        W4_old_imag_in_sig = W4_old_imag_preg;
    end
end

always @ (*) begin
    if ((1'b1 == W4_old_real_ap_vld)) begin
        W4_old_real_ap_vld_in_sig = W4_old_real_ap_vld;
    end else begin
        W4_old_real_ap_vld_in_sig = W4_old_real_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W4_old_real_blk_n = W4_old_real_ap_vld;
    end else begin
        W4_old_real_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == W4_old_real_ap_vld)) begin
        W4_old_real_in_sig = W4_old_real;
    end else begin
        W4_old_real_in_sig = W4_old_real_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        W4_real_ap_vld = 1'b1;
    end else begin
        W4_real_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        W5_imag_ap_vld = 1'b1;
    end else begin
        W5_imag_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == W5_old_imag_ap_vld)) begin
        W5_old_imag_ap_vld_in_sig = W5_old_imag_ap_vld;
    end else begin
        W5_old_imag_ap_vld_in_sig = W5_old_imag_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W5_old_imag_blk_n = W5_old_imag_ap_vld;
    end else begin
        W5_old_imag_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == W5_old_imag_ap_vld)) begin
        W5_old_imag_in_sig = W5_old_imag;
    end else begin
        W5_old_imag_in_sig = W5_old_imag_preg;
    end
end

always @ (*) begin
    if ((1'b1 == W5_old_real_ap_vld)) begin
        W5_old_real_ap_vld_in_sig = W5_old_real_ap_vld;
    end else begin
        W5_old_real_ap_vld_in_sig = W5_old_real_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W5_old_real_blk_n = W5_old_real_ap_vld;
    end else begin
        W5_old_real_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == W5_old_real_ap_vld)) begin
        W5_old_real_in_sig = W5_old_real;
    end else begin
        W5_old_real_in_sig = W5_old_real_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        W5_real_ap_vld = 1'b1;
    end else begin
        W5_real_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        W6_imag_ap_vld = 1'b1;
    end else begin
        W6_imag_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == W6_old_imag_ap_vld)) begin
        W6_old_imag_ap_vld_in_sig = W6_old_imag_ap_vld;
    end else begin
        W6_old_imag_ap_vld_in_sig = W6_old_imag_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W6_old_imag_blk_n = W6_old_imag_ap_vld;
    end else begin
        W6_old_imag_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == W6_old_imag_ap_vld)) begin
        W6_old_imag_in_sig = W6_old_imag;
    end else begin
        W6_old_imag_in_sig = W6_old_imag_preg;
    end
end

always @ (*) begin
    if ((1'b1 == W6_old_real_ap_vld)) begin
        W6_old_real_ap_vld_in_sig = W6_old_real_ap_vld;
    end else begin
        W6_old_real_ap_vld_in_sig = W6_old_real_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W6_old_real_blk_n = W6_old_real_ap_vld;
    end else begin
        W6_old_real_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == W6_old_real_ap_vld)) begin
        W6_old_real_in_sig = W6_old_real;
    end else begin
        W6_old_real_in_sig = W6_old_real_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        W6_real_ap_vld = 1'b1;
    end else begin
        W6_real_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        W7_imag_ap_vld = 1'b1;
    end else begin
        W7_imag_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == W7_old_imag_ap_vld)) begin
        W7_old_imag_ap_vld_in_sig = W7_old_imag_ap_vld;
    end else begin
        W7_old_imag_ap_vld_in_sig = W7_old_imag_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W7_old_imag_blk_n = W7_old_imag_ap_vld;
    end else begin
        W7_old_imag_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == W7_old_imag_ap_vld)) begin
        W7_old_imag_in_sig = W7_old_imag;
    end else begin
        W7_old_imag_in_sig = W7_old_imag_preg;
    end
end

always @ (*) begin
    if ((1'b1 == W7_old_real_ap_vld)) begin
        W7_old_real_ap_vld_in_sig = W7_old_real_ap_vld;
    end else begin
        W7_old_real_ap_vld_in_sig = W7_old_real_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W7_old_real_blk_n = W7_old_real_ap_vld;
    end else begin
        W7_old_real_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == W7_old_real_ap_vld)) begin
        W7_old_real_in_sig = W7_old_real;
    end else begin
        W7_old_real_in_sig = W7_old_real_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        W7_real_ap_vld = 1'b1;
    end else begin
        W7_real_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        W8_imag_ap_vld = 1'b1;
    end else begin
        W8_imag_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == W8_old_imag_ap_vld)) begin
        W8_old_imag_ap_vld_in_sig = W8_old_imag_ap_vld;
    end else begin
        W8_old_imag_ap_vld_in_sig = W8_old_imag_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W8_old_imag_blk_n = W8_old_imag_ap_vld;
    end else begin
        W8_old_imag_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == W8_old_imag_ap_vld)) begin
        W8_old_imag_in_sig = W8_old_imag;
    end else begin
        W8_old_imag_in_sig = W8_old_imag_preg;
    end
end

always @ (*) begin
    if ((1'b1 == W8_old_real_ap_vld)) begin
        W8_old_real_ap_vld_in_sig = W8_old_real_ap_vld;
    end else begin
        W8_old_real_ap_vld_in_sig = W8_old_real_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W8_old_real_blk_n = W8_old_real_ap_vld;
    end else begin
        W8_old_real_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == W8_old_real_ap_vld)) begin
        W8_old_real_in_sig = W8_old_real;
    end else begin
        W8_old_real_in_sig = W8_old_real_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        W8_real_ap_vld = 1'b1;
    end else begin
        W8_real_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        W9_imag_ap_vld = 1'b1;
    end else begin
        W9_imag_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == W9_old_imag_ap_vld)) begin
        W9_old_imag_ap_vld_in_sig = W9_old_imag_ap_vld;
    end else begin
        W9_old_imag_ap_vld_in_sig = W9_old_imag_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W9_old_imag_blk_n = W9_old_imag_ap_vld;
    end else begin
        W9_old_imag_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == W9_old_imag_ap_vld)) begin
        W9_old_imag_in_sig = W9_old_imag;
    end else begin
        W9_old_imag_in_sig = W9_old_imag_preg;
    end
end

always @ (*) begin
    if ((1'b1 == W9_old_real_ap_vld)) begin
        W9_old_real_ap_vld_in_sig = W9_old_real_ap_vld;
    end else begin
        W9_old_real_ap_vld_in_sig = W9_old_real_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W9_old_real_blk_n = W9_old_real_ap_vld;
    end else begin
        W9_old_real_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == W9_old_real_ap_vld)) begin
        W9_old_real_in_sig = W9_old_real;
    end else begin
        W9_old_real_in_sig = W9_old_real_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        W9_real_ap_vld = 1'b1;
    end else begin
        W9_real_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (1'b1 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln82_reg_1557_pp0_iter5_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17))) begin
        ap_phi_mux_w_imag_load_5_phi_fu_617_p4 = reg_1026;
    end else begin
        ap_phi_mux_w_imag_load_5_phi_fu_617_p4 = ap_phi_reg_pp0_iter5_w_imag_load_5_reg_614;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln82_reg_1557_pp0_iter5_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18))) begin
        ap_phi_mux_w_imag_load_6_phi_fu_637_p4 = tmp_39_6_reg_1596;
    end else begin
        ap_phi_mux_w_imag_load_6_phi_fu_637_p4 = ap_phi_reg_pp0_iter5_w_imag_load_6_reg_634;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln82_reg_1557_pp0_iter5_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19))) begin
        ap_phi_mux_w_imag_load_7_phi_fu_657_p4 = reg_1026;
    end else begin
        ap_phi_mux_w_imag_load_7_phi_fu_657_p4 = ap_phi_reg_pp0_iter5_w_imag_load_7_reg_654;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln82_reg_1557_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        ap_phi_mux_w_imag_load_phi_fu_517_p4 = reg_1026;
    end else begin
        ap_phi_mux_w_imag_load_phi_fu_517_p4 = ap_phi_reg_pp0_iter5_w_imag_load_reg_514;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln82_reg_1557_pp0_iter5_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17))) begin
        ap_phi_mux_w_real_load_5_phi_fu_627_p4 = tmp_34_5_reg_1576_pp0_iter5_reg;
    end else begin
        ap_phi_mux_w_real_load_5_phi_fu_627_p4 = ap_phi_reg_pp0_iter5_w_real_load_5_reg_624;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln82_reg_1557_pp0_iter5_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18))) begin
        ap_phi_mux_w_real_load_6_phi_fu_647_p4 = tmp_34_6_reg_1581_pp0_iter5_reg;
    end else begin
        ap_phi_mux_w_real_load_6_phi_fu_647_p4 = ap_phi_reg_pp0_iter5_w_real_load_6_reg_644;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln82_reg_1557_pp0_iter5_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19))) begin
        ap_phi_mux_w_real_load_7_phi_fu_667_p4 = tmp_34_7_reg_1586_pp0_iter5_reg;
    end else begin
        ap_phi_mux_w_real_load_7_phi_fu_667_p4 = ap_phi_reg_pp0_iter5_w_real_load_7_reg_664;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln82_reg_1557_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        ap_phi_mux_w_real_load_phi_fu_527_p4 = reg_959;
    end else begin
        ap_phi_mux_w_real_load_phi_fu_527_p4 = ap_phi_reg_pp0_iter5_w_real_load_reg_524;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if ((err_imag_ap_vld == 1'b1)) begin
        err_imag_ap_vld_in_sig = err_imag_ap_vld;
    end else begin
        err_imag_ap_vld_in_sig = err_imag_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        err_imag_blk_n = err_imag_ap_vld;
    end else begin
        err_imag_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((err_imag_ap_vld == 1'b1)) begin
        err_imag_in_sig = err_imag;
    end else begin
        err_imag_in_sig = err_imag_preg;
    end
end

always @ (*) begin
    if ((err_real_ap_vld == 1'b1)) begin
        err_real_ap_vld_in_sig = err_real_ap_vld;
    end else begin
        err_real_ap_vld_in_sig = err_real_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        err_real_blk_n = err_real_ap_vld;
    end else begin
        err_real_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((err_real_ap_vld == 1'b1)) begin
        err_real_in_sig = err_real;
    end else begin
        err_real_in_sig = err_real_preg;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)))) begin
        grp_fu_694_ce = 1'b1;
    end else begin
        grp_fu_694_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage10_00001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_00001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_00001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        grp_fu_694_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage8_00001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((1'b0 == ap_block_pp0_stage13_00001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage18_00001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage17_00001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage14_00001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage22_00001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'd1 == and_ln82_reg_1557) & (1'b0 == ap_block_pp0_stage21_00001) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'd1 == and_ln82_reg_1557) & (1'b0 == ap_block_pp0_stage23_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'd0 == and_ln82_reg_1557) & (1'b0 == ap_block_pp0_stage21_00001) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'd0 == and_ln82_reg_1557) & (1'b0 == ap_block_pp0_stage23_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage19_00001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage7_00001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_00001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_00001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage20_00001) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_00001)) | ((1'b0 == ap_block_pp0_stage12_00001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage0_00001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1)))) begin
        grp_fu_694_opcode = 2'd0;
    end else begin
        grp_fu_694_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        grp_fu_694_p0 = w_real_load_8_reg_684;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19))) begin
        grp_fu_694_p0 = ap_phi_mux_w_real_load_7_phi_fu_667_p4;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18))) begin
        grp_fu_694_p0 = ap_phi_mux_w_real_load_6_phi_fu_647_p4;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17))) begin
        grp_fu_694_p0 = ap_phi_mux_w_real_load_5_phi_fu_627_p4;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
        grp_fu_694_p0 = w_real_load_3_reg_584;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage8))) begin
        grp_fu_694_p0 = w_real_load_1_reg_544;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_694_p0 = ap_phi_mux_w_real_load_phi_fu_527_p4;
    end else if ((((1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23)) | ((1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23)))) begin
        grp_fu_694_p0 = reg_854;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage21)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage21)))) begin
        grp_fu_694_p0 = reg_806;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22))) begin
        grp_fu_694_p0 = norm2_x_6_reg_1545;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
        grp_fu_694_p0 = norm2_x_5_reg_1540;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage20)) | ((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12)))) begin
        grp_fu_694_p0 = reg_888;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage11))) begin
        grp_fu_694_p0 = reg_882;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage10))) begin
        grp_fu_694_p0 = tmp_22_3_reg_1386;
    end else if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        grp_fu_694_p0 = reg_860;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage7))) begin
        grp_fu_694_p0 = reg_848;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_694_p0 = reg_824;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_694_p0 = tmp_2_2_reg_1352;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_694_p0 = reg_782;
    end else begin
        grp_fu_694_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        grp_fu_694_p1 = W9_old_real_read_reg_1110_pp0_iter5_reg;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19))) begin
        grp_fu_694_p1 = W8_old_real_read_reg_1120_pp0_iter5_reg;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18))) begin
        grp_fu_694_p1 = W7_old_real_read_reg_1130_pp0_iter5_reg;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17))) begin
        grp_fu_694_p1 = W6_old_real_read_reg_1140_pp0_iter5_reg;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
        grp_fu_694_p1 = W4_old_real_read_reg_1160_pp0_iter5_reg;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage8))) begin
        grp_fu_694_p1 = W2_old_real_read_reg_1180_pp0_iter5_reg;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_694_p1 = W1_old_real_read_reg_1190_pp0_iter5_reg;
    end else if ((((1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23)) | ((1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23)))) begin
        grp_fu_694_p1 = reg_860;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage21)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage21)))) begin
        grp_fu_694_p1 = reg_812;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22))) begin
        grp_fu_694_p1 = tmp_4_7_reg_1471_pp0_iter2_reg;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
        grp_fu_694_p1 = tmp_4_6_reg_1466_pp0_iter2_reg;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage20))) begin
        grp_fu_694_p1 = reg_894;
    end else if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12))) begin
        grp_fu_694_p1 = 32'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage11))) begin
        grp_fu_694_p1 = tmp_23_6_reg_1431;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage10))) begin
        grp_fu_694_p1 = tmp_23_3_reg_1416;
    end else if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        grp_fu_694_p1 = tmp_23_reg_1391;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage7))) begin
        grp_fu_694_p1 = tmp_3_7_reg_1371;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_694_p1 = reg_830;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_694_p1 = reg_794;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_694_p1 = reg_788;
    end else begin
        grp_fu_694_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)))) begin
        grp_fu_698_ce = 1'b1;
    end else begin
        grp_fu_698_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage10_00001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_00001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_00001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        grp_fu_698_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage8_00001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((1'b0 == ap_block_pp0_stage14_00001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_00001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage18_00001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage17_00001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage12_00001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage20_00001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'd1 == and_ln82_reg_1557) & (1'b0 == ap_block_pp0_stage22_00001) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'd1 == and_ln82_reg_1557) & (1'b0 == ap_block_pp0_stage21_00001) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'd1 == and_ln82_reg_1557) & (1'b0 == ap_block_pp0_stage23_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'd0 == and_ln82_reg_1557) & (1'b0 == ap_block_pp0_stage22_00001) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'd0 == and_ln82_reg_1557) & (1'b0 == ap_block_pp0_stage21_00001) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'd0 == and_ln82_reg_1557) & (1'b0 == ap_block_pp0_stage23_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage19_00001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage7_00001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_00001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_00001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_00001)) | ((1'b0 == ap_block_pp0_stage0_00001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1)))) begin
        grp_fu_698_opcode = 2'd0;
    end else begin
        grp_fu_698_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        grp_fu_698_p0 = w_imag_load_8_reg_674;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19))) begin
        grp_fu_698_p0 = ap_phi_mux_w_imag_load_7_phi_fu_657_p4;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18))) begin
        grp_fu_698_p0 = ap_phi_mux_w_imag_load_6_phi_fu_637_p4;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17))) begin
        grp_fu_698_p0 = ap_phi_mux_w_imag_load_5_phi_fu_617_p4;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
        grp_fu_698_p0 = w_imag_load_4_reg_594;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
        grp_fu_698_p0 = w_imag_load_3_reg_574;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage8))) begin
        grp_fu_698_p0 = w_imag_load_1_reg_534;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_698_p0 = ap_phi_mux_w_imag_load_phi_fu_517_p4;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage22)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage22)))) begin
        grp_fu_698_p0 = reg_842;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage21)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage21)))) begin
        grp_fu_698_p0 = reg_818;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20))) begin
        grp_fu_698_p0 = norm2_x_3_reg_1535;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12))) begin
        grp_fu_698_p0 = reg_953;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage11))) begin
        grp_fu_698_p0 = tmp_22_7_reg_1406;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage10))) begin
        grp_fu_698_p0 = reg_871;
    end else if ((((1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23)) | ((1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23)) | ((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9)))) begin
        grp_fu_698_p0 = reg_866;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage7))) begin
        grp_fu_698_p0 = tmp_2_8_reg_1376;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_698_p0 = reg_836;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_698_p0 = reg_800;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_698_p0 = tmp_2_1_reg_1342;
    end else begin
        grp_fu_698_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        grp_fu_698_p1 = W9_old_imag_read_reg_1105_pp0_iter5_reg;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19))) begin
        grp_fu_698_p1 = W8_old_imag_read_reg_1115_pp0_iter5_reg;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18))) begin
        grp_fu_698_p1 = W7_old_imag_read_reg_1125_pp0_iter5_reg;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17))) begin
        grp_fu_698_p1 = W6_old_imag_read_reg_1135_pp0_iter5_reg;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
        grp_fu_698_p1 = W5_old_imag_read_reg_1145_pp0_iter5_reg;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
        grp_fu_698_p1 = W4_old_imag_read_reg_1155_pp0_iter5_reg;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage8))) begin
        grp_fu_698_p1 = W2_old_imag_read_reg_1175_pp0_iter5_reg;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_698_p1 = W1_old_imag_read_reg_1185_pp0_iter5_reg;
    end else if ((((1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23)) | ((1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23)))) begin
        grp_fu_698_p1 = reg_871;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage22)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage22)))) begin
        grp_fu_698_p1 = reg_848;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage21)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage21)))) begin
        grp_fu_698_p1 = reg_794;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20))) begin
        grp_fu_698_p1 = tmp_4_4_reg_1456_pp0_iter1_reg;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12))) begin
        grp_fu_698_p1 = tmp_4_3_reg_1451;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage11))) begin
        grp_fu_698_p1 = tmp_23_7_reg_1436;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage10))) begin
        grp_fu_698_p1 = tmp_23_4_reg_1421;
    end else if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        grp_fu_698_p1 = tmp_23_1_reg_1396;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage7))) begin
        grp_fu_698_p1 = reg_854;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_698_p1 = reg_842;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_698_p1 = reg_806;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_698_p1 = tmp_3_1_reg_1347;
    end else begin
        grp_fu_698_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)))) begin
        grp_fu_702_ce = 1'b1;
    end else begin
        grp_fu_702_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage10_00001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_00001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_00001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        grp_fu_702_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage8_00001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((1'b0 == ap_block_pp0_stage13_00001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_00001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage6_00001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_00001)) | ((1'b0 == ap_block_pp0_stage7_00001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'd1 == and_ln82_reg_1557) & (1'b0 == ap_block_pp0_stage22_00001) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'd1 == and_ln82_reg_1557) & (1'b0 == ap_block_pp0_stage21_00001) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'd1 == and_ln82_reg_1557) & (1'b0 == ap_block_pp0_stage20_00001) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'd1 == and_ln82_reg_1557) & (1'b0 == ap_block_pp0_stage23_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'd0 == and_ln82_reg_1557) & (1'b0 == ap_block_pp0_stage22_00001) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'd0 == and_ln82_reg_1557) & (1'b0 == ap_block_pp0_stage21_00001) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'd0 == and_ln82_reg_1557) & (1'b0 == ap_block_pp0_stage20_00001) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'd0 == and_ln82_reg_1557) & (1'b0 == ap_block_pp0_stage23_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage5_00001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == 1'b1)))) begin
        grp_fu_702_opcode = 2'd0;
    end else begin
        grp_fu_702_opcode = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
        grp_fu_702_p0 = w_real_load_4_reg_604;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12))) begin
        grp_fu_702_p0 = w_imag_load_2_reg_554;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage8))) begin
        grp_fu_702_p0 = w_real_load_2_reg_564;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage22)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage22)))) begin
        grp_fu_702_p0 = reg_824;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage21)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage21)))) begin
        grp_fu_702_p0 = reg_800;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage20)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage20)))) begin
        grp_fu_702_p0 = reg_782;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage7))) begin
        grp_fu_702_p0 = reg_900;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_702_p0 = reg_906;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_702_p0 = reg_888;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage11))) begin
        grp_fu_702_p0 = tmp_22_8_reg_1411;
    end else if ((((1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23)) | ((1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage10)))) begin
        grp_fu_702_p0 = reg_877;
    end else if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        grp_fu_702_p0 = tmp_22_2_reg_1381;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_702_p0 = reg_812;
    end else begin
        grp_fu_702_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
        grp_fu_702_p1 = W5_old_real_read_reg_1150_pp0_iter5_reg;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12))) begin
        grp_fu_702_p1 = W3_old_imag_read_reg_1165_pp0_iter5_reg;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage8))) begin
        grp_fu_702_p1 = W3_old_real_read_reg_1170_pp0_iter5_reg;
    end else if ((((1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23)) | ((1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23)))) begin
        grp_fu_702_p1 = reg_882;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage22)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage22)))) begin
        grp_fu_702_p1 = reg_830;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage21)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage21)))) begin
        grp_fu_702_p1 = reg_836;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage20)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage20)))) begin
        grp_fu_702_p1 = reg_788;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage7))) begin
        grp_fu_702_p1 = tmp_4_8_reg_1476_pp0_iter2_reg;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_702_p1 = tmp_4_5_reg_1461_pp0_iter1_reg;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_702_p1 = tmp_4_2_reg_1446;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage11))) begin
        grp_fu_702_p1 = tmp_23_8_reg_1441;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage10))) begin
        grp_fu_702_p1 = tmp_23_5_reg_1426;
    end else if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        grp_fu_702_p1 = tmp_23_2_reg_1401;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_702_p1 = reg_818;
    end else begin
        grp_fu_702_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)))) begin
        grp_fu_743_ce = 1'b1;
    end else begin
        grp_fu_743_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage8)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage8)))) begin
        grp_fu_743_p0 = reg_924;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage17)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage17)))) begin
        grp_fu_743_p0 = b_imag_reg_1362_pp0_iter3_reg;
    end else if ((((1'd1 == and_ln82_fu_1085_p2) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage16)) | ((1'd0 == and_ln82_fu_1085_p2) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage16)) | ((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage18)))) begin
        grp_fu_743_p0 = err_real_read_reg_1096_pp0_iter3_reg;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage21))) begin
        grp_fu_743_p0 = reg_942;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage20))) begin
        grp_fu_743_p0 = reg_912;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage19))) begin
        grp_fu_743_p0 = reg_900;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage7)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage6)))) begin
        grp_fu_743_p0 = b_imag_reg_1362;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_743_p0 = b_imag_fu_1044_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_743_p0 = err_real_read_reg_1096;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_743_p0 = x8_imag_read_reg_1210;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_743_p0 = x6_real_read_reg_1248;
    end else if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_743_p0 = x3_imag_read_reg_1287;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_743_p0 = x1_real_in_sig;
    end else begin
        grp_fu_743_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage8)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage8)))) begin
        grp_fu_743_p1 = mu_read_reg_1333_pp0_iter4_reg;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage18)))) begin
        grp_fu_743_p1 = x6_imag_read_reg_1240_pp0_iter3_reg;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage17)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage17)))) begin
        grp_fu_743_p1 = x3_real_read_reg_1295_pp0_iter3_reg;
    end else if ((((1'd1 == and_ln82_fu_1085_p2) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage16)) | ((1'd0 == and_ln82_fu_1085_p2) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage16)))) begin
        grp_fu_743_p1 = x1_imag_read_reg_1318_pp0_iter3_reg;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage21)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage20)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage19)))) begin
        grp_fu_743_p1 = mu_read_reg_1333;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage7))) begin
        grp_fu_743_p1 = x9_imag_read_reg_1195;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_743_p1 = x4_imag_read_reg_1272;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_743_p1 = x1_imag_read_reg_1318;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_743_p1 = x3_real_read_reg_1295;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_743_p1 = x8_imag_read_reg_1210;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_743_p1 = x6_real_read_reg_1248;
    end else if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_743_p1 = x3_imag_read_reg_1287;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_743_p1 = x1_real_in_sig;
    end else begin
        grp_fu_743_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)))) begin
        grp_fu_749_ce = 1'b1;
    end else begin
        grp_fu_749_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)))) begin
        grp_fu_749_p0 = reg_912;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage17)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage17)))) begin
        grp_fu_749_p0 = err_real_read_reg_1096_pp0_iter3_reg;
    end else if ((((1'd1 == and_ln82_fu_1085_p2) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage16)) | ((1'd0 == and_ln82_fu_1085_p2) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage16)) | ((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage18)))) begin
        grp_fu_749_p0 = b_imag_reg_1362_pp0_iter3_reg;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage8)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage8)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage21)))) begin
        grp_fu_749_p0 = reg_948;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage20))) begin
        grp_fu_749_p0 = reg_918;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage19))) begin
        grp_fu_749_p0 = reg_906;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_749_p0 = b_imag_reg_1362;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_749_p0 = b_imag_fu_1044_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_749_p0 = err_real_read_reg_1096;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_749_p0 = x9_real_read_reg_1203;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_749_p0 = x6_imag_read_reg_1240;
    end else if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_749_p0 = x4_real_read_reg_1280;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_749_p0 = x1_imag_in_sig;
    end else begin
        grp_fu_749_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage8)) | ((1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage8)) | ((1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)))) begin
        grp_fu_749_p1 = mu_read_reg_1333_pp0_iter4_reg;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage18)))) begin
        grp_fu_749_p1 = x6_real_read_reg_1248_pp0_iter3_reg;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage17)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage17)))) begin
        grp_fu_749_p1 = x4_imag_read_reg_1272_pp0_iter3_reg;
    end else if ((((1'd1 == and_ln82_fu_1085_p2) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage16)) | ((1'd0 == and_ln82_fu_1085_p2) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage16)))) begin
        grp_fu_749_p1 = x1_real_read_reg_1325_pp0_iter3_reg;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage21)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage20)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage19)))) begin
        grp_fu_749_p1 = mu_read_reg_1333;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_749_p1 = x5_imag_read_reg_1256;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_749_p1 = x2_imag_read_reg_1302;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_749_p1 = x9_real_read_reg_1203;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_749_p1 = x6_imag_read_reg_1240;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage4)) | ((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        grp_fu_749_p1 = x4_real_read_reg_1280;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_749_p1 = x1_imag_in_sig;
    end else begin
        grp_fu_749_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)))) begin
        grp_fu_755_ce = 1'b1;
    end else begin
        grp_fu_755_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage8)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage8)))) begin
        grp_fu_755_p0 = reg_936;
    end else if ((((1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)))) begin
        grp_fu_755_p0 = reg_918;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage17)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage17)) | ((1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19)) | ((1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19)))) begin
        grp_fu_755_p0 = b_imag_reg_1362_pp0_iter3_reg;
    end else if ((((1'd1 == and_ln82_fu_1085_p2) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage16)) | ((1'd0 == and_ln82_fu_1085_p2) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage16)) | ((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage18)))) begin
        grp_fu_755_p0 = err_real_read_reg_1096_pp0_iter3_reg;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage20))) begin
        grp_fu_755_p0 = reg_924;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_755_p0 = b_imag_reg_1362;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_755_p0 = b_imag_fu_1044_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_755_p0 = err_real_read_reg_1096;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_755_p0 = x9_imag_read_reg_1195;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_755_p0 = x7_real_read_reg_1232;
    end else if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_755_p0 = x4_imag_read_reg_1272;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_755_p0 = x2_real_in_sig;
    end else begin
        grp_fu_755_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage8)) | ((1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage8)) | ((1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)))) begin
        grp_fu_755_p1 = mu_read_reg_1333_pp0_iter4_reg;
    end else if ((((1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19)) | ((1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19)))) begin
        grp_fu_755_p1 = x8_real_read_reg_1217_pp0_iter3_reg;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage18)))) begin
        grp_fu_755_p1 = x7_imag_read_reg_1225_pp0_iter3_reg;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage17)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage17)))) begin
        grp_fu_755_p1 = x4_real_read_reg_1280_pp0_iter3_reg;
    end else if ((((1'd1 == and_ln82_fu_1085_p2) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage16)) | ((1'd0 == and_ln82_fu_1085_p2) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage16)))) begin
        grp_fu_755_p1 = x2_imag_read_reg_1302_pp0_iter3_reg;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage20))) begin
        grp_fu_755_p1 = mu_read_reg_1333;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_755_p1 = x6_imag_read_reg_1240;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_755_p1 = x3_imag_read_reg_1287;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_755_p1 = x5_real_read_reg_1264;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_755_p1 = x9_imag_read_reg_1195;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_755_p1 = x7_real_read_reg_1232;
    end else if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_755_p1 = x4_imag_read_reg_1272;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_755_p1 = x2_real_in_sig;
    end else begin
        grp_fu_755_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)))) begin
        grp_fu_761_ce = 1'b1;
    end else begin
        grp_fu_761_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage8)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage8)))) begin
        grp_fu_761_p0 = reg_942;
    end else if ((((1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)))) begin
        grp_fu_761_p0 = reg_894;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage17)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage17)) | ((1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19)) | ((1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19)))) begin
        grp_fu_761_p0 = err_real_read_reg_1096_pp0_iter3_reg;
    end else if ((((1'd1 == and_ln82_fu_1085_p2) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage16)) | ((1'd0 == and_ln82_fu_1085_p2) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage16)) | ((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage18)))) begin
        grp_fu_761_p0 = b_imag_reg_1362_pp0_iter3_reg;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage20))) begin
        grp_fu_761_p0 = reg_930;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_761_p0 = b_imag_reg_1362;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage5)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage4)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage3)))) begin
        grp_fu_761_p0 = err_real_read_reg_1096;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_761_p0 = x7_imag_read_reg_1225;
    end else if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_761_p0 = x5_real_read_reg_1264;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_761_p0 = x2_imag_in_sig;
    end else begin
        grp_fu_761_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage8)) | ((1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage8)) | ((1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)))) begin
        grp_fu_761_p1 = mu_read_reg_1333_pp0_iter4_reg;
    end else if ((((1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19)) | ((1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19)))) begin
        grp_fu_761_p1 = x9_imag_read_reg_1195_pp0_iter3_reg;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage18)))) begin
        grp_fu_761_p1 = x7_real_read_reg_1232_pp0_iter3_reg;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage17)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage17)))) begin
        grp_fu_761_p1 = x5_imag_read_reg_1256_pp0_iter3_reg;
    end else if ((((1'd1 == and_ln82_fu_1085_p2) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage16)) | ((1'd0 == and_ln82_fu_1085_p2) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage16)))) begin
        grp_fu_761_p1 = x2_real_read_reg_1310_pp0_iter3_reg;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage20))) begin
        grp_fu_761_p1 = mu_read_reg_1333;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_761_p1 = x8_real_read_reg_1217;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_761_p1 = x6_real_read_reg_1248;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_761_p1 = x1_real_read_reg_1325;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage2)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage6)))) begin
        grp_fu_761_p1 = x7_imag_read_reg_1225;
    end else if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_761_p1 = x5_real_read_reg_1264;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_761_p1 = x2_imag_in_sig;
    end else begin
        grp_fu_761_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)))) begin
        grp_fu_767_ce = 1'b1;
    end else begin
        grp_fu_767_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage8)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage8)))) begin
        grp_fu_767_p0 = reg_953;
    end else if ((((1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)))) begin
        grp_fu_767_p0 = reg_930;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage17)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage17)) | ((1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19)) | ((1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19)))) begin
        grp_fu_767_p0 = b_imag_reg_1362_pp0_iter3_reg;
    end else if ((((1'd1 == and_ln82_fu_1085_p2) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage16)) | ((1'd0 == and_ln82_fu_1085_p2) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage16)) | ((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage18)))) begin
        grp_fu_767_p0 = err_real_read_reg_1096_pp0_iter3_reg;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage20))) begin
        grp_fu_767_p0 = reg_936;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_767_p0 = b_imag_reg_1362;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage5)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage4)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage3)))) begin
        grp_fu_767_p0 = err_real_read_reg_1096;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_767_p0 = x8_real_read_reg_1217;
    end else if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_767_p0 = x5_imag_read_reg_1256;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_767_p0 = x3_real_in_sig;
    end else begin
        grp_fu_767_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage8)) | ((1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage8)) | ((1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)))) begin
        grp_fu_767_p1 = mu_read_reg_1333_pp0_iter4_reg;
    end else if ((((1'd1 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19)) | ((1'd0 == and_ln82_reg_1557) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19)))) begin
        grp_fu_767_p1 = x9_real_read_reg_1203_pp0_iter3_reg;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage18)))) begin
        grp_fu_767_p1 = x8_imag_read_reg_1210_pp0_iter3_reg;
    end else if ((((1'd1 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage17)) | ((1'd0 == and_ln82_reg_1557) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage17)))) begin
        grp_fu_767_p1 = x5_real_read_reg_1264_pp0_iter3_reg;
    end else if ((((1'd1 == and_ln82_fu_1085_p2) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage16)) | ((1'd0 == and_ln82_fu_1085_p2) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage16)))) begin
        grp_fu_767_p1 = x3_imag_read_reg_1287_pp0_iter3_reg;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage20))) begin
        grp_fu_767_p1 = mu_read_reg_1333;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_767_p1 = x8_imag_read_reg_1210;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_767_p1 = x9_real_read_reg_1203;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_767_p1 = x7_real_read_reg_1232;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_767_p1 = x2_real_read_reg_1310;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_767_p1 = x8_real_read_reg_1217;
    end else if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_767_p1 = x5_imag_read_reg_1256;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_767_p1 = x3_real_in_sig;
    end else begin
        grp_fu_767_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)))) begin
        grp_fu_773_ce = 1'b1;
    end else begin
        grp_fu_773_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_773_p0 = reg_1020;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_773_p0 = reg_1014;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_773_p0 = reg_1008;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_773_p0 = reg_1002;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15))) begin
        grp_fu_773_p0 = reg_996;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
        grp_fu_773_p0 = reg_990;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
        grp_fu_773_p0 = reg_984;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12))) begin
        grp_fu_773_p0 = reg_978;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11))) begin
        grp_fu_773_p0 = reg_972;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_773_p0 = tmp_25_8_reg_1529_pp0_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23))) begin
        grp_fu_773_p0 = tmp_25_7_reg_1523_pp0_iter3_reg;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage22))) begin
        grp_fu_773_p0 = tmp_25_6_reg_1517_pp0_iter2_reg;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage21))) begin
        grp_fu_773_p0 = tmp_25_5_reg_1511_pp0_iter2_reg;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage20))) begin
        grp_fu_773_p0 = tmp_25_4_reg_1505_pp0_iter2_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19))) begin
        grp_fu_773_p0 = tmp_25_3_reg_1499_pp0_iter2_reg;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage18))) begin
        grp_fu_773_p0 = tmp_25_2_reg_1493_pp0_iter2_reg;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage17))) begin
        grp_fu_773_p0 = tmp_25_1_reg_1487_pp0_iter2_reg;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage16))) begin
        grp_fu_773_p0 = tmp_25_reg_1481_pp0_iter2_reg;
    end else begin
        grp_fu_773_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)))) begin
        grp_fu_773_p1 = norm2_x_8_reg_1550_pp0_iter4_reg;
    end else if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage17)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage16)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage22)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage21)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage20)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_773_p1 = norm2_x_8_reg_1550;
    end else begin
        grp_fu_773_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)))) begin
        grp_fu_777_ce = 1'b1;
    end else begin
        grp_fu_777_ce = 1'b0;
    end
end

always @ (*) begin
    if ((mu_ap_vld == 1'b1)) begin
        mu_ap_vld_in_sig = mu_ap_vld;
    end else begin
        mu_ap_vld_in_sig = mu_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mu_blk_n = mu_ap_vld;
    end else begin
        mu_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((mu_ap_vld == 1'b1)) begin
        mu_in_sig = mu;
    end else begin
        mu_in_sig = mu_preg;
    end
end

always @ (*) begin
    if ((x1_imag_ap_vld == 1'b1)) begin
        x1_imag_ap_vld_in_sig = x1_imag_ap_vld;
    end else begin
        x1_imag_ap_vld_in_sig = x1_imag_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x1_imag_blk_n = x1_imag_ap_vld;
    end else begin
        x1_imag_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((x1_imag_ap_vld == 1'b1)) begin
        x1_imag_in_sig = x1_imag;
    end else begin
        x1_imag_in_sig = x1_imag_preg;
    end
end

always @ (*) begin
    if ((x1_real_ap_vld == 1'b1)) begin
        x1_real_ap_vld_in_sig = x1_real_ap_vld;
    end else begin
        x1_real_ap_vld_in_sig = x1_real_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x1_real_blk_n = x1_real_ap_vld;
    end else begin
        x1_real_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((x1_real_ap_vld == 1'b1)) begin
        x1_real_in_sig = x1_real;
    end else begin
        x1_real_in_sig = x1_real_preg;
    end
end

always @ (*) begin
    if ((x2_imag_ap_vld == 1'b1)) begin
        x2_imag_ap_vld_in_sig = x2_imag_ap_vld;
    end else begin
        x2_imag_ap_vld_in_sig = x2_imag_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x2_imag_blk_n = x2_imag_ap_vld;
    end else begin
        x2_imag_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((x2_imag_ap_vld == 1'b1)) begin
        x2_imag_in_sig = x2_imag;
    end else begin
        x2_imag_in_sig = x2_imag_preg;
    end
end

always @ (*) begin
    if ((x2_real_ap_vld == 1'b1)) begin
        x2_real_ap_vld_in_sig = x2_real_ap_vld;
    end else begin
        x2_real_ap_vld_in_sig = x2_real_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x2_real_blk_n = x2_real_ap_vld;
    end else begin
        x2_real_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((x2_real_ap_vld == 1'b1)) begin
        x2_real_in_sig = x2_real;
    end else begin
        x2_real_in_sig = x2_real_preg;
    end
end

always @ (*) begin
    if ((x3_imag_ap_vld == 1'b1)) begin
        x3_imag_ap_vld_in_sig = x3_imag_ap_vld;
    end else begin
        x3_imag_ap_vld_in_sig = x3_imag_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x3_imag_blk_n = x3_imag_ap_vld;
    end else begin
        x3_imag_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((x3_imag_ap_vld == 1'b1)) begin
        x3_imag_in_sig = x3_imag;
    end else begin
        x3_imag_in_sig = x3_imag_preg;
    end
end

always @ (*) begin
    if ((x3_real_ap_vld == 1'b1)) begin
        x3_real_ap_vld_in_sig = x3_real_ap_vld;
    end else begin
        x3_real_ap_vld_in_sig = x3_real_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x3_real_blk_n = x3_real_ap_vld;
    end else begin
        x3_real_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((x3_real_ap_vld == 1'b1)) begin
        x3_real_in_sig = x3_real;
    end else begin
        x3_real_in_sig = x3_real_preg;
    end
end

always @ (*) begin
    if ((x4_imag_ap_vld == 1'b1)) begin
        x4_imag_ap_vld_in_sig = x4_imag_ap_vld;
    end else begin
        x4_imag_ap_vld_in_sig = x4_imag_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x4_imag_blk_n = x4_imag_ap_vld;
    end else begin
        x4_imag_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((x4_imag_ap_vld == 1'b1)) begin
        x4_imag_in_sig = x4_imag;
    end else begin
        x4_imag_in_sig = x4_imag_preg;
    end
end

always @ (*) begin
    if ((x4_real_ap_vld == 1'b1)) begin
        x4_real_ap_vld_in_sig = x4_real_ap_vld;
    end else begin
        x4_real_ap_vld_in_sig = x4_real_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x4_real_blk_n = x4_real_ap_vld;
    end else begin
        x4_real_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((x4_real_ap_vld == 1'b1)) begin
        x4_real_in_sig = x4_real;
    end else begin
        x4_real_in_sig = x4_real_preg;
    end
end

always @ (*) begin
    if ((x5_imag_ap_vld == 1'b1)) begin
        x5_imag_ap_vld_in_sig = x5_imag_ap_vld;
    end else begin
        x5_imag_ap_vld_in_sig = x5_imag_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x5_imag_blk_n = x5_imag_ap_vld;
    end else begin
        x5_imag_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((x5_imag_ap_vld == 1'b1)) begin
        x5_imag_in_sig = x5_imag;
    end else begin
        x5_imag_in_sig = x5_imag_preg;
    end
end

always @ (*) begin
    if ((x5_real_ap_vld == 1'b1)) begin
        x5_real_ap_vld_in_sig = x5_real_ap_vld;
    end else begin
        x5_real_ap_vld_in_sig = x5_real_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x5_real_blk_n = x5_real_ap_vld;
    end else begin
        x5_real_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((x5_real_ap_vld == 1'b1)) begin
        x5_real_in_sig = x5_real;
    end else begin
        x5_real_in_sig = x5_real_preg;
    end
end

always @ (*) begin
    if ((x6_imag_ap_vld == 1'b1)) begin
        x6_imag_ap_vld_in_sig = x6_imag_ap_vld;
    end else begin
        x6_imag_ap_vld_in_sig = x6_imag_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x6_imag_blk_n = x6_imag_ap_vld;
    end else begin
        x6_imag_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((x6_imag_ap_vld == 1'b1)) begin
        x6_imag_in_sig = x6_imag;
    end else begin
        x6_imag_in_sig = x6_imag_preg;
    end
end

always @ (*) begin
    if ((x6_real_ap_vld == 1'b1)) begin
        x6_real_ap_vld_in_sig = x6_real_ap_vld;
    end else begin
        x6_real_ap_vld_in_sig = x6_real_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x6_real_blk_n = x6_real_ap_vld;
    end else begin
        x6_real_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((x6_real_ap_vld == 1'b1)) begin
        x6_real_in_sig = x6_real;
    end else begin
        x6_real_in_sig = x6_real_preg;
    end
end

always @ (*) begin
    if ((x7_imag_ap_vld == 1'b1)) begin
        x7_imag_ap_vld_in_sig = x7_imag_ap_vld;
    end else begin
        x7_imag_ap_vld_in_sig = x7_imag_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x7_imag_blk_n = x7_imag_ap_vld;
    end else begin
        x7_imag_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((x7_imag_ap_vld == 1'b1)) begin
        x7_imag_in_sig = x7_imag;
    end else begin
        x7_imag_in_sig = x7_imag_preg;
    end
end

always @ (*) begin
    if ((x7_real_ap_vld == 1'b1)) begin
        x7_real_ap_vld_in_sig = x7_real_ap_vld;
    end else begin
        x7_real_ap_vld_in_sig = x7_real_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x7_real_blk_n = x7_real_ap_vld;
    end else begin
        x7_real_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((x7_real_ap_vld == 1'b1)) begin
        x7_real_in_sig = x7_real;
    end else begin
        x7_real_in_sig = x7_real_preg;
    end
end

always @ (*) begin
    if ((x8_imag_ap_vld == 1'b1)) begin
        x8_imag_ap_vld_in_sig = x8_imag_ap_vld;
    end else begin
        x8_imag_ap_vld_in_sig = x8_imag_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x8_imag_blk_n = x8_imag_ap_vld;
    end else begin
        x8_imag_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((x8_imag_ap_vld == 1'b1)) begin
        x8_imag_in_sig = x8_imag;
    end else begin
        x8_imag_in_sig = x8_imag_preg;
    end
end

always @ (*) begin
    if ((x8_real_ap_vld == 1'b1)) begin
        x8_real_ap_vld_in_sig = x8_real_ap_vld;
    end else begin
        x8_real_ap_vld_in_sig = x8_real_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x8_real_blk_n = x8_real_ap_vld;
    end else begin
        x8_real_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((x8_real_ap_vld == 1'b1)) begin
        x8_real_in_sig = x8_real;
    end else begin
        x8_real_in_sig = x8_real_preg;
    end
end

always @ (*) begin
    if ((x9_imag_ap_vld == 1'b1)) begin
        x9_imag_ap_vld_in_sig = x9_imag_ap_vld;
    end else begin
        x9_imag_ap_vld_in_sig = x9_imag_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x9_imag_blk_n = x9_imag_ap_vld;
    end else begin
        x9_imag_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((x9_imag_ap_vld == 1'b1)) begin
        x9_imag_in_sig = x9_imag;
    end else begin
        x9_imag_in_sig = x9_imag_preg;
    end
end

always @ (*) begin
    if ((x9_real_ap_vld == 1'b1)) begin
        x9_real_ap_vld_in_sig = x9_real_ap_vld;
    end else begin
        x9_real_ap_vld_in_sig = x9_real_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x9_real_blk_n = x9_real_ap_vld;
    end else begin
        x9_real_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((x9_real_ap_vld == 1'b1)) begin
        x9_real_in_sig = x9_real;
    end else begin
        x9_real_in_sig = x9_real_preg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if (((ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign W1_imag = grp_fu_698_p2;

assign W1_real = grp_fu_694_p2;

assign W2_imag = grp_fu_698_p2;

assign W2_real = grp_fu_694_p2;

assign W3_imag = grp_fu_702_p2;

assign W3_real = grp_fu_702_p2;

assign W4_imag = grp_fu_698_p2;

assign W4_real = grp_fu_694_p2;

assign W5_imag = grp_fu_698_p2;

assign W5_real = grp_fu_702_p2;

assign W6_imag = grp_fu_698_p2;

assign W6_real = grp_fu_694_p2;

assign W7_imag = grp_fu_698_p2;

assign W7_real = grp_fu_694_p2;

assign W8_imag = grp_fu_698_p2;

assign W8_real = grp_fu_694_p2;

assign W9_imag = grp_fu_698_p2;

assign W9_real = grp_fu_694_p2;

assign and_ln82_fu_1085_p2 = (or_ln82_fu_1079_p2 & grp_fu_777_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = ((1'b1 == 1'b1) & ((x4_imag_ap_vld_in_sig == 1'b0) | (x4_real_ap_vld_in_sig == 1'b0) | (x3_imag_ap_vld_in_sig == 1'b0) | (x3_real_ap_vld_in_sig == 1'b0) | (x2_imag_ap_vld_in_sig == 1'b0) | (x2_real_ap_vld_in_sig == 1'b0) | (x1_imag_ap_vld_in_sig == 1'b0) | (x1_real_ap_vld_in_sig == 1'b0) | (mu_ap_vld_in_sig == 1'b0) | (err_imag_ap_vld_in_sig == 1'b0) | (err_real_ap_vld_in_sig == 1'b0) | (1'b0 == W9_old_imag_ap_vld_in_sig) | (1'b0 == W9_old_real_ap_vld_in_sig) | (1'b0 == W8_old_imag_ap_vld_in_sig) | (1'b0 == W8_old_real_ap_vld_in_sig) | (1'b0 == W7_old_imag_ap_vld_in_sig) | (1'b0 == W7_old_real_ap_vld_in_sig) | (1'b0 == W6_old_imag_ap_vld_in_sig) | (1'b0 == W6_old_real_ap_vld_in_sig) | (1'b0 == W5_old_imag_ap_vld_in_sig) | (1'b0 == W5_old_real_ap_vld_in_sig) | (1'b0 == W4_old_imag_ap_vld_in_sig) | (1'b0 == W4_old_real_ap_vld_in_sig) | (1'b0 == W3_old_imag_ap_vld_in_sig) | (1'b0 == W3_old_real_ap_vld_in_sig) | (1'b0 == W2_old_imag_ap_vld_in_sig) | (1'b0 == W2_old_real_ap_vld_in_sig) | (1'b0 == W1_old_imag_ap_vld_in_sig) | (1'b0 == W1_old_real_ap_vld_in_sig) | (x9_imag_ap_vld_in_sig == 1'b0) | (x9_real_ap_vld_in_sig == 1'b0) | (x8_imag_ap_vld_in_sig == 1'b0) | (x8_real_ap_vld_in_sig == 1'b0) | (x7_imag_ap_vld_in_sig == 1'b0) | (x7_real_ap_vld_in_sig == 1'b0) | (x6_imag_ap_vld_in_sig == 1'b0) | (x6_real_ap_vld_in_sig == 1'b0) | (x5_imag_ap_vld_in_sig == 1'b0) | (x5_real_ap_vld_in_sig == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((1'b1 == 1'b1) & ((x4_imag_ap_vld_in_sig == 1'b0) | (x4_real_ap_vld_in_sig == 1'b0) | (x3_imag_ap_vld_in_sig == 1'b0) | (x3_real_ap_vld_in_sig == 1'b0) | (x2_imag_ap_vld_in_sig == 1'b0) | (x2_real_ap_vld_in_sig == 1'b0) | (x1_imag_ap_vld_in_sig == 1'b0) | (x1_real_ap_vld_in_sig == 1'b0) | (mu_ap_vld_in_sig == 1'b0) | (err_imag_ap_vld_in_sig == 1'b0) | (err_real_ap_vld_in_sig == 1'b0) | (1'b0 == W9_old_imag_ap_vld_in_sig) | (1'b0 == W9_old_real_ap_vld_in_sig) | (1'b0 == W8_old_imag_ap_vld_in_sig) | (1'b0 == W8_old_real_ap_vld_in_sig) | (1'b0 == W7_old_imag_ap_vld_in_sig) | (1'b0 == W7_old_real_ap_vld_in_sig) | (1'b0 == W6_old_imag_ap_vld_in_sig) | (1'b0 == W6_old_real_ap_vld_in_sig) | (1'b0 == W5_old_imag_ap_vld_in_sig) | (1'b0 == W5_old_real_ap_vld_in_sig) | (1'b0 == W4_old_imag_ap_vld_in_sig) | (1'b0 == W4_old_real_ap_vld_in_sig) | (1'b0 == W3_old_imag_ap_vld_in_sig) | (1'b0 == W3_old_real_ap_vld_in_sig) | (1'b0 == W2_old_imag_ap_vld_in_sig) | (1'b0 == W2_old_real_ap_vld_in_sig) | (1'b0 == W1_old_imag_ap_vld_in_sig) | (1'b0 == W1_old_real_ap_vld_in_sig) | (x9_imag_ap_vld_in_sig == 1'b0) | (x9_real_ap_vld_in_sig == 1'b0) | (x8_imag_ap_vld_in_sig == 1'b0) | (x8_real_ap_vld_in_sig == 1'b0) | (x7_imag_ap_vld_in_sig == 1'b0) | (x7_real_ap_vld_in_sig == 1'b0) | (x6_imag_ap_vld_in_sig == 1'b0) | (x6_real_ap_vld_in_sig == 1'b0) | (x5_imag_ap_vld_in_sig == 1'b0) | (x5_real_ap_vld_in_sig == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((1'b1 == 1'b1) & ((x4_imag_ap_vld_in_sig == 1'b0) | (x4_real_ap_vld_in_sig == 1'b0) | (x3_imag_ap_vld_in_sig == 1'b0) | (x3_real_ap_vld_in_sig == 1'b0) | (x2_imag_ap_vld_in_sig == 1'b0) | (x2_real_ap_vld_in_sig == 1'b0) | (x1_imag_ap_vld_in_sig == 1'b0) | (x1_real_ap_vld_in_sig == 1'b0) | (mu_ap_vld_in_sig == 1'b0) | (err_imag_ap_vld_in_sig == 1'b0) | (err_real_ap_vld_in_sig == 1'b0) | (1'b0 == W9_old_imag_ap_vld_in_sig) | (1'b0 == W9_old_real_ap_vld_in_sig) | (1'b0 == W8_old_imag_ap_vld_in_sig) | (1'b0 == W8_old_real_ap_vld_in_sig) | (1'b0 == W7_old_imag_ap_vld_in_sig) | (1'b0 == W7_old_real_ap_vld_in_sig) | (1'b0 == W6_old_imag_ap_vld_in_sig) | (1'b0 == W6_old_real_ap_vld_in_sig) | (1'b0 == W5_old_imag_ap_vld_in_sig) | (1'b0 == W5_old_real_ap_vld_in_sig) | (1'b0 == W4_old_imag_ap_vld_in_sig) | (1'b0 == W4_old_real_ap_vld_in_sig) | (1'b0 == W3_old_imag_ap_vld_in_sig) | (1'b0 == W3_old_real_ap_vld_in_sig) | (1'b0 == W2_old_imag_ap_vld_in_sig) | (1'b0 == W2_old_real_ap_vld_in_sig) | (1'b0 == W1_old_imag_ap_vld_in_sig) | (1'b0 == W1_old_real_ap_vld_in_sig) | (x9_imag_ap_vld_in_sig == 1'b0) | (x9_real_ap_vld_in_sig == 1'b0) | (x8_imag_ap_vld_in_sig == 1'b0) | (x8_real_ap_vld_in_sig == 1'b0) | (x7_imag_ap_vld_in_sig == 1'b0) | (x7_real_ap_vld_in_sig == 1'b0) | (x6_imag_ap_vld_in_sig == 1'b0) | (x6_real_ap_vld_in_sig == 1'b0) | (x5_imag_ap_vld_in_sig == 1'b0) | (x5_real_ap_vld_in_sig == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b1 == 1'b1) & ((x4_imag_ap_vld_in_sig == 1'b0) | (x4_real_ap_vld_in_sig == 1'b0) | (x3_imag_ap_vld_in_sig == 1'b0) | (x3_real_ap_vld_in_sig == 1'b0) | (x2_imag_ap_vld_in_sig == 1'b0) | (x2_real_ap_vld_in_sig == 1'b0) | (x1_imag_ap_vld_in_sig == 1'b0) | (x1_real_ap_vld_in_sig == 1'b0) | (mu_ap_vld_in_sig == 1'b0) | (err_imag_ap_vld_in_sig == 1'b0) | (err_real_ap_vld_in_sig == 1'b0) | (1'b0 == W9_old_imag_ap_vld_in_sig) | (1'b0 == W9_old_real_ap_vld_in_sig) | (1'b0 == W8_old_imag_ap_vld_in_sig) | (1'b0 == W8_old_real_ap_vld_in_sig) | (1'b0 == W7_old_imag_ap_vld_in_sig) | (1'b0 == W7_old_real_ap_vld_in_sig) | (1'b0 == W6_old_imag_ap_vld_in_sig) | (1'b0 == W6_old_real_ap_vld_in_sig) | (1'b0 == W5_old_imag_ap_vld_in_sig) | (1'b0 == W5_old_real_ap_vld_in_sig) | (1'b0 == W4_old_imag_ap_vld_in_sig) | (1'b0 == W4_old_real_ap_vld_in_sig) | (1'b0 == W3_old_imag_ap_vld_in_sig) | (1'b0 == W3_old_real_ap_vld_in_sig) | (1'b0 == W2_old_imag_ap_vld_in_sig) | (1'b0 == W2_old_real_ap_vld_in_sig) | (1'b0 == W1_old_imag_ap_vld_in_sig) | (1'b0 == W1_old_real_ap_vld_in_sig) | (x9_imag_ap_vld_in_sig == 1'b0) | (x9_real_ap_vld_in_sig == 1'b0) | (x8_imag_ap_vld_in_sig == 1'b0) | (x8_real_ap_vld_in_sig == 1'b0) | (x7_imag_ap_vld_in_sig == 1'b0) | (x7_real_ap_vld_in_sig == 1'b0) | (x6_imag_ap_vld_in_sig == 1'b0) | (x6_real_ap_vld_in_sig == 1'b0) | (x5_imag_ap_vld_in_sig == 1'b0) | (x5_real_ap_vld_in_sig == 1'b0)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state100_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp0_stage8_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp0_stage9_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp0_stage10_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp0_stage11_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp0_stage12_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state110_pp0_stage13_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp0_stage14_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp0_stage15_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state113_pp0_stage16_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp0_stage17_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state115_pp0_stage18_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state116_pp0_stage19_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state117_pp0_stage20_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state118_pp0_stage21_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state119_pp0_stage22_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state120_pp0_stage23_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state121_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state122_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state123_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state124_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state125_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state126_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state127_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state128_pp0_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state129_pp0_stage8_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state130_pp0_stage9_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state131_pp0_stage10_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state132_pp0_stage11_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state133_pp0_stage12_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state134_pp0_stage13_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state135_pp0_stage14_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state136_pp0_stage15_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state137_pp0_stage16_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state138_pp0_stage17_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state139_pp0_stage18_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state140_pp0_stage19_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state141_pp0_stage20_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state142_pp0_stage21_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state143_pp0_stage22_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state144_pp0_stage23_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state145_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state146_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state147_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state148_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state149_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state150_pp0_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state151_pp0_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state152_pp0_stage7_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((x4_imag_ap_vld_in_sig == 1'b0) | (x4_real_ap_vld_in_sig == 1'b0) | (x3_imag_ap_vld_in_sig == 1'b0) | (x3_real_ap_vld_in_sig == 1'b0) | (x2_imag_ap_vld_in_sig == 1'b0) | (x2_real_ap_vld_in_sig == 1'b0) | (x1_imag_ap_vld_in_sig == 1'b0) | (x1_real_ap_vld_in_sig == 1'b0) | (mu_ap_vld_in_sig == 1'b0) | (err_imag_ap_vld_in_sig == 1'b0) | (err_real_ap_vld_in_sig == 1'b0) | (1'b0 == W9_old_imag_ap_vld_in_sig) | (1'b0 == W9_old_real_ap_vld_in_sig) | (1'b0 == W8_old_imag_ap_vld_in_sig) | (1'b0 == W8_old_real_ap_vld_in_sig) | (1'b0 == W7_old_imag_ap_vld_in_sig) | (1'b0 == W7_old_real_ap_vld_in_sig) | (1'b0 == W6_old_imag_ap_vld_in_sig) | (1'b0 == W6_old_real_ap_vld_in_sig) | (1'b0 == W5_old_imag_ap_vld_in_sig) | (1'b0 == W5_old_real_ap_vld_in_sig) | (1'b0 == W4_old_imag_ap_vld_in_sig) | (1'b0 == W4_old_real_ap_vld_in_sig) | (1'b0 == W3_old_imag_ap_vld_in_sig) | (1'b0 == W3_old_real_ap_vld_in_sig) | (1'b0 == W2_old_imag_ap_vld_in_sig) | (1'b0 == W2_old_real_ap_vld_in_sig) | (1'b0 == W1_old_imag_ap_vld_in_sig) | (1'b0 == W1_old_real_ap_vld_in_sig) | (x9_imag_ap_vld_in_sig == 1'b0) | (x9_real_ap_vld_in_sig == 1'b0) | (x8_imag_ap_vld_in_sig == 1'b0) | (x8_real_ap_vld_in_sig == 1'b0) | (x7_imag_ap_vld_in_sig == 1'b0) | (x7_real_ap_vld_in_sig == 1'b0) | (x6_imag_ap_vld_in_sig == 1'b0) | (x6_real_ap_vld_in_sig == 1'b0) | (x5_imag_ap_vld_in_sig == 1'b0) | (x5_real_ap_vld_in_sig == 1'b0));
end

assign ap_block_state20_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage14_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage15_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage16_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage17_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage18_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage19_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage20_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage21_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage22_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage23_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage9_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage10_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage11_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage12_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage13_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage14_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage15_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage16_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage17_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage18_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage19_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage20_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage21_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage22_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage23_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage8_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage9_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage10_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage11_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage12_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage13_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp0_stage14_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp0_stage15_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp0_stage16_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp0_stage17_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp0_stage18_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp0_stage19_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp0_stage20_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp0_stage21_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp0_stage22_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp0_stage23_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_w_imag_load_1_reg_534 = 'bx;

assign ap_phi_reg_pp0_iter0_w_imag_load_2_reg_554 = 'bx;

assign ap_phi_reg_pp0_iter0_w_imag_load_3_reg_574 = 'bx;

assign ap_phi_reg_pp0_iter0_w_imag_load_4_reg_594 = 'bx;

assign ap_phi_reg_pp0_iter0_w_imag_load_5_reg_614 = 'bx;

assign ap_phi_reg_pp0_iter0_w_imag_load_6_reg_634 = 'bx;

assign ap_phi_reg_pp0_iter0_w_imag_load_7_reg_654 = 'bx;

assign ap_phi_reg_pp0_iter0_w_imag_load_8_reg_674 = 'bx;

assign ap_phi_reg_pp0_iter0_w_imag_load_reg_514 = 'bx;

assign ap_phi_reg_pp0_iter0_w_real_load_1_reg_544 = 'bx;

assign ap_phi_reg_pp0_iter0_w_real_load_2_reg_564 = 'bx;

assign ap_phi_reg_pp0_iter0_w_real_load_3_reg_584 = 'bx;

assign ap_phi_reg_pp0_iter0_w_real_load_4_reg_604 = 'bx;

assign ap_phi_reg_pp0_iter0_w_real_load_5_reg_624 = 'bx;

assign ap_phi_reg_pp0_iter0_w_real_load_6_reg_644 = 'bx;

assign ap_phi_reg_pp0_iter0_w_real_load_7_reg_664 = 'bx;

assign ap_phi_reg_pp0_iter0_w_real_load_8_reg_684 = 'bx;

assign ap_phi_reg_pp0_iter0_w_real_load_reg_524 = 'bx;

assign b_imag_fu_1044_p1 = xor_ln14_reg_1357;

assign bitcast_ln14_fu_1035_p1 = err_imag_read_reg_1091;

assign bitcast_ln82_fu_1050_p1 = norm2_x_8_reg_1550;

assign icmp_ln82_1_fu_1073_p2 = ((trunc_ln82_fu_1063_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_1067_p2 = ((tmp_fu_1053_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln82_fu_1079_p2 = (icmp_ln82_fu_1067_p2 | icmp_ln82_1_fu_1073_p2);

assign tmp_fu_1053_p4 = {{bitcast_ln82_fu_1050_p1[30:23]}};

assign trunc_ln82_fu_1063_p1 = bitcast_ln82_fu_1050_p1[22:0];

assign xor_ln14_fu_1038_p2 = (bitcast_ln14_fu_1035_p1 ^ 32'd2147483648);

endmodule //Wb
